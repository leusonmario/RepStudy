import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test01001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01001");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        boolean boolean23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000000 + "'", int20 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 30000L + "'", long22 == 30000L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test01002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01002");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder28.build();
        java.lang.String str34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setMaxRetries(2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
    }

    @Test
    public void test01003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01003");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
    }

    @Test
    public void test01004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01004");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.Comparable<java.lang.String>> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.Comparable<java.lang.String>>("hi!", strSerializableDeserializer1, strComparableSerializableDeserializer2, pattern3);
    }

    @Test
    public void test01005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01005");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder34.build();
        java.lang.String str40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator41, fields42, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder18.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer54 = null;
        java.util.regex.Pattern pattern55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer53, charSequenceSerializableDeserializer54, pattern55);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc59 = null;
        org.apache.storm.tuple.Fields fields60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc59, fields60, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig63 = kafkaSpoutRetryServiceBuilder58.build();
        long long64 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy65 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription66 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getSubscription();
        int int67 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy68 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy69 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getFirstPollOffsetStrategy();
        java.lang.String str70 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getConsumerGroupId();
        boolean boolean71 = kafkaSpoutRetryServiceKafkaSpoutConfig63.isConsumerAutoCommitMode();
        int int72 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getMaxTupleRetries();
        long long73 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getTranslator();
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields75, "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 200L + "'", long64 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy65 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy65.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2147483647 + "'", int67 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy68 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy68.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy69 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy69.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2147483647 + "'", int72 == 2147483647);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 2000L + "'", long73 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
    }

    @Test
    public void test01006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01006");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder17.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc41 = null;
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc41, fields42, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig45 = kafkaSpoutRetryServiceBuilder40.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getTranslator();
        long long47 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer48 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getKeyDeserializer();
        long long49 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer50 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getKeyDeserializer();
        long long51 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getOffsetsCommitPeriodMs();
        int int52 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder29.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc62 = null;
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc62, fields63, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder61.build();
        long long67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy69 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription70 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getSubscription();
        java.lang.String str71 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder54.setProp(strMap72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder24.setProp(strMap72);
        java.lang.Class<?> wildcardClass75 = strMap72.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 200L + "'", long47 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 30000L + "'", long49 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 30000L + "'", long51 == 30000L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2147483647 + "'", int52 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 200L + "'", long67 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy69 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy69.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test01007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01007");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getOffsetsCommitPeriodMs();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig31.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder17.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder17.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder17.setPollTimeoutMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc50 = null;
        org.apache.storm.tuple.Fields fields51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc50, fields51, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig54 = kafkaSpoutRetryServiceBuilder49.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getTranslator();
        long long56 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService57 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getRetryService();
        int int58 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getMaxUncommittedOffsets();
        long long59 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService60 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder42.setRetry(kafkaSpoutRetryService60);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, charSequenceSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder68.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer74 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer75 = null;
        java.util.regex.Pattern pattern76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer74, charSequenceSerializableDeserializer75, pattern76);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator78);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc80 = null;
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder79.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc80, fields81, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig84 = kafkaSpoutRetryServiceBuilder79.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator85 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getTranslator();
        long long86 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getPollTimeoutMs();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap88 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer89 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription90 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getSubscription();
        int int91 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy92 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder72.setFirstPollOffsetStrategy(firstPollOffsetStrategy92);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder42.setFirstPollOffsetStrategy(firstPollOffsetStrategy92);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder42.setMaxRetries((int) (short) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 200L + "'", long34 == 200L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 30000L + "'", long35 == 30000L);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 200L + "'", long56 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10000000 + "'", int58 == 10000000);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 30000L + "'", long59 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator85);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 200L + "'", long86 == 200L);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 200L + "'", long87 == 200L);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNull(charSequenceDeserializer89);
        org.junit.Assert.assertNotNull(subscription90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 2147483647 + "'", int91 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy92 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy92.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
    }

    @Test
    public void test01008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01008");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        long long30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPollTimeoutMs();
        boolean boolean31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder16.setProp(strMap32);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc41 = null;
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc41, fields42, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig45 = kafkaSpoutRetryServiceBuilder40.build();
        java.lang.String str46 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder11.build();
        long long52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getOffsetsCommitPeriodMs();
        long long53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 200L + "'", long30 == 200L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 2000L + "'", long53 == 2000L);
        org.junit.Assert.assertNotNull(subscription54);
        org.junit.Assert.assertNotNull(subscription55);
    }

    @Test
    public void test01009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01009");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords((int) (short) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setProp(strMap21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
    }

    @Test
    public void test01010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01010");
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test01011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01011");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, charSequenceSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setFirstPollOffsetStrategy(firstPollOffsetStrategy35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder42.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder48.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder51.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder51.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder34.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder51);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer64 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer65 = null;
        java.util.regex.Pattern pattern66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer64, charSequenceSerializableDeserializer65, pattern66);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator68);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc70 = null;
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc70, fields71, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig74 = kafkaSpoutRetryServiceBuilder69.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getTranslator();
        long long76 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService77 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer78 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator80 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getTranslator();
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator80, fields81, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy35 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy35.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 200L + "'", long76 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService77);
        org.junit.Assert.assertNull(charSequenceDeserializer78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
    }

    @Test
    public void test01012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01012");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder28.build();
        java.lang.String str34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getConsumerGroupId();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getPollTimeoutMs();
        boolean boolean36 = kafkaSpoutRetryServiceKafkaSpoutConfig33.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService37 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder19.setRetry(kafkaSpoutRetryService37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setMaxPartitionFectchBytes(100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 200L + "'", long35 == 200L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
    }

    @Test
    public void test01013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01013");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 30000L + "'", long20 == 30000L);
    }

    @Test
    public void test01014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01014");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer6 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.RandomAccess> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.RandomAccess>("hi!", strSerializableDeserializer5, randomAccessSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> genericDeclarationBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("hi!", genericDeclarationSerializableDeserializer2, kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test01015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01015");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setMaxRetries(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setMaxRetries((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setMaxPollRecords((int) (short) 1);
        java.lang.Class<?> wildcardClass28 = kafkaSpoutRetryServiceBuilder27.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test01016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01016");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> randomAccessBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>>("hi!", randomAccessSerializableDeserializer1, kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer2, pattern3);
    }

    @Test
    public void test01017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01017");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, strArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.List<java.lang.String>> strListBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.List<java.lang.String>>("", strListSerializableDeserializer1, strListSerializableDeserializer2, strArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test01018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01018");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        java.util.Collection<java.lang.String> strCollection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.ArrayList<java.lang.String>> strCollectionBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.ArrayList<java.lang.String>>("hi!", strCollectionSerializableDeserializer1, strListSerializableDeserializer2, strCollection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01019");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Iterable<java.lang.String>> strIterableBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Iterable<java.lang.String>>("", strIterableSerializableDeserializer1, strIterableSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test01020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01020");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        boolean boolean20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.Class<?> wildcardClass21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test01021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01021");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder22.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc45 = null;
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc45, fields46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder58.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder58.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy67 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setFirstPollOffsetStrategy(firstPollOffsetStrategy67);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService69 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setRetry(kafkaSpoutRetryService69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder49.setRetry(kafkaSpoutRetryService69);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer73 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer74 = null;
        java.util.regex.Pattern pattern75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer73, charSequenceSerializableDeserializer74, pattern75);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator77);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc79 = null;
        org.apache.storm.tuple.Fields fields80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc79, fields80, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig83 = kafkaSpoutRetryServiceBuilder78.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator84 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        long long85 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService86 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer87 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator88 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields89);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator88);
        org.apache.storm.tuple.Fields fields92 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields92);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig97 = kafkaSpoutRetryServiceBuilder96.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator98 = kafkaSpoutRetryServiceKafkaSpoutConfig97.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy67 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy67.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 200L + "'", long85 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService86);
        org.junit.Assert.assertNull(charSequenceDeserializer87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator98);
    }

    @Test
    public void test01022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01022");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test01023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01023");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test01024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01024");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder11.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder19.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder19.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder35.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder35.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer49 = null;
        java.util.regex.Pattern pattern50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, charSequenceSerializableDeserializer49, pattern50);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc56 = null;
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc56, fields57, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder55.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, charSequenceSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc69 = null;
        org.apache.storm.tuple.Fields fields70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc69, fields70, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder68.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getTranslator();
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields75, "hi!");
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields78, "");
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields81, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder83.setMaxRetries(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder85.setMaxRetries((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder87.setGroupId("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
    }

    @Test
    public void test01025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01025");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000000 + "'", int15 == 10000000);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService18);
    }

    @Test
    public void test01026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01026");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        java.lang.Class<?> wildcardClass16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test01027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01027");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, charSequenceSerializableDeserializer9, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strCollectionBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strCollectionSerializableDeserializer5, firstPollOffsetStrategySerializableDeserializer6, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test01028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01028");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder15.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "");
        java.util.Properties properties24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setProp(properties24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
    }

    @Test
    public void test01029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01029");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
    }

    @Test
    public void test01030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01030");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc42 = null;
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc42, fields43, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig46 = kafkaSpoutRetryServiceBuilder41.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator48, fields49, "hi!");
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator48, fields52);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc62 = null;
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc62, fields63, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder61.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        long long68 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getPollTimeoutMs();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getPollTimeoutMs();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getOffsetsCommitPeriodMs();
        java.lang.String str71 = kafkaSpoutRetryServiceKafkaSpoutConfig66.toString();
        java.lang.String str72 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getConsumerGroupId();
        boolean boolean73 = kafkaSpoutRetryServiceKafkaSpoutConfig66.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder53.setProp("", (java.lang.Object) boolean73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy75 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setFirstPollOffsetStrategy(firstPollOffsetStrategy75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder76.setSSLTruststore("", "");
        java.lang.Class<?> wildcardClass80 = kafkaSpoutRetryServiceBuilder79.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 200L + "'", long68 == 200L);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 30000L + "'", long70 == 30000L);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy75 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy75.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test01031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01031");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer7 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.reflect.GenericDeclaration> genericDeclarationBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.reflect.GenericDeclaration>("hi!", genericDeclarationSerializableDeserializer6, genericDeclarationSerializableDeserializer7, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test01032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01032");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc28 = null;
        org.apache.storm.tuple.Fields fields29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc28, fields29, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder27.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder27.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder27.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder39.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig46 = kafkaSpoutRetryServiceBuilder45.build();
        long long47 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getOffsetsCommitPeriodMs();
        long long48 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder17.setProp("", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((int) (short) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 200L + "'", long47 == 200L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 2000L + "'", long48 == 2000L);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
    }

    @Test
    public void test01033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01033");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        boolean boolean34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder19.setProp(strMap35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder6.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder19);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder58.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder64.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder67.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder67.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder52.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder52.setPollTimeoutMs(0L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
    }

    @Test
    public void test01034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01034");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000000 + "'", int20 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test01035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01035");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder21.setGroupId("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
    }

    @Test
    public void test01036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01036");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000000 + "'", int18 == 10000000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
    }

    @Test
    public void test01037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01037");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc45 = null;
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig49 = kafkaSpoutRetryServiceBuilder44.build();
        long long50 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription52 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass57 = kafkaSpoutRetryServiceBuilder56.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 200L + "'", long50 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test01038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01038");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer2 = null;
        java.util.Collection<java.lang.String> strCollection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.util.AbstractList<java.lang.String>> randomAccessBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.util.AbstractList<java.lang.String>>("hi!", randomAccessSerializableDeserializer1, strListSerializableDeserializer2, strCollection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01039");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.util.AbstractList<java.lang.String>> firstPollOffsetStrategyBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.util.AbstractList<java.lang.String>>("", firstPollOffsetStrategySerializableDeserializer1, strListSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01040");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> annotatedElementBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>>("hi!", annotatedElementSerializableDeserializer1, kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer2, pattern3);
    }

    @Test
    public void test01041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01041");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder4.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc32 = null;
        org.apache.storm.tuple.Fields fields33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc32, fields33, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder31.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService39 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getRetryService();
        java.lang.String str40 = kafkaSpoutRetryServiceKafkaSpoutConfig36.toString();
        boolean boolean41 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        long long42 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer43 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getValueDeserializer();
        boolean boolean44 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer45 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setMaxPartitionFectchBytes(0);
        java.util.Properties properties52 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setProp(properties52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 200L + "'", long38 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 2000L + "'", long42 == 2000L);
        org.junit.Assert.assertNull(charSequenceDeserializer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(charSequenceDeserializer45);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
    }

    @Test
    public void test01042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01042");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 30000L + "'", long19 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator20);
        org.junit.Assert.assertNull(charSequenceDeserializer21);
    }

    @Test
    public void test01043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01043");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        long long31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService32 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getRetryService();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getPollTimeoutMs();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getOffsetsCommitPeriodMs();
        java.lang.String str35 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription36 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getSubscription();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 200L + "'", long31 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 30000L + "'", long34 == 30000L);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(subscription36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
    }

    @Test
    public void test01044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01044");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder15.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder30.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder33.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
    }

    @Test
    public void test01045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01045");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKafkaProps();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.isConsumerAutoCommitMode();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.toString();
        boolean boolean21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.isConsumerAutoCommitMode();
        java.lang.String str22 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription23 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(subscription23);
    }

    @Test
    public void test01046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01046");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        boolean boolean17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
    }

    @Test
    public void test01047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01047");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder23.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder23.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder35.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder41.build();
        long long43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getOffsetsCommitPeriodMs();
        int int44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService45 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 200L + "'", long43 == 200L);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
    }

    @Test
    public void test01048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01048");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.util.AbstractCollection<java.lang.String>> randomAccessBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.util.AbstractCollection<java.lang.String>>("hi!", randomAccessSerializableDeserializer1, strCollectionSerializableDeserializer2, pattern3);
    }

    @Test
    public void test01049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01049");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setMaxUncommittedOffsets(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, charSequenceSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder30.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder30.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRetry(kafkaSpoutRetryService41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder38.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer54 = null;
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer53, charSequenceSerializableDeserializer54, (java.util.Collection<java.lang.String>) strList58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig62 = kafkaSpoutRetryServiceBuilder61.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer63 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService64 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getRetryService();
        int int65 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getMaxUncommittedOffsets();
        int int66 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy67 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy68 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer69 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator70 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService71 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder51.setRetry(kafkaSpoutRetryService71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder25.setRetry(kafkaSpoutRetryService71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig62);
        org.junit.Assert.assertNull(charSequenceDeserializer63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10000000 + "'", int65 == 10000000);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2147483647 + "'", int66 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy67 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy67.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy68 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy68.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(charSequenceDeserializer69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
    }

    @Test
    public void test01050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01050");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setProp(strMap16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
    }

    @Test
    public void test01051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01051");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test01052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01052");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLTruststore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
    }

    @Test
    public void test01053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01053");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder10.setMaxPollRecords((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder35.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        long long42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer43 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getKeyDeserializer();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer45 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getKeyDeserializer();
        long long46 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getOffsetsCommitPeriodMs();
        int int47 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService48 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder10.setRetry(kafkaSpoutRetryService48);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder56.build();
        long long62 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer64 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService65 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getRetryService();
        int int66 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService67 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService68 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getTranslator();
        org.apache.storm.tuple.Fields fields70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator69, fields70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 200L + "'", long42 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 30000L + "'", long44 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 30000L + "'", long46 == 30000L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2147483647 + "'", int47 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 200L + "'", long62 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator63);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10000000 + "'", int66 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
    }

    @Test
    public void test01054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01054");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.Cloneable> objBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.Cloneable>("hi!", objSerializableDeserializer1, cloneableSerializableDeserializer2, pattern3);
    }

    @Test
    public void test01055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01055");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) ' ');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
    }

    @Test
    public void test01056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01056");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, charSequenceSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder42.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder48.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields69, "");
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields72, "");
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setFetchMinBytes((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder76.setPollTimeoutMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder80.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer84 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer85 = null;
        java.util.regex.Pattern pattern86 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer84, charSequenceSerializableDeserializer85, pattern86);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator88 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder87.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator88);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc90 = null;
        org.apache.storm.tuple.Fields fields91 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder89.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc90, fields91, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig94 = kafkaSpoutRetryServiceBuilder89.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService95 = kafkaSpoutRetryServiceKafkaSpoutConfig94.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator96 = kafkaSpoutRetryServiceKafkaSpoutConfig94.getTranslator();
        org.apache.storm.tuple.Fields fields97 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder99 = kafkaSpoutRetryServiceBuilder80.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator96, fields97, "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService95);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder99);
    }

    @Test
    public void test01057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01057");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getOffsetsCommitPeriodMs();
        long long29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 2000L + "'", long29 == 2000L);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer31);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer32);
    }

    @Test
    public void test01058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01058");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder32.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder20.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder43.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer52 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable> randomAccessBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable>("hi!", randomAccessSerializableDeserializer51, serializableSerializableDeserializer52, (java.util.Collection<java.lang.String>) strList55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, charSequenceSerializableDeserializer49, (java.util.Collection<java.lang.String>) strList55);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer61 = null;
        java.util.regex.Pattern pattern62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer60, charSequenceSerializableDeserializer61, pattern62);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc66 = null;
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc66, fields67, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig70 = kafkaSpoutRetryServiceBuilder65.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getTranslator();
        long long72 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService73 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getRetryService();
        int int74 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService75 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder58.setRetry(kafkaSpoutRetryService75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder43.setRetry(kafkaSpoutRetryService75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig78 = kafkaSpoutRetryServiceBuilder77.build();
        long long79 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getPollTimeoutMs();
        long long80 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 200L + "'", long72 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2147483647 + "'", int74 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 200L + "'", long79 == 200L);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 2000L + "'", long80 == 2000L);
    }

    @Test
    public void test01059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01059");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder41.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder41.setOffsetCommitPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer49 = null;
        java.util.regex.Pattern pattern50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, charSequenceSerializableDeserializer49, pattern50);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator52);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc54 = null;
        org.apache.storm.tuple.Fields fields55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc54, fields55, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig58 = kafkaSpoutRetryServiceBuilder53.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getTranslator();
        long long60 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getPollTimeoutMs();
        boolean boolean61 = kafkaSpoutRetryServiceKafkaSpoutConfig58.isConsumerAutoCommitMode();
        java.lang.String str62 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy63 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService64 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder46.setRetry(kafkaSpoutRetryService64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 200L + "'", long60 == 200L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy63 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy63.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
    }

    @Test
    public void test01060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01060");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc18, fields19, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getTranslator();
        long long24 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getPollTimeoutMs();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setProp(strMap26);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder33.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder33.setFirstPollOffsetStrategy(firstPollOffsetStrategy41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setPartitionRefreshPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder27.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setMaxRetries(1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 200L + "'", long24 == 200L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 200L + "'", long25 == 200L);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
    }

    @Test
    public void test01061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01061");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000000 + "'", int15 == 10000000);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test01062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01062");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test01063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01063");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable> randomAccessBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable>("hi!", randomAccessSerializableDeserializer5, serializableSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.reflect.AnnotatedElement> strBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.reflect.AnnotatedElement>("hi!", strSerializableDeserializer2, annotatedElementSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test01064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01064");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxRetries(10000000);
        java.util.Properties properties24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder17.setProp(properties24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
    }

    @Test
    public void test01065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01065");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder32.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder20.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setBootstrapServers("");
        java.lang.Class<?> wildcardClass47 = kafkaSpoutRetryServiceBuilder44.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test01066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01066");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxTupleRetries();
        boolean boolean21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.isConsumerAutoCommitMode();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription23 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.lang.Object> strCollectionBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.lang.Object>("", strCollectionSerializableDeserializer1, objSerializableDeserializer2, subscription23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2000L + "'", long22 == 2000L);
        org.junit.Assert.assertNotNull(subscription23);
    }

    @Test
    public void test01067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01067");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(charSequenceDeserializer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000000 + "'", int18 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService19);
    }

    @Test
    public void test01068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01068");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 30000L + "'", long20 == 30000L);
    }

    @Test
    public void test01069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01069");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
    }

    @Test
    public void test01070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01070");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields50, "hi!");
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, charSequenceSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator63);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc65 = null;
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc65, fields66, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig69 = kafkaSpoutRetryServiceBuilder64.build();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy71 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder57.setProp(strMap72);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer75 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer76 = null;
        java.util.regex.Pattern pattern77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer75, charSequenceSerializableDeserializer76, pattern77);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc81 = null;
        org.apache.storm.tuple.Fields fields82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder80.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc81, fields82, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig85 = kafkaSpoutRetryServiceBuilder80.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator86 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getTranslator();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService88 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer89 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator90 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getTranslator();
        org.apache.storm.tuple.Fields fields91 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator90, fields91);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder92.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 200L + "'", long70 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy71 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy71.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 200L + "'", long87 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService88);
        org.junit.Assert.assertNull(charSequenceDeserializer89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
    }

    @Test
    public void test01071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01071");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(charSequenceDeserializer12);
    }

    @Test
    public void test01072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01072");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.String> strListBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.String>("hi!", strListSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, org.apache.storm.kafka.spout.Subscription> strBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, org.apache.storm.kafka.spout.Subscription>("", strSerializableDeserializer1, subscriptionSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test01073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01073");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder22.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc45 = null;
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc45, fields46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder58.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder58.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy67 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setFirstPollOffsetStrategy(firstPollOffsetStrategy67);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService69 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setRetry(kafkaSpoutRetryService69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder49.setRetry(kafkaSpoutRetryService69);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer73 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer74 = null;
        java.util.regex.Pattern pattern75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer73, charSequenceSerializableDeserializer74, pattern75);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator77);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc79 = null;
        org.apache.storm.tuple.Fields fields80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc79, fields80, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig83 = kafkaSpoutRetryServiceBuilder78.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator84 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        long long85 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService86 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer87 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator88 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields89);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator88);
        org.apache.storm.tuple.Fields fields92 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields92);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig97 = kafkaSpoutRetryServiceBuilder96.build();
        long long98 = kafkaSpoutRetryServiceKafkaSpoutConfig97.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription99 = kafkaSpoutRetryServiceKafkaSpoutConfig97.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy67 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy67.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 200L + "'", long85 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService86);
        org.junit.Assert.assertNull(charSequenceDeserializer87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig97);
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + 2000L + "'", long98 == 2000L);
        org.junit.Assert.assertNotNull(subscription99);
    }

    @Test
    public void test01074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01074");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getPollTimeoutMs();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder8.build();
        org.apache.storm.kafka.spout.Subscription subscription49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription52 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription53 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(subscription49);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy50 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy50.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(subscription52);
        org.junit.Assert.assertNotNull(subscription53);
    }

    @Test
    public void test01075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01075");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator17);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc19 = null;
        org.apache.storm.tuple.Fields fields20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc19, fields20, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig23 = kafkaSpoutRetryServiceBuilder18.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getTranslator();
        long long26 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder4.setProp("", (java.lang.Object) firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        long long50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getPollTimeoutMs();
        boolean boolean51 = kafkaSpoutRetryServiceKafkaSpoutConfig48.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder36.setProp(strMap52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder36.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder36.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer62 = null;
        java.util.regex.Pattern pattern63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer61, charSequenceSerializableDeserializer62, pattern63);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator65);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc67 = null;
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc67, fields68, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder72.setOffsetCommitPeriodMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig75 = kafkaSpoutRetryServiceBuilder74.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService76 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder36.setRetry(kafkaSpoutRetryService76);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setOffsetCommitPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder30.setProp("hi!", (java.lang.Object) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder30.setSSLKeystore("hi!", "hi!", "hi!");
        java.util.Properties properties85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder30.setProp(properties85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 200L + "'", long26 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 200L + "'", long50 == 200L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
    }

    @Test
    public void test01076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01076");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(charSequenceDeserializer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000000 + "'", int18 == 10000000);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test01077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01077");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000000 + "'", int18 == 10000000);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
    }

    @Test
    public void test01078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01078");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        long long29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription32 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder16.setProp(strMap33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder16.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 200L + "'", long29 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
    }

    @Test
    public void test01079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01079");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
    }

    @Test
    public void test01080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01080");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setMaxRetries((int) (short) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setProp("hi!", (java.lang.Object) strBuilder23);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder29.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder40.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc60 = null;
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc60, fields61, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder59.build();
        java.lang.String str65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator66, fields67, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator66, fields71, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder73.setSSLKeystore("hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
    }

    @Test
    public void test01081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01081");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        long long31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer32 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getKeyDeserializer();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer34 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getKeyDeserializer();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getOffsetsCommitPeriodMs();
        int int36 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService37 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder38.build();
        int int40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getMaxUncommittedOffsets();
        long long41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 200L + "'", long31 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 30000L + "'", long33 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 30000L + "'", long35 == 30000L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2147483647 + "'", int36 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2147483647 + "'", int40 == 2147483647);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 30000L + "'", long41 == 30000L);
    }

    @Test
    public void test01082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01082");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy15);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        long long30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getRetryService();
        int int32 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder14.setProp(strMap34);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder41.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder47.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder35.setProp("hi!", (java.lang.Object) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder61.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder55.setProp("hi!", (java.lang.Object) "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder69.setFetchMinBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setMaxUncommittedOffsets((int) (byte) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 200L + "'", long30 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483647 + "'", int32 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
    }

    @Test
    public void test01083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01083");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder22.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder22.setFirstPollOffsetStrategy(firstPollOffsetStrategy30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder22.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder38.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder47.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, charSequenceSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator56);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc58 = null;
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig62 = kafkaSpoutRetryServiceBuilder57.build();
        java.lang.String str63 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getTranslator();
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator64, fields65, "hi!");
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator64, fields68, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer74 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer75 = null;
        java.util.regex.Pattern pattern76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer74, charSequenceSerializableDeserializer75, pattern76);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder79.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder81.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig86 = kafkaSpoutRetryServiceBuilder81.build();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator88 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getTranslator();
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields89, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder72.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder94.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder98 = kafkaSpoutRetryServiceBuilder94.setPartitionRefreshPeriodMs((long) (short) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 30000L + "'", long87 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder98);
    }

    @Test
    public void test01084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01084");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test01085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01085");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setFetchMinBytes(1);
        java.lang.Class<?> wildcardClass13 = kafkaSpoutRetryServiceBuilder12.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test01086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01086");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc30 = null;
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder29.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        long long36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer37 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer39 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        long long40 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getOffsetsCommitPeriodMs();
        int int41 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder19.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc50 = null;
        org.apache.storm.tuple.Fields fields51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc50, fields51, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig54 = kafkaSpoutRetryServiceBuilder49.build();
        long long55 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy57 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription58 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy60 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder19.setProp(strMap63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder19.setMaxUncommittedOffsets(1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 200L + "'", long36 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 30000L + "'", long38 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 30000L + "'", long40 == 30000L);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2147483647 + "'", int41 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 200L + "'", long55 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator56);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy57 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy57.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy60 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy60.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
    }

    @Test
    public void test01087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01087");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test01088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01088");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer20 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer19, randomAccessSerializableDeserializer20, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer16, randomAccessSerializableDeserializer17, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService> typeBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", typeSerializableDeserializer11, kafkaSpoutRetryServiceSerializableDeserializer12, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.Subscription> strIterableBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.Subscription>("hi!", strIterableSerializableDeserializer8, subscriptionSerializableDeserializer9, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.reflect.Type> strMapBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.reflect.Type>("hi!", strMapSerializableDeserializer5, typeSerializableDeserializer6, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, charSequenceSerializableDeserializer3, strArray22);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test01089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01089");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        java.lang.String str29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder38.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder46.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder56.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getTranslator();
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator62, fields63);
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator62, fields65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setOffsetCommitPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder66.setPollTimeoutMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder72.setSSLTruststore("hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
    }

    @Test
    public void test01090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01090");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc18, fields19, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getTranslator();
        long long24 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getPollTimeoutMs();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setProp(strMap26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setPartitionRefreshPeriodMs((long) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 200L + "'", long24 == 200L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 200L + "'", long25 == 200L);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
    }

    @Test
    public void test01091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01091");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder10.setMaxPollRecords((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setMaxUncommittedOffsets(0);
        java.util.Properties properties36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setProp(properties36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
    }

    @Test
    public void test01092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01092");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder15.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder27);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder35.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        long long42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService43 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getRetryService();
        int int44 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer49 = null;
        java.util.regex.Pattern pattern50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, charSequenceSerializableDeserializer49, pattern50);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator52);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc54 = null;
        org.apache.storm.tuple.Fields fields55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc54, fields55, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig58 = kafkaSpoutRetryServiceBuilder53.build();
        long long59 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy60 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription61 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getSubscription();
        int int62 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy63 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy64 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getFirstPollOffsetStrategy();
        java.lang.String str65 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getTranslator();
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator66, fields67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setMaxUncommittedOffsets(10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 200L + "'", long42 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2147483647 + "'", int44 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 200L + "'", long59 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy60 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy60.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2147483647 + "'", int62 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy63 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy63.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy64 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy64.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
    }

    @Test
    public void test01093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01093");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (byte) -1);
        java.lang.Class<?> wildcardClass25 = kafkaSpoutRetryServiceBuilder17.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test01094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01094");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer62 = null;
        java.util.regex.Pattern pattern63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer61, charSequenceSerializableDeserializer62, pattern63);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator65);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc67 = null;
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc67, fields68, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig71 = kafkaSpoutRetryServiceBuilder66.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getTranslator();
        long long73 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getPollTimeoutMs();
        boolean boolean74 = kafkaSpoutRetryServiceKafkaSpoutConfig71.isConsumerAutoCommitMode();
        java.lang.String str75 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy76 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService77 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder59.setRetry(kafkaSpoutRetryService77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 200L + "'", long73 == 200L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy76 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy76.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
    }

    @Test
    public void test01095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01095");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
    }

    @Test
    public void test01096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01096");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.AbstractCollection<java.lang.String>> strListBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.AbstractCollection<java.lang.String>>("", strListSerializableDeserializer1, strCollectionSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test01097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01097");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setMaxPollRecords((int) (short) 1);
        java.util.Properties properties52 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setProp(properties52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
    }

    @Test
    public void test01098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01098");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test01099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01099");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer37 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getValueDeserializer();
        boolean boolean38 = kafkaSpoutRetryServiceKafkaSpoutConfig35.isConsumerAutoCommitMode();
        java.lang.String str39 = kafkaSpoutRetryServiceKafkaSpoutConfig35.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder23.setProp(strMap40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(charSequenceDeserializer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
    }

    @Test
    public void test01100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01100");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
    }

    @Test
    public void test01101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01101");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc16 = null;
        org.apache.storm.tuple.Fields fields17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc16, fields17, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getTranslator();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService23 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer24 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer25 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription26 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription27 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.reflect.AnnotatedElement> kafkaSpoutRetryServiceRecordTranslatorBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.reflect.AnnotatedElement>("hi!", kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer7, annotatedElementSerializableDeserializer8, subscription27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, subscription27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.lang.CharSequence> cloneableBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.lang.CharSequence>("", cloneableSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 200L + "'", long22 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService23);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer24);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer25);
        org.junit.Assert.assertNotNull(subscription26);
        org.junit.Assert.assertNotNull(subscription27);
    }

    @Test
    public void test01102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01102");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig19 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder16.setRetry(kafkaSpoutRetryService20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig19);
    }

    @Test
    public void test01103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01103");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder28.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder48.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc62 = null;
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc62, fields63, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder61.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields68, "hi!");
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields71, "");
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setMaxUncommittedOffsets((int) (short) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
    }

    @Test
    public void test01104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01104");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder41.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.toString();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 30000L + "'", long44 == 30000L);
    }

    @Test
    public void test01105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01105");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setPartitionRefreshPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
    }

    @Test
    public void test01106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01106");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc13 = null;
        org.apache.storm.tuple.Fields fields14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc13, fields14, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getTranslator();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getRetryService();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer23 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer24 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription25 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.Comparable<java.lang.String>> randomAccessBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.Comparable<java.lang.String>>("hi!", randomAccessSerializableDeserializer4, strComparableSerializableDeserializer5, subscription25);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer23);
        org.junit.Assert.assertNull(charSequenceDeserializer24);
        org.junit.Assert.assertNotNull(subscription25);
    }

    @Test
    public void test01107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01107");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
    }

    @Test
    public void test01108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01108");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
    }

    @Test
    public void test01109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01109");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder17.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setFetchMinBytes((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setOffsetCommitPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder40.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder40.setFirstPollOffsetStrategy(firstPollOffsetStrategy48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder40.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer54 = null;
        java.util.regex.Pattern pattern55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer53, charSequenceSerializableDeserializer54, pattern55);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder56.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder65.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer70 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer71 = null;
        java.util.regex.Pattern pattern72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer70, charSequenceSerializableDeserializer71, pattern72);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator74);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc76 = null;
        org.apache.storm.tuple.Fields fields77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder75.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc76, fields77, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig80 = kafkaSpoutRetryServiceBuilder75.build();
        java.lang.String str81 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator82 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getTranslator();
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator82, fields83, "hi!");
        org.apache.storm.tuple.Fields fields86 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator82, fields86, "hi!");
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator82, fields89);
        org.apache.storm.tuple.Fields fields91 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator82, fields91);
        java.lang.Class<?> wildcardClass93 = kafkaSpoutRetryServiceBuilder92.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test01110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01110");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        long long31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer32 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getKeyDeserializer();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer34 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getKeyDeserializer();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getOffsetsCommitPeriodMs();
        int int36 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService37 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setFetchMinBytes((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setMaxRetries((int) (byte) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 200L + "'", long31 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 30000L + "'", long33 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 30000L + "'", long35 == 30000L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2147483647 + "'", int36 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
    }

    @Test
    public void test01111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01111");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
    }

    @Test
    public void test01112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01112");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getPollTimeoutMs();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setFetchMinBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setMaxPollRecords((int) (byte) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
    }

    @Test
    public void test01113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01113");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setBootstrapServers("");
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setProp(strMap21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
    }

    @Test
    public void test01114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01114");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc18, fields19, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields37, "hi!");
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setMaxUncommittedOffsets((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
    }

    @Test
    public void test01115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01115");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getPollTimeoutMs();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder8.build();
        long long49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getOffsetsCommitPeriodMs();
        long long50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription51 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription52 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getSubscription();
        long long53 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 2000L + "'", long50 == 2000L);
        org.junit.Assert.assertNotNull(subscription51);
        org.junit.Assert.assertNotNull(subscription52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 2000L + "'", long53 == 2000L);
    }

    @Test
    public void test01116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01116");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        boolean boolean34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder19.setProp(strMap35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder6.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc64 = null;
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc64, fields65, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig68 = kafkaSpoutRetryServiceBuilder63.build();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator70 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getTranslator();
        long long71 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getPartitionRefreshPeriodMs();
        boolean boolean72 = kafkaSpoutRetryServiceKafkaSpoutConfig68.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder54.setProp(strMap73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setMaxPollRecords(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder74.setSSLTruststore("hi!", "");
        java.lang.Class<?> wildcardClass80 = kafkaSpoutRetryServiceBuilder79.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 2000L + "'", long71 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test01117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01117");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder22.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder42.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder42.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder33.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator72, fields73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig76 = kafkaSpoutRetryServiceBuilder13.build();
        java.lang.String str77 = kafkaSpoutRetryServiceKafkaSpoutConfig76.toString();
        org.apache.storm.kafka.spout.Subscription subscription78 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService79 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getRetryService();
        int int80 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService70);
        org.junit.Assert.assertNull(charSequenceDeserializer71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig76);
        org.junit.Assert.assertNotNull(subscription78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2147483647 + "'", int80 == 2147483647);
    }

    @Test
    public void test01118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01118");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.List<java.lang.String>> annotatedElementBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.List<java.lang.String>>("hi!", annotatedElementSerializableDeserializer5, strListSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLTruststore("hi!", "");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
    }

    @Test
    public void test01119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01119");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder15.setFirstPollOffsetStrategy(firstPollOffsetStrategy31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        long long49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription52 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getSubscription();
        java.lang.String str53 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder36.setProp(strMap54);
        java.util.Properties properties56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder36.setProp(properties56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 200L + "'", long49 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
    }

    @Test
    public void test01120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01120");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKafkaProps();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPartitionRefreshPeriodMs();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxUncommittedOffsets();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setPollTimeoutMs(100L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator32);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc34 = null;
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc34, fields35, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder25.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000000 + "'", int20 == 10000000);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 200L + "'", long21 == 200L);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
    }

    @Test
    public void test01121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01121");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceBuilderSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.String> kafkaSpoutRetryServiceBuilderBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.String>("", kafkaSpoutRetryServiceBuilderSerializableDeserializer1, strSerializableDeserializer2, strArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01122");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getOffsetsCommitPeriodMs();
        long long29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 200L + "'", long29 == 200L);
    }

    @Test
    public void test01123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01123");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder13.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder38.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder48.build();
        java.lang.String str54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getTranslator();
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields56, "hi!");
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields59, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder8.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setMaxRetries(0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
    }

    @Test
    public void test01124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01124");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, charSequenceSerializableDeserializer12, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.String[]> subscriptionBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.String[]>("hi!", subscriptionSerializableDeserializer5, strArraySerializableDeserializer6, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.io.Serializable> firstPollOffsetStrategyEnumBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.io.Serializable>("", firstPollOffsetStrategyEnumSerializableDeserializer1, serializableSerializableDeserializer2, strArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test01125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01125");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
    }

    @Test
    public void test01126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01126");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
    }

    @Test
    public void test01127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01127");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer54 = null;
        java.util.regex.Pattern pattern55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer53, charSequenceSerializableDeserializer54, pattern55);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc59 = null;
        org.apache.storm.tuple.Fields fields60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc59, fields60, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig63 = kafkaSpoutRetryServiceBuilder58.build();
        java.lang.String str64 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getTranslator();
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator65, fields66, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder41.setProp("", (java.lang.Object) "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder41.setSSLTruststore("", "");
        java.lang.Class<?> wildcardClass73 = kafkaSpoutRetryServiceBuilder72.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test01128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01128");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
    }

    @Test
    public void test01129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01129");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setFirstPollOffsetStrategy(firstPollOffsetStrategy52);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder58.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder58.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder66.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer71 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer72 = null;
        java.util.regex.Pattern pattern73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer71, charSequenceSerializableDeserializer72, pattern73);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator75);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc77 = null;
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc77, fields78, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig81 = kafkaSpoutRetryServiceBuilder76.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator82 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getTranslator();
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator82, fields83);
        org.apache.storm.tuple.Fields fields85 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator82, fields85);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder51.setFetchMinBytes((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder41.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder88);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder88.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder88.setSSLTruststore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
    }

    @Test
    public void test01130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01130");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer4 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer3, charSequenceSerializableDeserializer4, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test01131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01131");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder19.setMaxUncommittedOffsets((int) (byte) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
    }

    @Test
    public void test01132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01132");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer19 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer18, randomAccessSerializableDeserializer19, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer15, randomAccessSerializableDeserializer16, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService> typeBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", typeSerializableDeserializer10, kafkaSpoutRetryServiceSerializableDeserializer11, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.Subscription> strIterableBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.Subscription>("hi!", strIterableSerializableDeserializer7, subscriptionSerializableDeserializer8, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.reflect.Type> strMapBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.reflect.Type>("hi!", strMapSerializableDeserializer4, typeSerializableDeserializer5, strArray21);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test01133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01133");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
    }

    @Test
    public void test01134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01134");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder14.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        java.util.Properties properties21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setProp(properties21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
    }

    @Test
    public void test01135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01135");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, charSequenceSerializableDeserializer12, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strCollectionBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strCollectionSerializableDeserializer8, firstPollOffsetStrategySerializableDeserializer9, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.Cloneable> subscriptionBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.Cloneable>("hi!", subscriptionSerializableDeserializer4, cloneableSerializableDeserializer5, strArray14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.util.RandomAccess> strMapBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.util.RandomAccess>("", strMapSerializableDeserializer1, randomAccessSerializableDeserializer2, strArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test01136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01136");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> strListBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", strListSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> cloneableBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("", cloneableSerializableDeserializer1, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test01137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01137");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig19 = kafkaSpoutRetryServiceBuilder18.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder6.setRetry(kafkaSpoutRetryService21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder6.setMaxPartitionFectchBytes((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig19);
        org.junit.Assert.assertNull(charSequenceDeserializer20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
    }

    @Test
    public void test01138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01138");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
    }

    @Test
    public void test01139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01139");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder35.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder35.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer49 = null;
        java.util.regex.Pattern pattern50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, charSequenceSerializableDeserializer49, pattern50);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc56 = null;
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc56, fields57, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder55.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, charSequenceSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc69 = null;
        org.apache.storm.tuple.Fields fields70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc69, fields70, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder68.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getTranslator();
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields75, "hi!");
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields78, "");
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer87 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer88 = null;
        java.util.regex.Pattern pattern89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer87, charSequenceSerializableDeserializer88, pattern89);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator91 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder90.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator91);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc93 = null;
        org.apache.storm.tuple.Fields fields94 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder92.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc93, fields94, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig97 = kafkaSpoutRetryServiceBuilder92.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator98 = kafkaSpoutRetryServiceKafkaSpoutConfig97.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder99 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator98);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator98);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder99);
    }

    @Test
    public void test01140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01140");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc34 = null;
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc34, fields35, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder46.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields53, "hi!");
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields56, "");
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields59);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer63 = null;
        java.util.regex.Pattern pattern64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer62, charSequenceSerializableDeserializer63, pattern64);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc68 = null;
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc68, fields69, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder67.build();
        long long73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy74 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription75 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getSubscription();
        int int76 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy77 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder60.setProp(strMap78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder79.setMaxPollRecords((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder81.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder83.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder85.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder85.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder89.setFetchMinBytes((int) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 200L + "'", long73 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy74 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy74.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483647 + "'", int76 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy77 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy77.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
    }

    @Test
    public void test01141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01141");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKafkaProps();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPartitionRefreshPeriodMs();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxUncommittedOffsets();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setMaxPollRecords((int) '4');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000000 + "'", int20 == 10000000);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 200L + "'", long21 == 200L);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
    }

    @Test
    public void test01142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01142");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.lang.String str22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        long long23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        int int24 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy25 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2000L + "'", long21 == 2000L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2000L + "'", long23 == 2000L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10000000 + "'", int24 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy25 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy25.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test01143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01143");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 30000L + "'", long19 == 30000L);
    }

    @Test
    public void test01144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01144");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        int int25 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 30000L + "'", long23 == 30000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10000000 + "'", int25 == 10000000);
    }

    @Test
    public void test01145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01145");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer7 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer6, randomAccessSerializableDeserializer7, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer3, randomAccessSerializableDeserializer4, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test01146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01146");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
    }

    @Test
    public void test01147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01147");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPollTimeoutMs((long) (byte) 1);
        java.lang.Class<?> wildcardClass20 = kafkaSpoutRetryServiceBuilder19.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test01148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01148");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.io.Serializable> strIterableBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.io.Serializable>("", strIterableSerializableDeserializer1, serializableSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test01149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01149");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder10.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setOffsetCommitPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setMaxUncommittedOffsets(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder30.setPollTimeoutMs((long) (short) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
    }

    @Test
    public void test01150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01150");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (byte) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
    }

    @Test
    public void test01151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01151");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, charSequenceSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test01152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01152");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder12.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder21.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setPollTimeoutMs((long) 'a');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
    }

    @Test
    public void test01153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01153");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
    }

    @Test
    public void test01154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01154");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceBuilderSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceBuilderSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> strComparableBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("hi!", strComparableSerializableDeserializer4, kafkaSpoutRetryServiceBuilderSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.reflect.Type> kafkaSpoutRetryServiceBuilderBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.reflect.Type>("", kafkaSpoutRetryServiceBuilderSerializableDeserializer1, typeSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test01155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01155");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
    }

    @Test
    public void test01156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01156");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.Cloneable> kafkaSpoutRetryServiceRecordTranslatorBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.Cloneable>("hi!", kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer1, cloneableSerializableDeserializer2, pattern3);
    }

    @Test
    public void test01157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01157");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceBuilderSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> typeBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("", typeSerializableDeserializer1, kafkaSpoutRetryServiceBuilderSerializableDeserializer2, strArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test01158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01158");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer3, charSequenceSerializableDeserializer4, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test01159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01159");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getOffsetsCommitPeriodMs();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig31.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder17.setProp(strMap37);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer41 = null;
        java.util.regex.Pattern pattern42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer40, charSequenceSerializableDeserializer41, pattern42);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc46 = null;
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc46, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig50 = kafkaSpoutRetryServiceBuilder45.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getTranslator();
        long long52 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getRetryService();
        int int54 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer56 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getKeyDeserializer();
        boolean boolean57 = kafkaSpoutRetryServiceKafkaSpoutConfig50.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getKafkaProps();
        java.lang.String str59 = kafkaSpoutRetryServiceKafkaSpoutConfig50.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy60 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getFirstPollOffsetStrategy();
        long long61 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getTranslator();
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator62, fields63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setPollTimeoutMs((long) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 200L + "'", long34 == 200L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 30000L + "'", long35 == 30000L);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 200L + "'", long52 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2147483647 + "'", int54 == 2147483647);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy60 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy60.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 200L + "'", long61 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
    }

    @Test
    public void test01160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01160");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.util.RandomAccess> firstPollOffsetStrategyBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.util.RandomAccess>("hi!", firstPollOffsetStrategySerializableDeserializer1, randomAccessSerializableDeserializer2, pattern3);
    }

    @Test
    public void test01161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01161");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPollTimeoutMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
    }

    @Test
    public void test01162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01162");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
    }

    @Test
    public void test01163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01163");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer7 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Iterable<java.lang.String>> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Iterable<java.lang.String>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, strIterableSerializableDeserializer7, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.Object> strCollectionBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.Object>("", strCollectionSerializableDeserializer1, objSerializableDeserializer2, strArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test01164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01164");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(10);
        java.lang.Class<?> wildcardClass18 = kafkaSpoutRetryServiceBuilder17.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test01165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01165");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder38.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder31.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder31.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder59.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder59.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder67.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder72.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder74.setMaxRetries(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setMaxRetries((int) 'a');
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder80.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig83 = kafkaSpoutRetryServiceBuilder80.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder53.setProp("", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig83);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder53.setMaxUncommittedOffsets((int) '#');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
    }

    @Test
    public void test01166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01166");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKafkaProps();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.isConsumerAutoCommitMode();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.toString();
        boolean boolean21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.isConsumerAutoCommitMode();
        java.lang.String str22 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription23 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription24 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.Object> strListBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.Object>("", strListSerializableDeserializer1, objSerializableDeserializer2, subscription24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(subscription23);
        org.junit.Assert.assertNotNull(subscription24);
    }

    @Test
    public void test01167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01167");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.String> strListBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.String>("hi!", strListSerializableDeserializer8, strSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test01168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01168");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.Collection<java.lang.String>> strListBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strListSerializableDeserializer1, strCollectionSerializableDeserializer2, pattern3);
    }

    @Test
    public void test01169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01169");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxPollRecords((int) '4');
        java.util.Properties properties22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setProp(properties22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
    }

    @Test
    public void test01170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01170");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.String> strListBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.String>("hi!", strListSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.reflect.Type> strArrayBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.reflect.Type>("", strArraySerializableDeserializer1, typeSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test01171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01171");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc16 = null;
        org.apache.storm.tuple.Fields fields17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc16, fields17, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder15.build();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription23 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getSubscription();
        int int24 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy25 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription27 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, subscription27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, subscription27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 200L + "'", long21 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483647 + "'", int24 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy25 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy25.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription27);
    }

    @Test
    public void test01172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01172");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, charSequenceSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator54);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc56 = null;
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc56, fields57, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig60 = kafkaSpoutRetryServiceBuilder55.build();
        long long61 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy63 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription64 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getSubscription();
        int int65 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy66 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder48.setFirstPollOffsetStrategy(firstPollOffsetStrategy66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 200L + "'", long61 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy63 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy63.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10000000 + "'", int65 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy66 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy66.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
    }

    @Test
    public void test01173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01173");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder22.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc45 = null;
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc45, fields46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder58.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder58.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy67 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setFirstPollOffsetStrategy(firstPollOffsetStrategy67);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService69 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setRetry(kafkaSpoutRetryService69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder49.setRetry(kafkaSpoutRetryService69);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer73 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer74 = null;
        java.util.regex.Pattern pattern75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer73, charSequenceSerializableDeserializer74, pattern75);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator77);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc79 = null;
        org.apache.storm.tuple.Fields fields80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc79, fields80, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig83 = kafkaSpoutRetryServiceBuilder78.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator84 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        long long85 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService86 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer87 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator88 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields89);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator88);
        org.apache.storm.tuple.Fields fields92 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields92);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy67 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy67.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 200L + "'", long85 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService86);
        org.junit.Assert.assertNull(charSequenceDeserializer87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
    }

    @Test
    public void test01174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01174");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        java.lang.Class<?> wildcardClass22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test01175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01175");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        long long30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder15.setProp(strMap32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setMaxRetries((int) (short) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 200L + "'", long30 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
    }

    @Test
    public void test01176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01176");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder15.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder15.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder37.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setPartitionRefreshPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, (java.util.Collection<java.lang.String>) strList56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig60 = kafkaSpoutRetryServiceBuilder59.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder46.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setPartitionRefreshPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer65 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer66 = null;
        java.util.regex.Pattern pattern67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer65, charSequenceSerializableDeserializer66, pattern67);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator69);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc71 = null;
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc71, fields72, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig75 = kafkaSpoutRetryServiceBuilder70.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator76 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getTranslator();
        long long77 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService78 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getRetryService();
        long long79 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator80 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getTranslator();
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator80, fields81);
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator80, fields83);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder32.setMaxUncommittedOffsets((-1));
        java.lang.Object obj88 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder86.setProp("hi!", obj88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 200L + "'", long77 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 200L + "'", long79 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
    }

    @Test
    public void test01177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01177");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, charSequenceSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder38.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder56.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getTranslator();
        long long63 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getPollTimeoutMs();
        long long64 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getPollTimeoutMs();
        long long65 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getOffsetsCommitPeriodMs();
        java.lang.String str66 = kafkaSpoutRetryServiceKafkaSpoutConfig61.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder47.setProp(strMap67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder27.setProp(strMap67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder13.setProp(strMap67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) (-1));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 200L + "'", long63 == 200L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 200L + "'", long64 == 200L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 30000L + "'", long65 == 30000L);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
    }

    @Test
    public void test01178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01178");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder26.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder26.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, charSequenceSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator63);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc65 = null;
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc65, fields66, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig69 = kafkaSpoutRetryServiceBuilder64.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator70 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getTranslator();
        long long71 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getPollTimeoutMs();
        boolean boolean72 = kafkaSpoutRetryServiceKafkaSpoutConfig69.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder57.setProp(strMap73);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer76 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer77 = null;
        java.util.regex.Pattern pattern78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer76, charSequenceSerializableDeserializer77, pattern78);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder79.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator80);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc82 = null;
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder81.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc82, fields83, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig86 = kafkaSpoutRetryServiceBuilder81.build();
        java.lang.String str87 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator88 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator88);
        org.apache.storm.tuple.Fields fields90 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields90);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig92 = kafkaSpoutRetryServiceBuilder52.build();
        long long93 = kafkaSpoutRetryServiceKafkaSpoutConfig92.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator94 = kafkaSpoutRetryServiceKafkaSpoutConfig92.getTranslator();
        org.apache.storm.tuple.Fields fields95 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator94, fields95);
        org.apache.storm.tuple.Fields fields97 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder98 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator94, fields97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 200L + "'", long71 == 200L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig92);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder98);
    }

    @Test
    public void test01179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01179");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer6 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]> strListBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer5, strArraySerializableDeserializer6, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setFirstPollOffsetStrategy(firstPollOffsetStrategy18);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
    }

    @Test
    public void test01180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01180");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder13.build();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxTupleRetries();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getOffsetsCommitPeriodMs();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertNotNull(subscription18);
    }

    @Test
    public void test01181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01181");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        boolean boolean17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test01182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01182");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setMaxRetries(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setMaxRetries((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setMaxRetries((int) (byte) 0);
        java.lang.Class<?> wildcardClass30 = kafkaSpoutRetryServiceBuilder29.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test01183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01183");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder14.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder22.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder42.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder42.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder33.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator72, fields73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig76 = kafkaSpoutRetryServiceBuilder75.build();
        java.lang.String str77 = kafkaSpoutRetryServiceKafkaSpoutConfig76.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService70);
        org.junit.Assert.assertNull(charSequenceDeserializer71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig76);
    }

    @Test
    public void test01184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01184");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, charSequenceSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator31);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc33 = null;
        org.apache.storm.tuple.Fields fields34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc33, fields34, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig37 = kafkaSpoutRetryServiceBuilder32.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getTranslator();
        int int40 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getMaxUncommittedOffsets();
        long long41 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getOffsetsCommitPeriodMs();
        java.lang.String str42 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder25.setFirstPollOffsetStrategy(firstPollOffsetStrategy43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder25.setPartitionRefreshPeriodMs(10L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10000000 + "'", int40 == 10000000);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 30000L + "'", long41 == 30000L);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy43 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy43.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
    }

    @Test
    public void test01185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01185");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy15);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        long long30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getRetryService();
        int int32 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder14.setProp(strMap34);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder41.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder47.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder35.setProp("hi!", (java.lang.Object) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder55.setSSLKeystore("", "", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 200L + "'", long30 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483647 + "'", int32 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
    }

    @Test
    public void test01186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01186");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getRetryService();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.toString();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getConsumerGroupId();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPartitionRefreshPeriodMs();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> strArrayBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", strArraySerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, subscription21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer20);
        org.junit.Assert.assertNotNull(subscription21);
    }

    @Test
    public void test01187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01187");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        int int32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
    }

    @Test
    public void test01188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01188");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        boolean boolean17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test01189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01189");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, charSequenceSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder42.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder48.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields69, "");
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields72, "");
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setFetchMinBytes((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer82 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer83 = null;
        java.util.regex.Pattern pattern84 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer82, charSequenceSerializableDeserializer83, pattern84);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator86 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder85.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator86);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc88 = null;
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder87.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc88, fields89, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig92 = kafkaSpoutRetryServiceBuilder87.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator93 = kafkaSpoutRetryServiceKafkaSpoutConfig92.getTranslator();
        long long94 = kafkaSpoutRetryServiceKafkaSpoutConfig92.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService95 = kafkaSpoutRetryServiceKafkaSpoutConfig92.getRetryService();
        int int96 = kafkaSpoutRetryServiceKafkaSpoutConfig92.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator97 = kafkaSpoutRetryServiceKafkaSpoutConfig92.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService98 = kafkaSpoutRetryServiceKafkaSpoutConfig92.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder99 = kafkaSpoutRetryServiceBuilder80.setRetry(kafkaSpoutRetryService98);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator93);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 200L + "'", long94 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 2147483647 + "'", int96 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService98);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder99);
    }

    @Test
    public void test01190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01190");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test01191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01191");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder11.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setOffsetCommitPeriodMs((long) (short) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
    }

    @Test
    public void test01192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01192");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig37 = kafkaSpoutRetryServiceBuilder34.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder18.setProp(strMap38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
    }

    @Test
    public void test01193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01193");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.tuple.Fields fields29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator28, fields29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("");
        java.lang.Class<?> wildcardClass33 = kafkaSpoutRetryServiceBuilder30.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test01194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01194");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        long long29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder15.setProp(strMap34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 200L + "'", long29 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService30);
        org.junit.Assert.assertNull(charSequenceDeserializer31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
    }

    @Test
    public void test01195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01195");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
    }

    @Test
    public void test01196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01196");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder19.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder39.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getTranslator();
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder13.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder48.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder48.setGroupId("hi!");
        java.lang.Class<?> wildcardClass56 = kafkaSpoutRetryServiceBuilder48.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test01197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01197");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getOffsetsCommitPeriodMs();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.toString();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Collection<java.lang.String>> strComparableBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strComparableSerializableDeserializer1, strCollectionSerializableDeserializer2, subscription21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 30000L + "'", long20 == 30000L);
        org.junit.Assert.assertNotNull(subscription21);
    }

    @Test
    public void test01198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01198");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder27.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder46.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        int int54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getMaxUncommittedOffsets();
        long long55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getOffsetsCommitPeriodMs();
        java.lang.String str56 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer57 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder35.setProp(strMap58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder12.setProp(strMap58);
        java.util.Properties properties61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setProp(properties61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10000000 + "'", int54 == 10000000);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 30000L + "'", long55 == 30000L);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(charSequenceDeserializer57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
    }

    @Test
    public void test01199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01199");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder10.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder10.setMaxPartitionFectchBytes((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(subscription18);
    }

    @Test
    public void test01200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01200");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer9, charSequenceSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setBootstrapServers("");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
    }

    @Test
    public void test01201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01201");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxPollRecords((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc16 = null;
        org.apache.storm.tuple.Fields fields17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc16, fields17, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder15.build();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getTranslator();
        long long23 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getPartitionRefreshPeriodMs();
        boolean boolean24 = kafkaSpoutRetryServiceKafkaSpoutConfig20.isConsumerAutoCommitMode();
        java.lang.String str25 = kafkaSpoutRetryServiceKafkaSpoutConfig20.toString();
        boolean boolean26 = kafkaSpoutRetryServiceKafkaSpoutConfig20.isConsumerAutoCommitMode();
        int int27 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getMaxTupleRetries();
        java.lang.String str28 = kafkaSpoutRetryServiceKafkaSpoutConfig20.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder6.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder48.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc62 = null;
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc62, fields63, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder61.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields68, "hi!");
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields71);
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields73, "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 200L + "'", long21 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2000L + "'", long23 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483647 + "'", int27 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
    }

    @Test
    public void test01202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01202");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.String[]> objBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.String[]>("hi!", objSerializableDeserializer2, strArraySerializableDeserializer3, (java.util.Collection<java.lang.String>) strList10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test01203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01203");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc45 = null;
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig49 = kafkaSpoutRetryServiceBuilder44.build();
        long long50 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription52 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc64 = null;
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc64, fields65, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig68 = kafkaSpoutRetryServiceBuilder63.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getTranslator();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer71 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getKeyDeserializer();
        long long72 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer73 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getKeyDeserializer();
        int int74 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getTranslator();
        org.apache.storm.tuple.Fields fields76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator75, fields76);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder56.setSSLKeystore("", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 200L + "'", long50 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 200L + "'", long70 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 30000L + "'", long72 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2147483647 + "'", int74 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
    }

    @Test
    public void test01204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01204");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.Class<?> wildcardClass20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test01205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01205");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRetry(kafkaSpoutRetryService20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
    }

    @Test
    public void test01206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01206");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder9.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc32 = null;
        org.apache.storm.tuple.Fields fields33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc32, fields33, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder31.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getPollTimeoutMs();
        boolean boolean39 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        java.lang.String str40 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder4.setRetry(kafkaSpoutRetryService41);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc51 = null;
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc51, fields52, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig55 = kafkaSpoutRetryServiceBuilder50.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getTranslator();
        long long57 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService58 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getRetryService();
        int int59 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy60 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy60);
        java.lang.Class<?> wildcardClass62 = kafkaSpoutRetryServiceBuilder4.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 200L + "'", long38 == 200L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 200L + "'", long57 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10000000 + "'", int59 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy60 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy60.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test01207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01207");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, strArray16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test01208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01208");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKeyDeserializer();
        boolean boolean24 = kafkaSpoutRetryServiceKafkaSpoutConfig22.isConsumerAutoCommitMode();
        java.lang.Class<?> wildcardClass25 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test01209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01209");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer2 = null;
        java.util.Collection<java.lang.String> strCollection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> strListBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("hi!", strListSerializableDeserializer1, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer2, strCollection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01210");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
    }

    @Test
    public void test01211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01211");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getRetryService();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getOffsetsCommitPeriodMs();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> firstPollOffsetStrategyEnumBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("", firstPollOffsetStrategyEnumSerializableDeserializer1, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer2, subscription21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 30000L + "'", long19 == 30000L);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(subscription21);
    }

    @Test
    public void test01212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01212");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPartitionRefreshPeriodMs();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.CharSequence> firstPollOffsetStrategyBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.CharSequence>("", firstPollOffsetStrategySerializableDeserializer1, charSequenceSerializableDeserializer2, subscription18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
        org.junit.Assert.assertNotNull(subscription18);
    }

    @Test
    public void test01213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01213");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        java.lang.String str22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertNotNull(subscription19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test01214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01214");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getConsumerGroupId();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
    }

    @Test
    public void test01215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01215");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        java.lang.Class<?> wildcardClass21 = strMap20.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test01216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01216");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        int int23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertNull(charSequenceDeserializer20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2000L + "'", long22 == 2000L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10000000 + "'", int23 == 10000000);
    }

    @Test
    public void test01217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01217");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder11.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder11.setMaxUncommittedOffsets((-1));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
    }

    @Test
    public void test01218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01218");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>> strArrayBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>>("hi!", strArraySerializableDeserializer1, strMapSerializableDeserializer2, pattern3);
    }

    @Test
    public void test01219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01219");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer18 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable> randomAccessBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable>("hi!", randomAccessSerializableDeserializer17, serializableSerializableDeserializer18, (java.util.Collection<java.lang.String>) strList21);
        java.lang.Class<?> wildcardClass24 = strList21.getClass();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder6.setProp("", (java.lang.Object) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setFetchMinBytes((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, charSequenceSerializableDeserializer32, (java.util.Collection<java.lang.String>) strList36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder39.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, charSequenceSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator51);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc53 = null;
        org.apache.storm.tuple.Fields fields54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc53, fields54, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig57 = kafkaSpoutRetryServiceBuilder52.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getTranslator();
        org.apache.storm.tuple.Fields fields60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator59, fields60, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer66 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer67 = null;
        java.util.regex.Pattern pattern68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer66, charSequenceSerializableDeserializer67, pattern68);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator70);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc72 = null;
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc72, fields73, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig76 = kafkaSpoutRetryServiceBuilder71.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getTranslator();
        long long78 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer79 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getKeyDeserializer();
        int int80 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator81 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator81);
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator81, fields83, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig86 = kafkaSpoutRetryServiceBuilder29.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator87 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 200L + "'", long78 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2147483647 + "'", int80 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator87);
    }

    @Test
    public void test01220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01220");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test01221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01221");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceBuilderSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, charSequenceSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> strComparableBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("hi!", strComparableSerializableDeserializer2, kafkaSpoutRetryServiceBuilderSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test01222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01222");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
    }

    @Test
    public void test01223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01223");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer16 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer15, randomAccessSerializableDeserializer16, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer12, randomAccessSerializableDeserializer13, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService> typeBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", typeSerializableDeserializer7, kafkaSpoutRetryServiceSerializableDeserializer8, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration>("hi!", objSerializableDeserializer4, genericDeclarationSerializableDeserializer5, strArray18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> strListBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("", strListSerializableDeserializer1, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer2, strArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test01224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01224");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxPollRecords(10000000);
        java.lang.Class<?> wildcardClass17 = kafkaSpoutRetryServiceBuilder16.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test01225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01225");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder14.build();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getMaxUncommittedOffsets();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000000 + "'", int18 == 10000000);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test01226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01226");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator32);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc34 = null;
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc34, fields35, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getTranslator();
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator39, fields40);
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator39, fields42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setFetchMinBytes((int) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, charSequenceSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator51);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc53 = null;
        org.apache.storm.tuple.Fields fields54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc53, fields54, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig57 = kafkaSpoutRetryServiceBuilder52.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getTranslator();
        long long59 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService60 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer61 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer65 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer66 = null;
        java.util.regex.Pattern pattern67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer65, charSequenceSerializableDeserializer66, pattern67);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator69);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc71 = null;
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc71, fields72, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig75 = kafkaSpoutRetryServiceBuilder70.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator76 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription78 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService79 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder63.setRetry(kafkaSpoutRetryService79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder63.setSSLKeystore("", "", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 200L + "'", long59 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService60);
        org.junit.Assert.assertNull(charSequenceDeserializer61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator77);
        org.junit.Assert.assertNotNull(subscription78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
    }

    @Test
    public void test01227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01227");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.toString();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertNotNull(subscription20);
    }

    @Test
    public void test01228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01228");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder36.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder36.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setFirstPollOffsetStrategy(firstPollOffsetStrategy45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder16.setFirstPollOffsetStrategy(firstPollOffsetStrategy45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setMaxRetries((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder48.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
    }

    @Test
    public void test01229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01229");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, charSequenceSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder50.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder50.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder58.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer65 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer66 = null;
        java.util.regex.Pattern pattern67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer65, charSequenceSerializableDeserializer66, pattern67);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator69);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc71 = null;
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc71, fields72, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig75 = kafkaSpoutRetryServiceBuilder70.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator76 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getTranslator();
        long long77 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService78 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer79 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator80 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator80);
        org.apache.storm.tuple.Fields fields82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator80, fields82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder45.setSSLTruststore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 200L + "'", long77 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService78);
        org.junit.Assert.assertNull(charSequenceDeserializer79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
    }

    @Test
    public void test01230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01230");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder8.setGroupId("hi!");
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer41 = null;
        java.util.regex.Pattern pattern42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer40, charSequenceSerializableDeserializer41, pattern42);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc46 = null;
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc46, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig50 = kafkaSpoutRetryServiceBuilder45.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getTranslator();
        long long52 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getPollTimeoutMs();
        boolean boolean53 = kafkaSpoutRetryServiceKafkaSpoutConfig50.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder38.setProp(strMap54);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        java.lang.String str68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator69);
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator69, fields71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder33.build();
        long long74 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getTranslator();
        org.apache.storm.tuple.Fields fields76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator75, fields76, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder24.setMaxPollRecords((int) '#');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 200L + "'", long52 == 200L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
    }

    @Test
    public void test01231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01231");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getRetryService();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000000 + "'", int18 == 10000000);
        org.junit.Assert.assertNotNull(subscription19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 200L + "'", long21 == 200L);
        org.junit.Assert.assertNotNull(subscription22);
    }

    @Test
    public void test01232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01232");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
    }

    @Test
    public void test01233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01233");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        int int24 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(charSequenceDeserializer23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483647 + "'", int24 == 2147483647);
    }

    @Test
    public void test01234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01234");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        long long31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer32 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getKeyDeserializer();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer34 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getKeyDeserializer();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getOffsetsCommitPeriodMs();
        int int36 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService37 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder38.build();
        java.lang.String str40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 200L + "'", long31 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 30000L + "'", long33 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 30000L + "'", long35 == 30000L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2147483647 + "'", int36 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
    }

    @Test
    public void test01235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01235");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc42 = null;
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc42, fields43, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig46 = kafkaSpoutRetryServiceBuilder41.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator48, fields49, "hi!");
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator48, fields52);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc62 = null;
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc62, fields63, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder61.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        long long68 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getPollTimeoutMs();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getPollTimeoutMs();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getOffsetsCommitPeriodMs();
        java.lang.String str71 = kafkaSpoutRetryServiceKafkaSpoutConfig66.toString();
        java.lang.String str72 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getConsumerGroupId();
        boolean boolean73 = kafkaSpoutRetryServiceKafkaSpoutConfig66.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder53.setProp("", (java.lang.Object) boolean73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder53.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder53.setFetchMinBytes((int) (short) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 200L + "'", long68 == 200L);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 30000L + "'", long70 == 30000L);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
    }

    @Test
    public void test01236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01236");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder16.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder22.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, charSequenceSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc37 = null;
        org.apache.storm.tuple.Fields fields38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc37, fields38, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig41 = kafkaSpoutRetryServiceBuilder36.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getTranslator();
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator42, fields43, "");
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator42, fields46, "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, charSequenceSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator54);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc56 = null;
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc56, fields57, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig60 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getTranslator();
        long long62 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getPollTimeoutMs();
        long long63 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getPollTimeoutMs();
        long long64 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getOffsetsCommitPeriodMs();
        java.lang.String str65 = kafkaSpoutRetryServiceKafkaSpoutConfig60.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder48.setProp(strMap66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder48.setMaxPartitionFectchBytes((int) (short) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 200L + "'", long62 == 200L);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 200L + "'", long63 == 200L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 30000L + "'", long64 == 30000L);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
    }

    @Test
    public void test01237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01237");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10000000 + "'", int21 == 10000000);
    }

    @Test
    public void test01238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01238");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.reflect.Type> annotatedElementBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.reflect.Type>("", annotatedElementSerializableDeserializer1, typeSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01239");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder12.setMaxUncommittedOffsets(52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
    }

    @Test
    public void test01240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01240");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        java.lang.String str29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder38.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder46.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder56.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getTranslator();
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator62, fields63);
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator62, fields65);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer68 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer69 = null;
        java.util.regex.Pattern pattern70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer68, charSequenceSerializableDeserializer69, pattern70);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc74 = null;
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder73.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc74, fields75, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig78 = kafkaSpoutRetryServiceBuilder73.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getTranslator();
        long long80 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService81 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 200L + "'", long80 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
    }

    @Test
    public void test01241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01241");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder9.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc32 = null;
        org.apache.storm.tuple.Fields fields33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc32, fields33, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder31.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getPollTimeoutMs();
        boolean boolean39 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        java.lang.String str40 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder4.setRetry(kafkaSpoutRetryService41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '#');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 200L + "'", long38 == 200L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
    }

    @Test
    public void test01242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01242");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords(52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
    }

    @Test
    public void test01243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01243");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.util.AbstractCollection<java.lang.String>> cloneableBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.util.AbstractCollection<java.lang.String>>("", cloneableSerializableDeserializer1, strCollectionSerializableDeserializer2, subscription20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer18);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer19);
        org.junit.Assert.assertNotNull(subscription20);
    }

    @Test
    public void test01244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01244");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder34.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator38, fields39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNull(charSequenceDeserializer36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
    }

    @Test
    public void test01245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01245");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setOffsetCommitPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setMaxPartitionFectchBytes(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig26 = kafkaSpoutRetryServiceBuilder21.build();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
    }

    @Test
    public void test01246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01246");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertNotNull(subscription18);
    }

    @Test
    public void test01247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01247");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder17.setSSLTruststore("", "");
        java.util.Properties properties21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setProp(properties21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
    }

    @Test
    public void test01248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01248");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, charSequenceSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test01249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01249");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, charSequenceSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test01250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01250");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000000 + "'", int15 == 10000000);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
    }

    @Test
    public void test01251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01251");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.lang.Object> cloneableBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.lang.Object>("hi!", cloneableSerializableDeserializer4, objSerializableDeserializer5, strArray9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> charSequenceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("", charSequenceSerializableDeserializer1, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer2, strArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test01252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01252");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc33 = null;
        org.apache.storm.tuple.Fields fields34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc33, fields34, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder32.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder32.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc55 = null;
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc55, fields56, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig59 = kafkaSpoutRetryServiceBuilder54.build();
        long long60 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getTranslator();
        org.apache.storm.tuple.Fields fields62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator61, fields62);
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator61, fields64, "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 200L + "'", long60 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
    }

    @Test
    public void test01253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01253");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(charSequenceDeserializer20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10000000 + "'", int22 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService23);
    }

    @Test
    public void test01254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01254");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
    }

    @Test
    public void test01255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01255");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy30 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy30.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
    }

    @Test
    public void test01256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01256");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc42 = null;
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc42, fields43, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig46 = kafkaSpoutRetryServiceBuilder41.build();
        long long47 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription50 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getSubscription();
        java.lang.String str51 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.tuple.Fields fields54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator53, fields54);
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator53, fields56, "");
        java.lang.Class<?> wildcardClass59 = kafkaSpoutRetryServiceBuilder16.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 200L + "'", long47 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test01257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01257");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder27.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setMaxPartitionFectchBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setOffsetCommitPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder46.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder19.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder46);
        java.lang.Class<?> wildcardClass51 = kafkaSpoutRetryServiceBuilder46.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test01258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01258");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, charSequenceSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator56);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc58 = null;
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig62 = kafkaSpoutRetryServiceBuilder57.build();
        long long63 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy64 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription65 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder48.setProp(strMap66);
        java.util.Properties properties68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setProp(properties68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 200L + "'", long63 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy64 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy64.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
    }

    @Test
    public void test01259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01259");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
    }

    @Test
    public void test01260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01260");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000000 + "'", int18 == 10000000);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer20);
    }

    @Test
    public void test01261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01261");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> genericDeclarationBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>>("", genericDeclarationSerializableDeserializer1, kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer2, subscription17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(subscription17);
    }

    @Test
    public void test01262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01262");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder34.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        long long41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService42 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getRetryService();
        int int43 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer45 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKeyDeserializer();
        boolean boolean46 = kafkaSpoutRetryServiceKafkaSpoutConfig39.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKafkaProps();
        java.lang.String str48 = kafkaSpoutRetryServiceKafkaSpoutConfig39.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer49 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKeyDeserializer();
        int int50 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder23.setProp("", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setPollTimeoutMs((long) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 200L + "'", long41 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2147483647 + "'", int43 == 2147483647);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10000000 + "'", int50 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
    }

    @Test
    public void test01263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01263");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = kafkaSpoutRetryServiceDeserializer18.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer18);
    }

    @Test
    public void test01264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01264");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        boolean boolean17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test01265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01265");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder20.build();
        long long26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getSubscription();
        boolean boolean30 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator31, fields32);
        java.lang.Class<?> wildcardClass34 = kafkaSpoutRetryServiceBuilder33.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 200L + "'", long26 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(subscription29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test01266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01266");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder17.setSSLTruststore("hi!", "hi!");
        java.lang.Class<?> wildcardClass27 = kafkaSpoutRetryServiceBuilder26.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test01267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01267");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getPollTimeoutMs();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder8.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator51);
        java.lang.Class<?> wildcardClass53 = kafkaSpoutRetryServiceBuilder50.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test01268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01268");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder46.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        long long53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getPollTimeoutMs();
        boolean boolean54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder37.setProp(strMap55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder56.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder56.setMaxRetries((-1));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 200L + "'", long53 == 200L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
    }

    @Test
    public void test01269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01269");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer2 = null;
        java.lang.String[] strArray3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.reflect.GenericDeclaration> kafkaSpoutRetryServiceRecordTranslatorBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.reflect.GenericDeclaration>("hi!", kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer1, genericDeclarationSerializableDeserializer2, strArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01270");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer20);
    }

    @Test
    public void test01271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01271");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer5 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Iterable<java.lang.String>> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Iterable<java.lang.String>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, strIterableSerializableDeserializer5, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test01272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01272");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer12 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]> strListBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer11, strArraySerializableDeserializer12, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, charSequenceSerializableDeserializer3, strArray16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test01273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01273");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder26.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder39.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getTranslator();
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields46, "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder56.build();
        long long62 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder48.setProp("", (java.lang.Object) kafkaSpoutRetryServiceRecordTranslator63);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer66 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer67 = null;
        java.util.regex.Pattern pattern68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer66, charSequenceSerializableDeserializer67, pattern68);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator70);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc72 = null;
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc72, fields73, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig76 = kafkaSpoutRetryServiceBuilder71.build();
        long long77 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator78 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getTranslator();
        long long79 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy80 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy81 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder64.setFirstPollOffsetStrategy(firstPollOffsetStrategy81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder15.setFirstPollOffsetStrategy(firstPollOffsetStrategy81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder83.setSSLKeystore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 200L + "'", long62 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 200L + "'", long77 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 2000L + "'", long79 == 2000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy80 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy80.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy81 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy81.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
    }

    @Test
    public void test01274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01274");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.tuple.Fields fields29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator28, fields29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder32.setMaxPollRecords((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder32.setOffsetCommitPeriodMs((long) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setProp(strMap41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
    }

    @Test
    public void test01275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01275");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getConsumerGroupId();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.AbstractCollection<java.lang.String>> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.AbstractCollection<java.lang.String>>("", strSerializableDeserializer1, strCollectionSerializableDeserializer2, subscription19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer18);
        org.junit.Assert.assertNotNull(subscription19);
    }

    @Test
    public void test01276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01276");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords((int) (byte) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
    }

    @Test
    public void test01277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01277");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        boolean boolean34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder19.setProp(strMap35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder6.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setFetchMinBytes(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setSSLKeystore("hi!", "hi!", "hi!");
        java.util.Properties properties63 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setProp(properties63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
    }

    @Test
    public void test01278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01278");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig24 = kafkaSpoutRetryServiceBuilder19.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getTranslator();
        org.apache.storm.tuple.Fields fields27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator26, fields27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder10.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        long long45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService46 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getRetryService();
        long long47 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getPollTimeoutMs();
        long long48 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getOffsetsCommitPeriodMs();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription50 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getSubscription();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder30.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceRecordTranslator51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 200L + "'", long45 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 200L + "'", long47 == 200L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 30000L + "'", long48 == 30000L);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(subscription50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
    }

    @Test
    public void test01279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01279");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        java.lang.String str22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test01280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01280");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder21.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        long long45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getPollTimeoutMs();
        long long46 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer48 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription49 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, subscription49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, charSequenceSerializableDeserializer28, subscription49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc61 = null;
        org.apache.storm.tuple.Fields fields62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc61, fields62, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig65 = kafkaSpoutRetryServiceBuilder60.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getTranslator();
        long long67 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService68 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getRetryService();
        int int69 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer71 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getKeyDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder53.setProp(strMap72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder21.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder53.setMaxRetries((int) (short) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 200L + "'", long45 == 200L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 200L + "'", long46 == 200L);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(charSequenceDeserializer48);
        org.junit.Assert.assertNotNull(subscription49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 200L + "'", long67 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2147483647 + "'", int69 == 2147483647);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
    }

    @Test
    public void test01281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01281");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.Class<?> wildcardClass16 = firstPollOffsetStrategy15.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test01282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01282");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setMaxUncommittedOffsets((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder13.setMaxUncommittedOffsets((int) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
    }

    @Test
    public void test01283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01283");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig26 = kafkaSpoutRetryServiceBuilder17.build();
        java.lang.String str27 = kafkaSpoutRetryServiceKafkaSpoutConfig26.toString();
        org.apache.storm.kafka.spout.Subscription subscription28 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig26);
        org.junit.Assert.assertNotNull(subscription28);
    }

    @Test
    public void test01284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01284");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.io.Serializable> strArrayBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.io.Serializable>("", strArraySerializableDeserializer1, serializableSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test01285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01285");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setMaxRetries((int) (short) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setProp("hi!", (java.lang.Object) strBuilder23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder35.build();
        long long41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder24.setMaxUncommittedOffsets((int) '#');
        java.util.Properties properties46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setProp(properties46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 30000L + "'", long41 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
    }

    @Test
    public void test01286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01286");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy11);
        java.lang.Class<?> wildcardClass13 = kafkaSpoutRetryServiceBuilder10.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy11 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy11.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test01287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01287");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test01288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01288");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder17.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setMaxPollRecords((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setMaxPartitionFectchBytes(2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
    }

    @Test
    public void test01289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01289");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder8.build();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getRetryService();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPollTimeoutMs();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 30000L + "'", long14 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test01290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01290");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, charSequenceSerializableDeserializer9, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strCollectionBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strCollectionSerializableDeserializer5, firstPollOffsetStrategySerializableDeserializer6, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.RandomAccess> strListBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.RandomAccess>("hi!", strListSerializableDeserializer2, randomAccessSerializableDeserializer3, strArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test01291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01291");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray4);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder22.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc43 = null;
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc43, fields44, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig47 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator48, fields49, "");
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator48, fields52, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder5.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setMaxPartitionFectchBytes((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder55.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setFirstPollOffsetStrategy(firstPollOffsetStrategy62);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy62 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy62.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
    }

    @Test
    public void test01292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01292");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.reflect.AnnotatedElement> strMapBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.reflect.AnnotatedElement>("hi!", strMapSerializableDeserializer1, annotatedElementSerializableDeserializer2, subscription17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertNotNull(subscription17);
    }

    @Test
    public void test01293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01293");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        java.lang.Class<?> wildcardClass17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test01294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01294");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRetry(kafkaSpoutRetryService28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder39.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder45.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc60 = null;
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc60, fields61, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder59.build();
        long long65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator66, fields67);
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator66, fields69, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 200L + "'", long65 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
    }

    @Test
    public void test01295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01295");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc45 = null;
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig49 = kafkaSpoutRetryServiceBuilder44.build();
        long long50 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription52 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setOffsetCommitPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder54.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer63 = null;
        java.util.regex.Pattern pattern64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer62, charSequenceSerializableDeserializer63, pattern64);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc68 = null;
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc68, fields69, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder67.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        long long74 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer75 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getKeyDeserializer();
        int int76 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getMaxTupleRetries();
        boolean boolean77 = kafkaSpoutRetryServiceKafkaSpoutConfig72.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer78 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getKeyDeserializer();
        int int79 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getMaxUncommittedOffsets();
        long long80 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getOffsetsCommitPeriodMs();
        long long81 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy82 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder54.setFirstPollOffsetStrategy(firstPollOffsetStrategy82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 200L + "'", long50 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 200L + "'", long74 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483647 + "'", int76 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10000000 + "'", int79 == 10000000);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 30000L + "'", long80 == 30000L);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 2000L + "'", long81 == 2000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy82 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy82.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
    }

    @Test
    public void test01296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01296");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
    }

    @Test
    public void test01297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01297");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer22 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer21, randomAccessSerializableDeserializer22, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer18, randomAccessSerializableDeserializer19, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService> typeBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", typeSerializableDeserializer13, kafkaSpoutRetryServiceSerializableDeserializer14, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.Subscription> strIterableBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.Subscription>("hi!", strIterableSerializableDeserializer10, subscriptionSerializableDeserializer11, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.reflect.Type> strMapBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.reflect.Type>("hi!", strMapSerializableDeserializer7, typeSerializableDeserializer8, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.String> annotatedElementBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.String>("hi!", annotatedElementSerializableDeserializer4, strSerializableDeserializer5, strArray24);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test01298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01298");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc22 = null;
        org.apache.storm.tuple.Fields fields23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc22, fields23, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig26 = kafkaSpoutRetryServiceBuilder21.build();
        java.lang.String str27 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription29 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> kafkaSpoutRetryServiceConsumerRecordFuncBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer13, firstPollOffsetStrategySerializableDeserializer14, subscription29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, subscription29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutRetryService> firstPollOffsetStrategyEnumBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer7, kafkaSpoutRetryServiceSerializableDeserializer8, subscription29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.util.Collection<java.lang.String>> subscriptionBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.util.Collection<java.lang.String>>("hi!", subscriptionSerializableDeserializer4, strCollectionSerializableDeserializer5, subscription29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator28);
        org.junit.Assert.assertNotNull(subscription29);
    }

    @Test
    public void test01299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01299");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc32 = null;
        org.apache.storm.tuple.Fields fields33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc32, fields33, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder31.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder31.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder44.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder44.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder19.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder44.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig58 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder55.setMaxPartitionFectchBytes((int) (short) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
    }

    @Test
    public void test01300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01300");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder34.build();
        java.lang.String str40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator41, fields42, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder18.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setSecurityProtocol("");
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
    }

    @Test
    public void test01301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01301");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFetchMinBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder48.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder48.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder56.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer62 = null;
        java.util.regex.Pattern pattern63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer61, charSequenceSerializableDeserializer62, pattern63);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator65);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc67 = null;
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc67, fields68, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig71 = kafkaSpoutRetryServiceBuilder66.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getTranslator();
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator72, fields73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.tuple.Fields fields76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator72, fields76);
        java.lang.Class<?> wildcardClass78 = kafkaSpoutRetryServiceBuilder27.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test01302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01302");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000000 + "'", int15 == 10000000);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
    }

    @Test
    public void test01303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01303");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) (short) 10);
        java.lang.String[] strArray29 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder21.setProp("hi!", (java.lang.Object) strBuilder32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setMaxRetries(1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
    }

    @Test
    public void test01304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01304");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> strListBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", strListSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
        java.lang.Class<?> wildcardClass5 = strListBuilder4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test01305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01305");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder6.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder16.setProp("", (java.lang.Object) 10.0d);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder19.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) 52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
    }

    @Test
    public void test01306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01306");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder13.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder38.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder48.build();
        java.lang.String str54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getTranslator();
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields56, "hi!");
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields59, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder8.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder64.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer69 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer70 = null;
        java.util.regex.Pattern pattern71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer69, charSequenceSerializableDeserializer70, pattern71);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator73);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc75 = null;
        org.apache.storm.tuple.Fields fields76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder74.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc75, fields76, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig79 = kafkaSpoutRetryServiceBuilder74.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator80 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator81 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getTranslator();
        int int82 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getMaxUncommittedOffsets();
        long long83 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getOffsetsCommitPeriodMs();
        java.lang.String str84 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService85 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy86 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder67.setFirstPollOffsetStrategy(firstPollOffsetStrategy86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10000000 + "'", int82 == 10000000);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 30000L + "'", long83 == 30000L);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService85);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy86 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy86.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
    }

    @Test
    public void test01307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01307");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc30 = null;
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder29.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        long long36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer37 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer39 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        long long40 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getOffsetsCommitPeriodMs();
        int int41 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder19.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer47 = null;
        java.util.regex.Pattern pattern48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer46, charSequenceSerializableDeserializer47, pattern48);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder49.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc56 = null;
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc56, fields57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder55.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, charSequenceSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc69 = null;
        org.apache.storm.tuple.Fields fields70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc69, fields70, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder68.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator75);
        org.apache.storm.tuple.Fields fields77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator75, fields77, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder44.setGroupId("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 200L + "'", long36 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 30000L + "'", long38 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 30000L + "'", long40 == 30000L);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2147483647 + "'", int41 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
    }

    @Test
    public void test01308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01308");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRetry(kafkaSpoutRetryService25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder4.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder38.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder56.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getTranslator();
        long long63 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer64 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getKeyDeserializer();
        long long65 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer66 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getKeyDeserializer();
        long long67 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getOffsetsCommitPeriodMs();
        int int68 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService69 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder45.setRetry(kafkaSpoutRetryService69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig71 = kafkaSpoutRetryServiceBuilder70.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy73 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer74 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getTranslator();
        org.apache.storm.tuple.Fields fields76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator75, fields76, "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 200L + "'", long63 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 30000L + "'", long65 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 30000L + "'", long67 == 30000L);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2147483647 + "'", int68 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy73 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy73.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
    }

    @Test
    public void test01309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01309");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10000000 + "'", int21 == 10000000);
        org.junit.Assert.assertNull(charSequenceDeserializer22);
    }

    @Test
    public void test01310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01310");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder27.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder35.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setMaxRetries(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setMaxRetries((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder21.setProp("", (java.lang.Object) (short) 0);
        java.util.Properties properties52 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setProp(properties52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
    }

    @Test
    public void test01311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01311");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        boolean boolean34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder19.setProp(strMap35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder6.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, charSequenceSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator63);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc65 = null;
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc65, fields66, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig69 = kafkaSpoutRetryServiceBuilder64.build();
        org.apache.storm.kafka.spout.Subscription subscription70 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, subscription70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig74 = kafkaSpoutRetryServiceBuilder73.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy75 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy76 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder54.setFirstPollOffsetStrategy(firstPollOffsetStrategy76);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder77.setSSLKeystore("hi!", "", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig69);
        org.junit.Assert.assertNotNull(subscription70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig74);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy75 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy75.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy76 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy76.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
    }

    @Test
    public void test01312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01312");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder14.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getFirstPollOffsetStrategy();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
    }

    @Test
    public void test01313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01313");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.AbstractCollection<java.lang.String>> objBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.AbstractCollection<java.lang.String>>("", objSerializableDeserializer1, strCollectionSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01314");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setMaxPollRecords((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder16.setSSLKeystore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
    }

    @Test
    public void test01315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01315");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        boolean boolean34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder19.setProp(strMap35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder6.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setFetchMinBytes(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer62 = null;
        java.util.regex.Pattern pattern63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer61, charSequenceSerializableDeserializer62, pattern63);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder64.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc71 = null;
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc71, fields72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder75.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder75.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder54.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder81.setMaxPollRecords(0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
    }

    @Test
    public void test01316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01316");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder9.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator35, fields36, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder9.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder9.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder42.build();
        java.lang.String str44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getConsumerGroupId();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy30 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy30.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test01317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01317");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc34 = null;
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc34, fields35, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder46.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields53, "hi!");
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields56, "");
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setFetchMinBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setSSLKeystore("", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder68.setSSLKeystore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
    }

    @Test
    public void test01318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01318");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
    }

    @Test
    public void test01319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01319");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer9 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.reflect.Type> firstPollOffsetStrategyBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.reflect.Type>("hi!", firstPollOffsetStrategySerializableDeserializer8, typeSerializableDeserializer9, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test01320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01320");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getPollTimeoutMs();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields46);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc55 = null;
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc55, fields56, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setOffsetCommitPeriodMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig63 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService64 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder47.setRetry(kafkaSpoutRetryService64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder65.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer70 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer71 = null;
        java.util.regex.Pattern pattern72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer70, charSequenceSerializableDeserializer71, pattern72);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator74);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc76 = null;
        org.apache.storm.tuple.Fields fields77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder75.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc76, fields77, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig80 = kafkaSpoutRetryServiceBuilder75.build();
        long long81 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator82 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getTranslator();
        long long83 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getPartitionRefreshPeriodMs();
        boolean boolean84 = kafkaSpoutRetryServiceKafkaSpoutConfig80.isConsumerAutoCommitMode();
        java.lang.String str85 = kafkaSpoutRetryServiceKafkaSpoutConfig80.toString();
        boolean boolean86 = kafkaSpoutRetryServiceKafkaSpoutConfig80.isConsumerAutoCommitMode();
        int int87 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getMaxTupleRetries();
        java.lang.String str88 = kafkaSpoutRetryServiceKafkaSpoutConfig80.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator89 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getTranslator();
        org.apache.storm.tuple.Fields fields90 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator89, fields90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 200L + "'", long81 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 2000L + "'", long83 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2147483647 + "'", int87 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
    }

    @Test
    public void test01321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01321");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFetchMinBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder31.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder47.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder56.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer62 = null;
        java.util.regex.Pattern pattern63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer61, charSequenceSerializableDeserializer62, pattern63);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator65);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc67 = null;
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc67, fields68, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig71 = kafkaSpoutRetryServiceBuilder66.build();
        java.lang.String str72 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator73 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getTranslator();
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator73, fields74, "hi!");
        org.apache.storm.tuple.Fields fields77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator73, fields77, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder25.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceRecordTranslator73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder25.setMaxUncommittedOffsets((int) (short) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
    }

    @Test
    public void test01322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01322");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder15.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder27);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder35.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        long long42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService43 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getRetryService();
        int int44 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder48.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer54 = null;
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer53, charSequenceSerializableDeserializer54, (java.util.Collection<java.lang.String>) strList58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder61.setRetry(kafkaSpoutRetryService66);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer69 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer70 = null;
        java.util.regex.Pattern pattern71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer69, charSequenceSerializableDeserializer70, pattern71);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator73);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc75 = null;
        org.apache.storm.tuple.Fields fields76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder74.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc75, fields76, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig79 = kafkaSpoutRetryServiceBuilder74.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator80 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator81 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getTranslator();
        org.apache.storm.tuple.Fields fields82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator81, fields82, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 200L + "'", long42 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2147483647 + "'", int44 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
    }

    @Test
    public void test01323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01323");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setFetchMinBytes(10000000);
        java.util.Properties properties19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setProp(properties19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
    }

    @Test
    public void test01324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01324");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder12.build();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getConsumerGroupId();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.toString();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription16);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(subscription16);
    }

    @Test
    public void test01325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01325");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
    }

    @Test
    public void test01326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01326");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setMaxUncommittedOffsets(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder31.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder23.setProp("hi!", (java.lang.Object) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setMaxPollRecords((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer43 = null;
        java.util.regex.Pattern pattern44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer42, charSequenceSerializableDeserializer43, pattern44);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator46);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc48 = null;
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc48, fields49, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig52 = kafkaSpoutRetryServiceBuilder47.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getTranslator();
        long long54 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService55 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getRetryService();
        int int56 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer58 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 200L + "'", long54 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2147483647 + "'", int56 == 2147483647);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
    }

    @Test
    public void test01327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01327");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder23.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc30 = null;
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc30, fields31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc43 = null;
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc43, fields44, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig47 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, charSequenceSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator56);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc58 = null;
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig62 = kafkaSpoutRetryServiceBuilder57.build();
        java.lang.String str63 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getConsumerGroupId();
        long long64 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getPollTimeoutMs();
        java.lang.String str65 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService66 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder29.setProp(strMap67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder4.setProp(strMap67);
        java.lang.Class<?> wildcardClass70 = kafkaSpoutRetryServiceBuilder69.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 200L + "'", long64 == 200L);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test01328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01328");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 30000L + "'", long19 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 200L + "'", long21 == 200L);
    }

    @Test
    public void test01329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01329");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertNull(charSequenceDeserializer19);
    }

    @Test
    public void test01330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01330");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setPollTimeoutMs((long) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder26.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder26.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder26.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder44.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig58 = kafkaSpoutRetryServiceBuilder55.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder26.setProp(strMap59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder17.setProp(strMap59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
    }

    @Test
    public void test01331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01331");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceBuilderSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> typeBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("", typeSerializableDeserializer1, kafkaSpoutRetryServiceBuilderSerializableDeserializer2, subscription21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(subscription19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(subscription21);
    }

    @Test
    public void test01332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01332");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.lang.String[] strArray3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> strCollectionBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", strCollectionSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, strArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01333");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.lang.Class<?> wildcardClass14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2000L + "'", long13 == 2000L);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test01334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01334");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder19.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder39.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getTranslator();
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder13.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder48.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, charSequenceSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator63);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc65 = null;
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc65, fields66, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig69 = kafkaSpoutRetryServiceBuilder64.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy70 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder55.setFirstPollOffsetStrategy(firstPollOffsetStrategy70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig69);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy70 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy70.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
    }

    @Test
    public void test01335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01335");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder13.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder26);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, charSequenceSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder53.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder53.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder53.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setFirstPollOffsetStrategy(firstPollOffsetStrategy62);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService64 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRetry(kafkaSpoutRetryService64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder44.setRetry(kafkaSpoutRetryService64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy67 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setFirstPollOffsetStrategy(firstPollOffsetStrategy67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder28.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer74 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer75 = null;
        java.util.regex.Pattern pattern76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer74, charSequenceSerializableDeserializer75, pattern76);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator78);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc80 = null;
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder79.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc80, fields81, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig84 = kafkaSpoutRetryServiceBuilder79.build();
        long long85 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator86 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy87 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription88 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy90 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator91 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator92 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder71.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig84);
        int int94 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy62 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy62.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy67 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy67.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 200L + "'", long85 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator86);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy87 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy87.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy90 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy90.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 2147483647 + "'", int94 == 2147483647);
    }

    @Test
    public void test01336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01336");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc18, fields19, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getTranslator();
        long long24 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer26 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer27 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        java.util.Properties properties30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setProp(properties30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 200L + "'", long24 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer26);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
    }

    @Test
    public void test01337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01337");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder22.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder42.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder42.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder33.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator72, fields73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder75.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder75.setOffsetCommitPeriodMs(200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService70);
        org.junit.Assert.assertNull(charSequenceDeserializer71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
    }

    @Test
    public void test01338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01338");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceBuilderSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.reflect.AnnotatedElement> strListBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.reflect.AnnotatedElement>("hi!", strListSerializableDeserializer7, annotatedElementSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.Collection<java.lang.String>> kafkaSpoutRetryServiceBuilderBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.Collection<java.lang.String>>("hi!", kafkaSpoutRetryServiceBuilderSerializableDeserializer4, strCollectionSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test01339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01339");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        boolean boolean34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder19.setProp(strMap35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder6.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setMaxUncommittedOffsets((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc64 = null;
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc64, fields65, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig68 = kafkaSpoutRetryServiceBuilder63.build();
        java.lang.String str69 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getConsumerGroupId();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getPollTimeoutMs();
        java.lang.String str71 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService72 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy73 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder56.setFirstPollOffsetStrategy(firstPollOffsetStrategy73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 200L + "'", long70 == 200L);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService72);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy73 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy73.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
    }

    @Test
    public void test01340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01340");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder14.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, charSequenceSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder25.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder39.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder39.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy48 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setFirstPollOffsetStrategy(firstPollOffsetStrategy48);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setRetry(kafkaSpoutRetryService50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder34.setRetry(kafkaSpoutRetryService50);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc60 = null;
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc60, fields61, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder59.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder70.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder70.setMaxRetries((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder19.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder76);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService78 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setRetry(kafkaSpoutRetryService78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy48 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy48.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
    }

    @Test
    public void test01341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01341");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder32.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder20.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder43.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer52 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable> randomAccessBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable>("hi!", randomAccessSerializableDeserializer51, serializableSerializableDeserializer52, (java.util.Collection<java.lang.String>) strList55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, charSequenceSerializableDeserializer49, (java.util.Collection<java.lang.String>) strList55);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer61 = null;
        java.util.regex.Pattern pattern62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer60, charSequenceSerializableDeserializer61, pattern62);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc66 = null;
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc66, fields67, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig70 = kafkaSpoutRetryServiceBuilder65.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getTranslator();
        long long72 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService73 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getRetryService();
        int int74 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService75 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder58.setRetry(kafkaSpoutRetryService75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder43.setRetry(kafkaSpoutRetryService75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setPartitionRefreshPeriodMs((long) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder79.setSSLKeystore("hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 200L + "'", long72 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2147483647 + "'", int74 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
    }

    @Test
    public void test01342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01342");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (short) 10);
        java.lang.Class<?> wildcardClass20 = kafkaSpoutRetryServiceBuilder17.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test01343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01343");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder11.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder11.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc26 = null;
        org.apache.storm.tuple.Fields fields27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc26, fields27, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig30 = kafkaSpoutRetryServiceBuilder25.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getTranslator();
        long long32 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getRetryService();
        int int34 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getMaxTupleRetries();
        boolean boolean35 = kafkaSpoutRetryServiceKafkaSpoutConfig30.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder11.setMaxUncommittedOffsets((-1));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 200L + "'", long32 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2147483647 + "'", int34 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
    }

    @Test
    public void test01344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01344");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder10.setMaxPollRecords((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("hi!", "");
        java.util.Properties properties32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder10.setProp(properties32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
    }

    @Test
    public void test01345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01345");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer5, randomAccessSerializableDeserializer6, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.reflect.AnnotatedElement> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.reflect.AnnotatedElement>("", strSerializableDeserializer1, annotatedElementSerializableDeserializer2, strArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test01346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01346");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.Comparable<java.lang.String>> annotatedElementBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.Comparable<java.lang.String>>("hi!", annotatedElementSerializableDeserializer1, strComparableSerializableDeserializer2, pattern3);
    }

    @Test
    public void test01347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01347");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder9.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator29, fields30, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder34.setMaxRetries((int) (short) -1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
    }

    @Test
    public void test01348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01348");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription19);
        org.junit.Assert.assertNotNull(subscription20);
    }

    @Test
    public void test01349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01349");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.reflect.Type> strIterableBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.reflect.Type>("", strIterableSerializableDeserializer1, typeSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01350");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        long long29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription32 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder16.setProp(strMap33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder16.setSSLKeystore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 200L + "'", long29 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
    }

    @Test
    public void test01351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01351");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder13.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder47.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder47.setFirstPollOffsetStrategy(firstPollOffsetStrategy55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder47.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer61 = null;
        java.util.regex.Pattern pattern62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer60, charSequenceSerializableDeserializer61, pattern62);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder63.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder72.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer77 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer78 = null;
        java.util.regex.Pattern pattern79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer77, charSequenceSerializableDeserializer78, pattern79);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder80.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator81);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc83 = null;
        org.apache.storm.tuple.Fields fields84 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder82.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc83, fields84, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig87 = kafkaSpoutRetryServiceBuilder82.build();
        java.lang.String str88 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator89 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getTranslator();
        org.apache.storm.tuple.Fields fields90 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator89, fields90, "hi!");
        org.apache.storm.tuple.Fields fields93 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator89, fields93, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator89);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder97 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator89);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder98 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder98);
    }

    @Test
    public void test01352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01352");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long24 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000000 + "'", int20 == 10000000);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2000L + "'", long24 == 2000L);
    }

    @Test
    public void test01353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01353");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder8.setFetchMinBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) 52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
    }

    @Test
    public void test01354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01354");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder10.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder10.setMaxPartitionFectchBytes((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder28.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getPollTimeoutMs();
        boolean boolean36 = kafkaSpoutRetryServiceKafkaSpoutConfig33.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder21.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder21.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder48.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getTranslator();
        long long55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService56 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getRetryService();
        java.lang.String str57 = kafkaSpoutRetryServiceKafkaSpoutConfig53.toString();
        boolean boolean58 = kafkaSpoutRetryServiceKafkaSpoutConfig53.isConsumerAutoCommitMode();
        long long59 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer60 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getValueDeserializer();
        boolean boolean61 = kafkaSpoutRetryServiceKafkaSpoutConfig53.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer62 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy63 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy63);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer68 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer69 = null;
        java.util.regex.Pattern pattern70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer68, charSequenceSerializableDeserializer69, pattern70);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc74 = null;
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder73.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc74, fields75, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig78 = kafkaSpoutRetryServiceBuilder73.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getTranslator();
        long long80 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer81 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getKeyDeserializer();
        long long82 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer83 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getKeyDeserializer();
        boolean boolean84 = kafkaSpoutRetryServiceKafkaSpoutConfig78.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer85 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getKeyDeserializer();
        long long86 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder10.setProp("hi!", (java.lang.Object) long86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 200L + "'", long35 == 200L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 200L + "'", long55 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 2000L + "'", long59 == 2000L);
        org.junit.Assert.assertNull(charSequenceDeserializer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(charSequenceDeserializer62);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy63 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy63.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 200L + "'", long80 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 30000L + "'", long82 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer85);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 200L + "'", long86 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
    }

    @Test
    public void test01355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01355");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator20);
    }

    @Test
    public void test01356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01356");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder7.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder7.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder7.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setFirstPollOffsetStrategy(firstPollOffsetStrategy16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder17.build();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.toString();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("", kafkaSpoutRetryServiceSerializableDeserializer1, firstPollOffsetStrategySerializableDeserializer2, subscription22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertNotNull(subscription22);
    }

    @Test
    public void test01357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01357");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test01358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01358");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields50, "hi!");
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, charSequenceSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator63);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc65 = null;
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc65, fields66, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig69 = kafkaSpoutRetryServiceBuilder64.build();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy71 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder57.setProp(strMap72);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer75 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer76 = null;
        java.util.regex.Pattern pattern77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer75, charSequenceSerializableDeserializer76, pattern77);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc81 = null;
        org.apache.storm.tuple.Fields fields82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder80.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc81, fields82, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig85 = kafkaSpoutRetryServiceBuilder80.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator86 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getTranslator();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService88 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getRetryService();
        int int89 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService90 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder57.setRetry(kafkaSpoutRetryService90);
        java.lang.Class<?> wildcardClass92 = kafkaSpoutRetryService90.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 200L + "'", long70 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy71 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy71.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 200L + "'", long87 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2147483647 + "'", int89 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test01359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01359");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(subscription20);
    }

    @Test
    public void test01360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01360");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
    }

    @Test
    public void test01361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01361");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc30 = null;
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder29.build();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription37 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getSubscription();
        int int38 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getFirstPollOffsetStrategy();
        java.lang.String str41 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setPollTimeoutMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder45.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setMaxPartitionFectchBytes(10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 200L + "'", long35 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2147483647 + "'", int38 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy40 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy40.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
    }

    @Test
    public void test01362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01362");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
    }

    @Test
    public void test01363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01363");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder41.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder41.setOffsetCommitPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder41.setPollTimeoutMs(100L);
        java.util.Properties properties47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder41.setProp(properties47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
    }

    @Test
    public void test01364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01364");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer6 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]> strListBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer5, strArraySerializableDeserializer6, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, charSequenceSerializableDeserializer3, strArray10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test01365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01365");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder21.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder33.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder36.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setFetchMinBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer47 = null;
        java.util.regex.Pattern pattern48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer46, charSequenceSerializableDeserializer47, pattern48);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc52 = null;
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc52, fields53, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder51.build();
        org.apache.storm.kafka.spout.Subscription subscription57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, subscription57);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer61 = null;
        java.util.regex.Pattern pattern62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer60, charSequenceSerializableDeserializer61, pattern62);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc66 = null;
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc66, fields67, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig70 = kafkaSpoutRetryServiceBuilder65.build();
        long long71 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getTranslator();
        long long73 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getPartitionRefreshPeriodMs();
        boolean boolean74 = kafkaSpoutRetryServiceKafkaSpoutConfig70.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator76 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getTranslator();
        org.apache.storm.tuple.Fields fields77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator76, fields77);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator76);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNotNull(subscription57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 200L + "'", long71 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 2000L + "'", long73 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
    }

    @Test
    public void test01366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01366");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
    }

    @Test
    public void test01367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01367");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.String> firstPollOffsetStrategyEnumBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.String>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test01368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01368");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRetry(kafkaSpoutRetryService11);
        java.lang.Object obj14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder10.setProp("", obj14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder20.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder46.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc60 = null;
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc60, fields61, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder59.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator65, fields66, "hi!");
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator65, fields69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator65);
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator65, fields72);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer75 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer76 = null;
        java.util.regex.Pattern pattern77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer75, charSequenceSerializableDeserializer76, pattern77);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder80.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder80.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig85 = kafkaSpoutRetryServiceBuilder84.build();
        int int86 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService88 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer89 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer90 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy91 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 2147483647 + "'", int86 == 2147483647);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService88);
        org.junit.Assert.assertNull(charSequenceDeserializer89);
        org.junit.Assert.assertNull(charSequenceDeserializer90);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy91 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy91.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
    }

    @Test
    public void test01369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01369");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setOffsetCommitPeriodMs((long) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder28.build();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription36 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getSubscription();
        int int37 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder21.setProp(strMap39);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer43 = null;
        java.util.regex.Pattern pattern44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer42, charSequenceSerializableDeserializer43, pattern44);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder45.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder45.setFirstPollOffsetStrategy(firstPollOffsetStrategy53);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder59.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder59.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy68 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setFirstPollOffsetStrategy(firstPollOffsetStrategy68);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService70 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder67.setRetry(kafkaSpoutRetryService70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder54.setRetry(kafkaSpoutRetryService70);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer74 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer75 = null;
        java.util.regex.Pattern pattern76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer74, charSequenceSerializableDeserializer75, pattern76);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator78);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc80 = null;
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder79.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc80, fields81, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig84 = kafkaSpoutRetryServiceBuilder79.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator85 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator85);
        org.apache.storm.tuple.Fields fields87 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator85, fields87, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder89.setBootstrapServers("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 200L + "'", long34 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy35 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy35.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2147483647 + "'", int37 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy68 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy68.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
    }

    @Test
    public void test01370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01370");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test01371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01371");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields50, "hi!");
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, charSequenceSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator63);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc65 = null;
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc65, fields66, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig69 = kafkaSpoutRetryServiceBuilder64.build();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy71 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder57.setProp(strMap72);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer75 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer76 = null;
        java.util.regex.Pattern pattern77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer75, charSequenceSerializableDeserializer76, pattern77);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc81 = null;
        org.apache.storm.tuple.Fields fields82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder80.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc81, fields82, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig85 = kafkaSpoutRetryServiceBuilder80.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator86 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getTranslator();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService88 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer89 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator90 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getTranslator();
        org.apache.storm.tuple.Fields fields91 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator90, fields91);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder57.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig95 = kafkaSpoutRetryServiceBuilder94.build();
        int int96 = kafkaSpoutRetryServiceKafkaSpoutConfig95.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 200L + "'", long70 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy71 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy71.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 200L + "'", long87 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService88);
        org.junit.Assert.assertNull(charSequenceDeserializer89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test01372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01372");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder34.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        long long41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getPollTimeoutMs();
        long long42 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer44 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getValueDeserializer();
        int int45 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder26.setProp(strMap46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setSSLKeystore("hi!", "", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 200L + "'", long41 == 200L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 200L + "'", long42 == 200L);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(charSequenceDeserializer44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10000000 + "'", int45 == 10000000);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
    }

    @Test
    public void test01373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01373");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder40.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder40.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRetry(kafkaSpoutRetryService51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder31.setRetry(kafkaSpoutRetryService51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer61 = null;
        java.util.regex.Pattern pattern62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer60, charSequenceSerializableDeserializer61, pattern62);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc66 = null;
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc66, fields67, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig70 = kafkaSpoutRetryServiceBuilder65.build();
        long long71 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy72 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription73 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getSubscription();
        int int74 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy75 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder57.setProp("hi!", (java.lang.Object) strMap76);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder15.setProp(strMap76);
        java.lang.Class<?> wildcardClass79 = strMap76.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 200L + "'", long71 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy72 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy72.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2147483647 + "'", int74 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy75 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy75.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test01374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01374");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, charSequenceSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer5, strCollectionSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String[]> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String[]>("hi!", strSerializableDeserializer2, strArraySerializableDeserializer3, (java.util.Collection<java.lang.String>) strList13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test01375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01375");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setPollTimeoutMs((long) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder35.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        long long42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getPollTimeoutMs();
        boolean boolean43 = kafkaSpoutRetryServiceKafkaSpoutConfig40.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder28.setProp(strMap44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder52.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder58.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, charSequenceSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator71);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc73 = null;
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc73, fields74, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig77 = kafkaSpoutRetryServiceBuilder72.build();
        long long78 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getTranslator();
        org.apache.storm.tuple.Fields fields80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator79, fields80);
        org.apache.storm.tuple.Fields fields82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator79, fields82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder23.setMaxPollRecords(0);
        java.lang.Class<?> wildcardClass87 = kafkaSpoutRetryServiceBuilder23.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 200L + "'", long42 == 200L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 200L + "'", long78 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test01376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01376");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder10.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
    }

    @Test
    public void test01377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01377");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutRetryService> strComparableBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("", strComparableSerializableDeserializer1, kafkaSpoutRetryServiceSerializableDeserializer2, strArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test01378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01378");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder19.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder39.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getTranslator();
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder13.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder48);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder56.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getTranslator();
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator63, fields64);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, charSequenceSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator71);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc73 = null;
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc73, fields74, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig77 = kafkaSpoutRetryServiceBuilder72.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator78 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getTranslator();
        long long79 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getPollTimeoutMs();
        long long80 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getPollTimeoutMs();
        long long81 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getOffsetsCommitPeriodMs();
        java.lang.String str82 = kafkaSpoutRetryServiceKafkaSpoutConfig77.toString();
        java.lang.String str83 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getConsumerGroupId();
        boolean boolean84 = kafkaSpoutRetryServiceKafkaSpoutConfig77.isConsumerAutoCommitMode();
        java.lang.String str85 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getConsumerGroupId();
        long long86 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getOffsetsCommitPeriodMs();
        int int87 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator88 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getTranslator();
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields89, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder65.setFetchMinBytes((int) (short) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 200L + "'", long79 == 200L);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 200L + "'", long80 == 200L);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 30000L + "'", long81 == 30000L);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 30000L + "'", long86 == 30000L);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2147483647 + "'", int87 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
    }

    @Test
    public void test01379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01379");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder19.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator32);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc34 = null;
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc34, fields35, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getTranslator();
        long long40 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getPollTimeoutMs();
        boolean boolean41 = kafkaSpoutRetryServiceKafkaSpoutConfig38.isConsumerAutoCommitMode();
        java.lang.String str42 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getConsumerGroupId();
        int int43 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getMaxTupleRetries();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setFirstPollOffsetStrategy(firstPollOffsetStrategy45);
        java.util.Properties properties47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder24.setProp(properties47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 200L + "'", long40 == 200L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2147483647 + "'", int43 == 2147483647);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 2000L + "'", long44 == 2000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
    }

    @Test
    public void test01380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01380");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder55.setMaxRetries(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder55.setMaxPartitionFectchBytes((int) (byte) 1);
        java.util.Properties properties64 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder55.setProp(properties64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
    }

    @Test
    public void test01381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01381");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer37 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getValueDeserializer();
        boolean boolean38 = kafkaSpoutRetryServiceKafkaSpoutConfig35.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder23.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, charSequenceSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator51);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc53 = null;
        org.apache.storm.tuple.Fields fields54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc53, fields54, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig57 = kafkaSpoutRetryServiceBuilder52.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getTranslator();
        long long59 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService60 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription61 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getSubscription();
        java.lang.String str62 = kafkaSpoutRetryServiceKafkaSpoutConfig57.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer63 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder42.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig57);
        long long65 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(charSequenceDeserializer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 200L + "'", long59 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService60);
        org.junit.Assert.assertNotNull(subscription61);
        org.junit.Assert.assertNull(charSequenceDeserializer63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 2000L + "'", long65 == 2000L);
    }

    @Test
    public void test01382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01382");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setMaxRetries((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder45.setGroupId("hi!");
        java.lang.Object obj53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder51.setProp("hi!", obj53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
    }

    @Test
    public void test01383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01383");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer18 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable> randomAccessBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable>("hi!", randomAccessSerializableDeserializer17, serializableSerializableDeserializer18, (java.util.Collection<java.lang.String>) strList21);
        java.lang.Class<?> wildcardClass24 = strList21.getClass();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder6.setProp("", (java.lang.Object) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setFetchMinBytes((int) (short) 0);
        java.util.Properties properties30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setProp(properties30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
    }

    @Test
    public void test01384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01384");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getPollTimeoutMs();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder8.build();
        org.apache.storm.kafka.spout.Subscription subscription49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getSubscription();
        long long50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getPollTimeoutMs();
        int int51 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(subscription49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 200L + "'", long50 == 200L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10000000 + "'", int51 == 10000000);
    }

    @Test
    public void test01385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01385");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.reflect.AnnotatedElement> kafkaSpoutRetryServiceKafkaSpoutConfigBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.reflect.AnnotatedElement>("", kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer1, annotatedElementSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01386");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test01387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01387");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setOffsetCommitPeriodMs((long) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, charSequenceSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, charSequenceSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer47 = null;
        java.util.regex.Pattern pattern48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer46, charSequenceSerializableDeserializer47, pattern48);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc52 = null;
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc52, fields53, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder51.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator57, fields58, "hi!");
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator57, fields61);
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator57, fields63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
    }

    @Test
    public void test01388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01388");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> randomAccessBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("hi!", randomAccessSerializableDeserializer1, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer2, pattern3);
    }

    @Test
    public void test01389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01389");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable> randomAccessBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable>("hi!", randomAccessSerializableDeserializer7, serializableSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.reflect.AnnotatedElement> strBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.reflect.AnnotatedElement>("hi!", strSerializableDeserializer4, annotatedElementSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> subscriptionBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("", subscriptionSerializableDeserializer1, kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test01390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01390");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 30000L + "'", long19 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2000L + "'", long22 == 2000L);
    }

    @Test
    public void test01391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01391");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, charSequenceSerializableDeserializer12, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strCollectionBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strCollectionSerializableDeserializer8, firstPollOffsetStrategySerializableDeserializer9, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.Iterable<java.lang.String>> firstPollOffsetStrategyBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.Iterable<java.lang.String>>("hi!", firstPollOffsetStrategySerializableDeserializer4, strIterableSerializableDeserializer5, strArray14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>> strListBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>>("", strListSerializableDeserializer1, strComparableSerializableDeserializer2, strArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test01392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01392");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "", "hi!");
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder20.setProp("", (java.lang.Object) strBuilder27);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder35.build();
        org.apache.storm.kafka.spout.Subscription subscription41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService43 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder28.setProp(strMap45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, charSequenceSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder55.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder55.setFirstPollOffsetStrategy(firstPollOffsetStrategy63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder55.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setPartitionRefreshPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder68.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer75 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer76 = null;
        java.util.regex.Pattern pattern77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer75, charSequenceSerializableDeserializer76, pattern77);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc81 = null;
        org.apache.storm.tuple.Fields fields82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder80.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc81, fields82, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig85 = kafkaSpoutRetryServiceBuilder80.build();
        long long86 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy87 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription88 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getSubscription();
        int int89 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy90 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap91 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder68.setProp(strMap91);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder50.setProp(strMap91);
        java.lang.Class<?> wildcardClass94 = kafkaSpoutRetryServiceBuilder50.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertNotNull(subscription41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig85);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 200L + "'", long86 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy87 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy87.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2147483647 + "'", int89 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy90 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy90.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test01393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01393");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer23 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer22, randomAccessSerializableDeserializer23, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer19, randomAccessSerializableDeserializer20, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService> typeBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", typeSerializableDeserializer14, kafkaSpoutRetryServiceSerializableDeserializer15, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration> objBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration>("hi!", objSerializableDeserializer11, genericDeclarationSerializableDeserializer12, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, charSequenceSerializableDeserializer9, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, strArray25);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.ArrayList<java.lang.String>> strComparableBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.ArrayList<java.lang.String>>("", strComparableSerializableDeserializer1, strListSerializableDeserializer2, strArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test01394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01394");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        long long31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService32 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer33 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder40.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRetry(kafkaSpoutRetryService61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder40.setRetry(kafkaSpoutRetryService61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder15.setMaxUncommittedOffsets((-1));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 200L + "'", long31 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService32);
        org.junit.Assert.assertNull(charSequenceDeserializer33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
    }

    @Test
    public void test01395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01395");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder22.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder22.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder48.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc62 = null;
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc62, fields63, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder61.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields68, "hi!");
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields74, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder76.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder79.setMaxPartitionFectchBytes(52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
    }

    @Test
    public void test01396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01396");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder13.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
    }

    @Test
    public void test01397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01397");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy15);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder21.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder29.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder39.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getTranslator();
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields46);
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder14.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig50 = kafkaSpoutRetryServiceBuilder49.build();
        long long51 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription52 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, subscription52);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.CharSequence> subscriptionBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.CharSequence>("", subscriptionSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 200L + "'", long51 == 200L);
        org.junit.Assert.assertNotNull(subscription52);
    }

    @Test
    public void test01398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01398");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder15.setMaxRetries((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer38 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer37, randomAccessSerializableDeserializer38, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer34, randomAccessSerializableDeserializer35, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService> typeBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", typeSerializableDeserializer29, kafkaSpoutRetryServiceSerializableDeserializer30, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration> objBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration>("hi!", objSerializableDeserializer26, genericDeclarationSerializableDeserializer27, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Cloneable> strIterableBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Cloneable>("hi!", strIterableSerializableDeserializer23, cloneableSerializableDeserializer24, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder20.setProp("", (java.lang.Object) "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder20.setMaxPollRecords(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder50.setSSLTruststore("", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
    }

    @Test
    public void test01399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01399");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, charSequenceSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator31);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc33 = null;
        org.apache.storm.tuple.Fields fields34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc33, fields34, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig37 = kafkaSpoutRetryServiceBuilder32.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getTranslator();
        int int40 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getMaxUncommittedOffsets();
        long long41 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getOffsetsCommitPeriodMs();
        java.lang.String str42 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder25.setFirstPollOffsetStrategy(firstPollOffsetStrategy43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder44.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder44.setPollTimeoutMs((long) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder44.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10000000 + "'", int40 == 10000000);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 30000L + "'", long41 == 30000L);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy43 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy43.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
    }

    @Test
    public void test01400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01400");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder22.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder22.setFirstPollOffsetStrategy(firstPollOffsetStrategy30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder22.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder38.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder47.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, charSequenceSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator56);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc58 = null;
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig62 = kafkaSpoutRetryServiceBuilder57.build();
        java.lang.String str63 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getTranslator();
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator64, fields65, "hi!");
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator64, fields68, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer74 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer75 = null;
        java.util.regex.Pattern pattern76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer74, charSequenceSerializableDeserializer75, pattern76);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder79.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder81.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig86 = kafkaSpoutRetryServiceBuilder81.build();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator88 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getTranslator();
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields89, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder72.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder94.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder98 = kafkaSpoutRetryServiceBuilder96.setPartitionRefreshPeriodMs((long) (short) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 30000L + "'", long87 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder98);
    }

    @Test
    public void test01401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01401");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder34.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder48.build();
        long long54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getTranslator();
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields56);
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields58);
        java.lang.Class<?> wildcardClass60 = kafkaSpoutRetryServiceBuilder23.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 200L + "'", long54 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test01402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01402");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 30000L + "'", long20 == 30000L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
    }

    @Test
    public void test01403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01403");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test01404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01404");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setFirstPollOffsetStrategy(firstPollOffsetStrategy26);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setRetry(kafkaSpoutRetryService28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder38.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder46.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder46.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setFirstPollOffsetStrategy(firstPollOffsetStrategy55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder41.setFirstPollOffsetStrategy(firstPollOffsetStrategy55);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, charSequenceSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder62.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder69.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder71.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer76 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer77 = null;
        java.util.regex.Pattern pattern78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer76, charSequenceSerializableDeserializer77, pattern78);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder79.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator80);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc82 = null;
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder81.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc82, fields83, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig86 = kafkaSpoutRetryServiceBuilder81.build();
        java.lang.String str87 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator88 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getTranslator();
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields89, "hi!");
        org.apache.storm.tuple.Fields fields92 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields92, "hi!");
        org.apache.storm.tuple.Fields fields95 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder97 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields95, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder99 = kafkaSpoutRetryServiceBuilder97.setMaxUncommittedOffsets(100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy55 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy55.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder99);
    }

    @Test
    public void test01405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01405");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRetry(kafkaSpoutRetryService11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFetchMinBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxRetries(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setMaxUncommittedOffsets((int) (short) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
    }

    @Test
    public void test01406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01406");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords(52);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
    }

    @Test
    public void test01407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01407");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer16 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer15, randomAccessSerializableDeserializer16, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer12, randomAccessSerializableDeserializer13, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService> typeBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", typeSerializableDeserializer7, kafkaSpoutRetryServiceSerializableDeserializer8, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration> objBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration>("hi!", objSerializableDeserializer4, genericDeclarationSerializableDeserializer5, strArray18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.String[]> typeBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.String[]>("", typeSerializableDeserializer1, strArraySerializableDeserializer2, strArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test01408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01408");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer2 = null;
        java.util.Collection<java.lang.String> strCollection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> strArrayBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("", strArraySerializableDeserializer1, kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer2, strCollection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01409");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.lang.String str23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long24 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000000 + "'", int20 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2000L + "'", long22 == 2000L);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 200L + "'", long24 == 200L);
    }

    @Test
    public void test01410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01410");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, charSequenceSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder30.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder42.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder53.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, charSequenceSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator71);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc73 = null;
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc73, fields74, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig77 = kafkaSpoutRetryServiceBuilder72.build();
        java.lang.String str78 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getTranslator();
        org.apache.storm.tuple.Fields fields80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator79, fields80, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder85.setMaxUncommittedOffsets((int) '#');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
    }

    @Test
    public void test01411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01411");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setSecurityProtocol("");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
    }

    @Test
    public void test01412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01412");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder33.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, charSequenceSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator54);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc56 = null;
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc56, fields57, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig60 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getTranslator();
        long long62 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getPollTimeoutMs();
        boolean boolean63 = kafkaSpoutRetryServiceKafkaSpoutConfig60.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder46.setProp(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder8.setProp(strMap64);
        java.lang.Class<?> wildcardClass67 = kafkaSpoutRetryServiceBuilder66.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 200L + "'", long62 == 200L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test01413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01413");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList17);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test01414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01414");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig15 = kafkaSpoutRetryServiceBuilder14.build();
        java.util.Properties properties16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder14.setProp(properties16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig15);
    }

    @Test
    public void test01415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01415");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        boolean boolean21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 30000L + "'", long20 == 30000L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test01416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01416");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray4);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder22.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc43 = null;
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc43, fields44, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig47 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator48, fields49, "");
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator48, fields52, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder5.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getPollTimeoutMs();
        java.lang.String str71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder5.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder5.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder75.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder75.setSSLKeystore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 200L + "'", long70 == 200L);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
    }

    @Test
    public void test01417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01417");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("hi!", "");
        java.lang.Class<?> wildcardClass24 = kafkaSpoutRetryServiceBuilder13.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test01418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01418");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test01419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01419");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceBuilderSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer23 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer22, randomAccessSerializableDeserializer23, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer19, randomAccessSerializableDeserializer20, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService> typeBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", typeSerializableDeserializer14, kafkaSpoutRetryServiceSerializableDeserializer15, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration> objBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration>("hi!", objSerializableDeserializer11, genericDeclarationSerializableDeserializer12, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, charSequenceSerializableDeserializer9, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.String> strCollectionBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.String>("hi!", strCollectionSerializableDeserializer5, strSerializableDeserializer6, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray25);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> typeBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("", typeSerializableDeserializer1, kafkaSpoutRetryServiceBuilderSerializableDeserializer2, strArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test01420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01420");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
    }

    @Test
    public void test01421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01421");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setPollTimeoutMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setPartitionRefreshPeriodMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder16.setSSLTruststore("hi!", "");
        java.util.Properties properties20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setProp(properties20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
    }

    @Test
    public void test01422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01422");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc13 = null;
        org.apache.storm.tuple.Fields fields14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc13, fields14, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getTranslator();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription23 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, subscription23);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>, org.apache.storm.kafka.spout.Subscription> kafkaSpoutRetryServiceConsumerRecordFuncBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>, org.apache.storm.kafka.spout.Subscription>("", kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer1, subscriptionSerializableDeserializer2, subscription23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(charSequenceDeserializer22);
        org.junit.Assert.assertNotNull(subscription23);
    }

    @Test
    public void test01423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01423");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.tuple.Fields fields29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator28, fields29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder32.setMaxPollRecords((int) ' ');
        java.util.Properties properties39 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder32.setProp(properties39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
    }

    @Test
    public void test01424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01424");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder8.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder19.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getKeyDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription23 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(subscription23);
    }

    @Test
    public void test01425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01425");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
    }

    @Test
    public void test01426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01426");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder45.build();
        java.lang.Class<?> wildcardClass49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test01427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01427");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy31);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder37.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder37.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setFirstPollOffsetStrategy(firstPollOffsetStrategy46);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService48 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setRetry(kafkaSpoutRetryService48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService48);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, charSequenceSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator56);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc58 = null;
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig62 = kafkaSpoutRetryServiceBuilder57.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder64.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer71 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer72 = null;
        java.util.regex.Pattern pattern73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer71, charSequenceSerializableDeserializer72, pattern73);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator75);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc77 = null;
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc77, fields78, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig81 = kafkaSpoutRetryServiceBuilder76.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator82 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getTranslator();
        long long83 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService84 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getRetryService();
        int int85 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer87 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator88 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getTranslator();
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields89, "");
        org.apache.storm.tuple.Fields fields92 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields92, "hi!");
        java.util.Properties properties95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder94.setProp(properties95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 200L + "'", long83 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2147483647 + "'", int85 == 2147483647);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
    }

    @Test
    public void test01428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01428");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder10.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setOffsetCommitPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setOffsetCommitPeriodMs(1L);
        java.util.Properties properties33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setProp(properties33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
    }

    @Test
    public void test01429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01429");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder7.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder7.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder7.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setFirstPollOffsetStrategy(firstPollOffsetStrategy16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder19.build();
        org.apache.storm.kafka.spout.Subscription subscription23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.util.ArrayList<java.lang.String>> randomAccessBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.util.ArrayList<java.lang.String>>("hi!", randomAccessSerializableDeserializer1, strListSerializableDeserializer2, subscription23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertNotNull(subscription23);
    }

    @Test
    public void test01430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01430");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer10 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer9, charSequenceSerializableDeserializer10, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, strArray12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test01431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01431");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 30000L + "'", long20 == 30000L);
    }

    @Test
    public void test01432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01432");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, charSequenceSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig69 = kafkaSpoutRetryServiceBuilder68.build();
        int int70 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder55.setProp(strMap71);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer75 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer76 = null;
        java.util.regex.Pattern pattern77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer75, charSequenceSerializableDeserializer76, pattern77);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc81 = null;
        org.apache.storm.tuple.Fields fields82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder80.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc81, fields82, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig85 = kafkaSpoutRetryServiceBuilder80.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator86 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getTranslator();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService88 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer89 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder55.setProp("", (java.lang.Object) charSequenceDeserializer89);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder90.setSSLKeystore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2147483647 + "'", int70 == 2147483647);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 200L + "'", long87 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService88);
        org.junit.Assert.assertNull(charSequenceDeserializer89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
    }

    @Test
    public void test01433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01433");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
    }

    @Test
    public void test01434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01434");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder55.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer61 = null;
        java.util.regex.Pattern pattern62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer60, charSequenceSerializableDeserializer61, pattern62);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc66 = null;
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc66, fields67, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig70 = kafkaSpoutRetryServiceBuilder65.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getTranslator();
        long long72 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer73 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getKeyDeserializer();
        long long74 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer75 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getKeyDeserializer();
        long long76 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getOffsetsCommitPeriodMs();
        int int77 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService78 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder58.setRetry(kafkaSpoutRetryService78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder58.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder58.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder83.setSSLTruststore("", "hi!");
        java.util.Properties properties87 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder83.setProp(properties87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 200L + "'", long72 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 30000L + "'", long74 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 30000L + "'", long76 == 30000L);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2147483647 + "'", int77 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
    }

    @Test
    public void test01435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01435");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc13 = null;
        org.apache.storm.tuple.Fields fields14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc13, fields14, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getTranslator();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getRetryService();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer23 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription25 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.ArrayList<java.lang.String>> strComparableBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.ArrayList<java.lang.String>>("hi!", strComparableSerializableDeserializer4, strListSerializableDeserializer5, subscription25);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator24);
        org.junit.Assert.assertNotNull(subscription25);
    }

    @Test
    public void test01436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01436");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test01437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01437");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder33.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, charSequenceSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator54);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc56 = null;
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc56, fields57, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig60 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getTranslator();
        long long62 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getPollTimeoutMs();
        boolean boolean63 = kafkaSpoutRetryServiceKafkaSpoutConfig60.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder46.setProp(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder8.setProp(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder66.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder72.setSSLKeystore("", "", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 200L + "'", long62 == 200L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
    }

    @Test
    public void test01438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01438");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder18.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder29.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder39.setProp("", (java.lang.Object) 10.0d);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder18.setProp("", (java.lang.Object) subscription45);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.util.List<java.lang.String>> randomAccessBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.util.List<java.lang.String>>("", randomAccessSerializableDeserializer1, strListSerializableDeserializer2, subscription45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNull(charSequenceDeserializer44);
        org.junit.Assert.assertNotNull(subscription45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
    }

    @Test
    public void test01439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01439");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
    }

    @Test
    public void test01440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01440");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 30000L + "'", long13 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer18);
    }

    @Test
    public void test01441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01441");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer9 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]> strListBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer8, strArraySerializableDeserializer9, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test01442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01442");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder28.build();
        java.lang.String str34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder36.setSSLKeystore("hi!", "hi!");
        java.lang.Class<?> wildcardClass42 = kafkaSpoutRetryServiceBuilder41.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test01443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01443");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder12.setMaxPartitionFectchBytes((int) '#');
        java.lang.Class<?> wildcardClass19 = kafkaSpoutRetryServiceBuilder18.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test01444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01444");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes(0);
        java.util.Properties properties16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setProp(properties16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
    }

    @Test
    public void test01445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01445");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test01446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01446");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer28);
        org.junit.Assert.assertNotNull(subscription29);
    }

    @Test
    public void test01447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01447");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc13 = null;
        org.apache.storm.tuple.Fields fields14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc13, fields14, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder12.build();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription24 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, subscription24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder26.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder29.setSSLTruststore("", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy23 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy23.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
    }

    @Test
    public void test01448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01448");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder6.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder9.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder9.setMaxPollRecords((int) (short) 10);
        java.util.Properties properties15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setProp(properties15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
    }

    @Test
    public void test01449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01449");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        boolean boolean34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder19.setProp(strMap35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder6.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setFetchMinBytes(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer62 = null;
        java.util.regex.Pattern pattern63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer61, charSequenceSerializableDeserializer62, pattern63);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder64.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc71 = null;
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc71, fields72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder75.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder75.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder54.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder81.setOffsetCommitPeriodMs((long) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
    }

    @Test
    public void test01450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01450");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test01451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01451");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.List<java.lang.String>> annotatedElementBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.List<java.lang.String>>("hi!", annotatedElementSerializableDeserializer8, strListSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test01452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01452");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.Cloneable> randomAccessBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.Cloneable>("", randomAccessSerializableDeserializer1, cloneableSerializableDeserializer2, strArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test01453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01453");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setFetchMinBytes((int) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
    }

    @Test
    public void test01454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01454");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("");
        java.lang.Class<?> wildcardClass22 = kafkaSpoutRetryServiceBuilder21.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test01455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01455");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc18, fields19, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields37, "hi!");
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder45.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder45.setPollTimeoutMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, charSequenceSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator56);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc58 = null;
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig62 = kafkaSpoutRetryServiceBuilder57.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getTranslator();
        long long64 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService65 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer66 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy69 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer70 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getTranslator();
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator71, fields72, "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 200L + "'", long64 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService65);
        org.junit.Assert.assertNull(charSequenceDeserializer66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy69 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy69.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
    }

    @Test
    public void test01456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01456");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setPollTimeoutMs((long) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer65 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer66 = null;
        java.util.regex.Pattern pattern67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer65, charSequenceSerializableDeserializer66, pattern67);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator69);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc71 = null;
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc71, fields72, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig75 = kafkaSpoutRetryServiceBuilder70.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator76 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getTranslator();
        long long77 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService78 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer79 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getKeyDeserializer();
        int int80 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator81 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getTranslator();
        java.lang.String str82 = kafkaSpoutRetryServiceKafkaSpoutConfig75.toString();
        java.lang.String str83 = kafkaSpoutRetryServiceKafkaSpoutConfig75.toString();
        java.lang.String str84 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy85 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder63.setFirstPollOffsetStrategy(firstPollOffsetStrategy85);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService87 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder63.setRetry(kafkaSpoutRetryService87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 200L + "'", long77 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService78);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 10000000 + "'", int80 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator81);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy85 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy85.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
    }

    @Test
    public void test01457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01457");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000000 + "'", int15 == 10000000);
    }

    @Test
    public void test01458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01458");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Object> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Object>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, objSerializableDeserializer2, pattern3);
    }

    @Test
    public void test01459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01459");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator32);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc34 = null;
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc34, fields35, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getTranslator();
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator39, fields40);
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator39, fields42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder43.build();
        long long45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription46 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getSubscription();
        int int47 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 200L + "'", long45 == 200L);
        org.junit.Assert.assertNotNull(subscription46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10000000 + "'", int47 == 10000000);
        org.junit.Assert.assertNotNull(strMap48);
    }

    @Test
    public void test01460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01460");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (-1));
        java.util.Properties properties20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setProp(properties20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
    }

    @Test
    public void test01461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01461");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.toString();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getMaxTupleRetries();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(subscription19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertNotNull(subscription22);
    }

    @Test
    public void test01462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01462");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig24 = kafkaSpoutRetryServiceBuilder19.build();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription28 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder12.setProp(strMap29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder34.build();
        long long36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 200L + "'", long25 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 30000L + "'", long36 == 30000L);
    }

    @Test
    public void test01463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01463");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc42 = null;
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc42, fields43, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig46 = kafkaSpoutRetryServiceBuilder41.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator48, fields49, "hi!");
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator48, fields52);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc62 = null;
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc62, fields63, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder61.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        long long68 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getPollTimeoutMs();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getPollTimeoutMs();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getOffsetsCommitPeriodMs();
        java.lang.String str71 = kafkaSpoutRetryServiceKafkaSpoutConfig66.toString();
        java.lang.String str72 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getConsumerGroupId();
        boolean boolean73 = kafkaSpoutRetryServiceKafkaSpoutConfig66.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder53.setProp("", (java.lang.Object) boolean73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder53.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 200L + "'", long68 == 200L);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 30000L + "'", long70 == 30000L);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
    }

    @Test
    public void test01464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01464");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        java.lang.Class<?> wildcardClass15 = kafkaSpoutRetryServiceBuilder10.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test01465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01465");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
    }

    @Test
    public void test01466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01466");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getOffsetsCommitPeriodMs();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig31.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder17.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setPollTimeoutMs((-1L));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder47.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc61 = null;
        org.apache.storm.tuple.Fields fields62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc61, fields62, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig65 = kafkaSpoutRetryServiceBuilder60.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getTranslator();
        long long67 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getPollTimeoutMs();
        long long68 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder47.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder40.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder71.setSSLTruststore("", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 200L + "'", long34 == 200L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 30000L + "'", long35 == 30000L);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 200L + "'", long67 == 200L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 200L + "'", long68 == 200L);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
    }

    @Test
    public void test01467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01467");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test01468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01468");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getPollTimeoutMs();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder8.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setFetchMinBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setMaxPollRecords((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setOffsetCommitPeriodMs((long) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, (java.util.Collection<java.lang.String>) strList63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder66.build();
        java.lang.String str68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder54.setRetry(kafkaSpoutRetryService71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder72.setSSLKeystore("hi!", "", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer69);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy70 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy70.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
    }

    @Test
    public void test01469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01469");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxUncommittedOffsets((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder42.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder42.setFirstPollOffsetStrategy(firstPollOffsetStrategy50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder42.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder58.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder67.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer72 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer73 = null;
        java.util.regex.Pattern pattern74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer72, charSequenceSerializableDeserializer73, pattern74);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder75.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator76);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc78 = null;
        org.apache.storm.tuple.Fields fields79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder77.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc78, fields79, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig82 = kafkaSpoutRetryServiceBuilder77.build();
        java.lang.String str83 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator84 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getTranslator();
        org.apache.storm.tuple.Fields fields85 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator84, fields85, "hi!");
        org.apache.storm.tuple.Fields fields88 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator84, fields88, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator84);
        org.apache.storm.tuple.Fields fields93 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator84, fields93, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder98 = kafkaSpoutRetryServiceBuilder17.setSSLTruststore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder98);
    }

    @Test
    public void test01470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01470");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        long long30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator31, fields32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes((int) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder42.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setOffsetCommitPeriodMs((long) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc64 = null;
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc64, fields65, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig68 = kafkaSpoutRetryServiceBuilder63.build();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator70 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getTranslator();
        long long71 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getPartitionRefreshPeriodMs();
        boolean boolean72 = kafkaSpoutRetryServiceKafkaSpoutConfig68.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setPartitionRefreshPeriodMs((long) 52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 200L + "'", long30 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 2000L + "'", long71 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
    }

    @Test
    public void test01471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01471");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setMaxUncommittedOffsets((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        long long29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.tuple.Fields fields34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator33, fields34);
        java.util.Properties properties36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setProp(properties36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 200L + "'", long29 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
    }

    @Test
    public void test01472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01472");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder7.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder7.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer29 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer28, randomAccessSerializableDeserializer29, strArray31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer25, randomAccessSerializableDeserializer26, strArray31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder22.setProp("", (java.lang.Object) strArray31);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.reflect.AnnotatedElement> typeBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.reflect.AnnotatedElement>("", typeSerializableDeserializer1, annotatedElementSerializableDeserializer2, strArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
    }

    @Test
    public void test01473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01473");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder4.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer26);
        org.junit.Assert.assertNull(charSequenceDeserializer27);
    }

    @Test
    public void test01474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01474");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder21.build();
        long long23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 200L + "'", long23 == 200L);
    }

    @Test
    public void test01475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01475");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder15.setFirstPollOffsetStrategy(firstPollOffsetStrategy23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder35.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder48.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getTranslator();
        org.apache.storm.tuple.Fields fields55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator54, fields55, "hi!");
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator54, fields58, "");
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator54, fields61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder8.setMaxUncommittedOffsets(10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
    }

    @Test
    public void test01476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01476");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder41.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test01477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01477");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc16 = null;
        org.apache.storm.tuple.Fields fields17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc16, fields17, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getTranslator();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService23 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription24 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, subscription24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strListBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strListSerializableDeserializer4, firstPollOffsetStrategySerializableDeserializer5, subscription24);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 200L + "'", long22 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService23);
        org.junit.Assert.assertNotNull(subscription24);
    }

    @Test
    public void test01478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01478");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, strArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, org.apache.storm.kafka.spout.KafkaSpoutRetryService> serializableBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("", serializableSerializableDeserializer1, kafkaSpoutRetryServiceSerializableDeserializer2, strArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test01479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01479");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder28.build();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription37 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getSubscription();
        int int38 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setMaxRetries((int) (short) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 200L + "'", long34 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10000000 + "'", int38 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
    }

    @Test
    public void test01480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01480");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, charSequenceSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test01481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01481");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer9, charSequenceSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer3, charSequenceSerializableDeserializer4, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test01482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01482");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        int int38 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getMaxUncommittedOffsets();
        long long39 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getOffsetsCommitPeriodMs();
        java.lang.String str40 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer41 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer42 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService43 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder21.setRetry(kafkaSpoutRetryService43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        java.util.Properties properties49 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setProp(properties49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10000000 + "'", int38 == 10000000);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 30000L + "'", long39 == 30000L);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(charSequenceDeserializer41);
        org.junit.Assert.assertNull(charSequenceDeserializer42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
    }

    @Test
    public void test01483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01483");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
    }

    @Test
    public void test01484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01484");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder28.build();
        java.lang.String str34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setFetchMinBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer41 = null;
        java.util.regex.Pattern pattern42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer40, charSequenceSerializableDeserializer41, pattern42);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc46 = null;
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc46, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig52 = kafkaSpoutRetryServiceBuilder49.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getTranslator();
        org.apache.storm.tuple.Fields fields55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator54, fields55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
    }

    @Test
    public void test01485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01485");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test01486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01486");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc18, fields19, "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
    }

    @Test
    public void test01487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01487");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer18);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer19);
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertNotNull(subscription21);
    }

    @Test
    public void test01488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01488");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        java.util.Properties properties11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setProp(properties11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
    }

    @Test
    public void test01489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01489");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder10.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        long long29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder15.setProp("", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setPollTimeoutMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setPartitionRefreshPeriodMs((long) 52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 200L + "'", long29 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy30 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy30.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
    }

    @Test
    public void test01490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01490");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder14.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setOffsetCommitPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxPartitionFectchBytes((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setGroupId("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
    }

    @Test
    public void test01491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01491");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder4.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder23.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc30 = null;
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc30, fields31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder36.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder46.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        long long53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getRetryService();
        int int55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer57 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getKeyDeserializer();
        long long58 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getPartitionRefreshPeriodMs();
        long long59 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator60, fields61, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 200L + "'", long53 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2147483647 + "'", int55 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator56);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 2000L + "'", long58 == 2000L);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 30000L + "'", long59 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
    }

    @Test
    public void test01492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01492");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getRetryService();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getMaxUncommittedOffsets();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> strListBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("", strListSerializableDeserializer1, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer2, subscription19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNull(charSequenceDeserializer14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription19);
    }

    @Test
    public void test01493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01493");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(charSequenceDeserializer20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 30000L + "'", long21 == 30000L);
    }

    @Test
    public void test01494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01494");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer2 = null;
        java.util.Collection<java.lang.String> strCollection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.lang.Iterable<java.lang.String>> cloneableBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.lang.Iterable<java.lang.String>>("", cloneableSerializableDeserializer1, strIterableSerializableDeserializer2, strCollection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01495");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer2 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> strArrayBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("", strArraySerializableDeserializer1, kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer2, strArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test01496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01496");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc26 = null;
        org.apache.storm.tuple.Fields fields27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc26, fields27, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig30 = kafkaSpoutRetryServiceBuilder25.build();
        java.lang.String str31 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer32 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer33 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService34 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder18.setRetry(kafkaSpoutRetryService34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) (byte) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(charSequenceDeserializer32);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
    }

    @Test
    public void test01497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01497");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.reflect.AnnotatedElement> strListBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.reflect.AnnotatedElement>("hi!", strListSerializableDeserializer7, annotatedElementSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.reflect.AnnotatedElement> firstPollOffsetStrategyEnumBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.reflect.AnnotatedElement>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer4, annotatedElementSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test01498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01498");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer37 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getValueDeserializer();
        boolean boolean38 = kafkaSpoutRetryServiceKafkaSpoutConfig35.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder23.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, charSequenceSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator51);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc53 = null;
        org.apache.storm.tuple.Fields fields54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc53, fields54, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig57 = kafkaSpoutRetryServiceBuilder52.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getTranslator();
        long long59 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService60 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription61 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getSubscription();
        java.lang.String str62 = kafkaSpoutRetryServiceKafkaSpoutConfig57.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer63 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder42.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig57);
        int int65 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getMaxTupleRetries();
        org.apache.storm.kafka.spout.Subscription subscription66 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer67 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(charSequenceDeserializer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 200L + "'", long59 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService60);
        org.junit.Assert.assertNotNull(subscription61);
        org.junit.Assert.assertNull(charSequenceDeserializer63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2147483647 + "'", int65 == 2147483647);
        org.junit.Assert.assertNotNull(subscription66);
        org.junit.Assert.assertNull(charSequenceDeserializer67);
    }

    @Test
    public void test01499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01499");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getRetryService();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getFirstPollOffsetStrategy();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        java.lang.String str23 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription24 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000000 + "'", int18 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2000L + "'", long21 == 2000L);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(subscription24);
    }

    @Test
    public void test01500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01500");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        java.util.regex.Pattern pattern4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, charSequenceSerializableDeserializer3, pattern4);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = kafkaSpoutRetryServiceBuilder5.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder5.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder5.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer27 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer26, randomAccessSerializableDeserializer27, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer23, randomAccessSerializableDeserializer24, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder20.setProp("", (java.lang.Object) strArray29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder7);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
    }
}

