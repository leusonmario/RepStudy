import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test01501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01501");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.isConsumerAutoCommitMode();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPartitionRefreshPeriodMs();
        java.lang.Class<?> wildcardClass16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test01502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01502");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder4.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setOffsetCommitPeriodMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder4.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setOffsetCommitPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder47.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.toString();
        org.apache.storm.kafka.spout.Subscription subscription50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(subscription50);
    }

    @Test
    public void test01503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01503");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000000 + "'", int18 == 10000000);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
    }

    @Test
    public void test01504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01504");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxUncommittedOffsets((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder42.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder42.setFirstPollOffsetStrategy(firstPollOffsetStrategy50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder42.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder58.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder67.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer72 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer73 = null;
        java.util.regex.Pattern pattern74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer72, charSequenceSerializableDeserializer73, pattern74);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder75.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator76);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc78 = null;
        org.apache.storm.tuple.Fields fields79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder77.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc78, fields79, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig82 = kafkaSpoutRetryServiceBuilder77.build();
        java.lang.String str83 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator84 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getTranslator();
        org.apache.storm.tuple.Fields fields85 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator84, fields85, "hi!");
        org.apache.storm.tuple.Fields fields88 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator84, fields88, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator84);
        org.apache.storm.tuple.Fields fields93 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator84, fields93, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder97 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder99 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder99);
    }

    @Test
    public void test01505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01505");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray4);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder5.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder5.setMaxPollRecords((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs(100L);
        java.lang.Class<?> wildcardClass13 = kafkaSpoutRetryServiceBuilder12.getClass();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test01506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01506");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, charSequenceSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator31);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc33 = null;
        org.apache.storm.tuple.Fields fields34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc33, fields34, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig37 = kafkaSpoutRetryServiceBuilder32.build();
        java.lang.String str38 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer39 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getValueDeserializer();
        boolean boolean40 = kafkaSpoutRetryServiceKafkaSpoutConfig37.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder25.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        java.util.Properties properties44 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setProp(properties44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(charSequenceDeserializer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
    }

    @Test
    public void test01507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01507");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder17.setPollTimeoutMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder17.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder35.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        int int43 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getMaxUncommittedOffsets();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getOffsetsCommitPeriodMs();
        java.lang.String str45 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService46 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder28.setRetry(kafkaSpoutRetryService46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setPollTimeoutMs((long) (-1));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10000000 + "'", int43 == 10000000);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 30000L + "'", long44 == 30000L);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
    }

    @Test
    public void test01508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01508");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer19);
        org.junit.Assert.assertNotNull(subscription20);
    }

    @Test
    public void test01509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01509");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, charSequenceSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test01510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01510");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder4.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setOffsetCommitPeriodMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder4.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setOffsetCommitPeriodMs((long) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "", "", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, strArray55);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc64 = null;
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc64, fields65, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig68 = kafkaSpoutRetryServiceBuilder63.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator70 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getTranslator();
        long long71 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy72 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder56.setFirstPollOffsetStrategy(firstPollOffsetStrategy72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder47.setFirstPollOffsetStrategy(firstPollOffsetStrategy72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 200L + "'", long71 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy72 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy72.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
    }

    @Test
    public void test01511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01511");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder10.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc41 = null;
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc41, fields42, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig45 = kafkaSpoutRetryServiceBuilder40.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getTranslator();
        long long47 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getPollTimeoutMs();
        boolean boolean48 = kafkaSpoutRetryServiceKafkaSpoutConfig45.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder33.setProp(strMap49);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, charSequenceSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator56);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc58 = null;
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig62 = kafkaSpoutRetryServiceBuilder57.build();
        java.lang.String str63 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setPartitionRefreshPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy68 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder65.setFirstPollOffsetStrategy(firstPollOffsetStrategy68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setMaxRetries(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder70.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer76 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer77 = null;
        java.util.regex.Pattern pattern78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer76, charSequenceSerializableDeserializer77, pattern78);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder79.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator80);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc82 = null;
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder81.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc82, fields83, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig86 = kafkaSpoutRetryServiceBuilder81.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator87 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getTranslator();
        long long88 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer89 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getKeyDeserializer();
        int int90 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getMaxTupleRetries();
        boolean boolean91 = kafkaSpoutRetryServiceKafkaSpoutConfig86.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer92 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getKeyDeserializer();
        int int93 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getMaxUncommittedOffsets();
        long long94 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getOffsetsCommitPeriodMs();
        long long95 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy96 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder97 = kafkaSpoutRetryServiceBuilder70.setFirstPollOffsetStrategy(firstPollOffsetStrategy96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 200L + "'", long47 == 200L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy68 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy68.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 200L + "'", long88 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 2147483647 + "'", int90 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 10000000 + "'", int93 == 10000000);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 30000L + "'", long94 == 30000L);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 2000L + "'", long95 == 2000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy96 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy96.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder97);
    }

    @Test
    public void test01512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01512");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
    }

    @Test
    public void test01513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01513");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setFetchMinBytes((int) (short) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
    }

    @Test
    public void test01514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01514");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.Class<?> wildcardClass16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test01515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01515");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setMaxRetries((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, charSequenceSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator56);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc58 = null;
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig62 = kafkaSpoutRetryServiceBuilder57.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getTranslator();
        long long64 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getPollTimeoutMs();
        boolean boolean65 = kafkaSpoutRetryServiceKafkaSpoutConfig62.isConsumerAutoCommitMode();
        java.lang.String str66 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService67 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder49.setProp("hi!", (java.lang.Object) kafkaSpoutRetryService67);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer70 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer71 = null;
        java.util.regex.Pattern pattern72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer70, charSequenceSerializableDeserializer71, pattern72);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator74);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc76 = null;
        org.apache.storm.tuple.Fields fields77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder75.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc76, fields77, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig80 = kafkaSpoutRetryServiceBuilder75.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator81 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getTranslator();
        long long82 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getPollTimeoutMs();
        long long83 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder49.setProp(strMap84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder49.setFetchMinBytes((int) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 200L + "'", long64 == 200L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 200L + "'", long82 == 200L);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 200L + "'", long83 == 200L);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
    }

    @Test
    public void test01516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01516");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) ' ');
        java.lang.Class<?> wildcardClass15 = kafkaSpoutRetryServiceBuilder8.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test01517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01517");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test01518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01518");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        boolean boolean34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder19.setProp(strMap35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder6.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc64 = null;
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc64, fields65, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig68 = kafkaSpoutRetryServiceBuilder63.build();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator70 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getTranslator();
        long long71 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getPartitionRefreshPeriodMs();
        boolean boolean72 = kafkaSpoutRetryServiceKafkaSpoutConfig68.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder54.setProp(strMap73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setMaxPollRecords(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder74.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder79.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 2000L + "'", long71 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
    }

    @Test
    public void test01519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01519");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc32 = null;
        org.apache.storm.tuple.Fields fields33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc32, fields33, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder31.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getPollTimeoutMs();
        boolean boolean39 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder24.setProp(strMap40);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder48.build();
        java.lang.String str54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setMaxUncommittedOffsets((int) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 200L + "'", long38 == 200L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
    }

    @Test
    public void test01520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01520");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2000L + "'", long13 == 2000L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
    }

    @Test
    public void test01521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01521");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer13);
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
    }

    @Test
    public void test01522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01522");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test01523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01523");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test01524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01524");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.isConsumerAutoCommitMode();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPartitionRefreshPeriodMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPollTimeoutMs();
        java.lang.Class<?> wildcardClass17 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test01525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01525");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder11.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder11.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder11.setMaxRetries(1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
    }

    @Test
    public void test01526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01526");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setFetchMinBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder16.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder16.setMaxPollRecords(10000000);
        java.lang.Class<?> wildcardClass26 = kafkaSpoutRetryServiceBuilder25.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test01527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01527");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder6.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder16.setProp("", (java.lang.Object) 10.0d);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder19.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getSubscription();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer24 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertNull(charSequenceDeserializer21);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer24);
    }

    @Test
    public void test01528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01528");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.reflect.AnnotatedElement> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.reflect.AnnotatedElement>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, annotatedElementSerializableDeserializer5, strArray8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder9);
    }

    @Test
    public void test01529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01529");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig24 = kafkaSpoutRetryServiceBuilder19.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getTranslator();
        org.apache.storm.tuple.Fields fields27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator26, fields27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("hi!");
        java.util.Properties properties33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setProp(properties33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
    }

    @Test
    public void test01530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01530");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setMaxPollRecords((int) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
    }

    @Test
    public void test01531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01531");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
    }

    @Test
    public void test01532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01532");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, charSequenceSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc64 = null;
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc64, fields65, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder63.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer71 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer72 = null;
        java.util.regex.Pattern pattern73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer71, charSequenceSerializableDeserializer72, pattern73);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator75);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc77 = null;
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc77, fields78, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig81 = kafkaSpoutRetryServiceBuilder76.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator82 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getTranslator();
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator82, fields83, "hi!");
        org.apache.storm.tuple.Fields fields86 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator82, fields86);
        org.apache.storm.tuple.Fields fields88 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator82, fields88);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder13.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder91.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder97 = kafkaSpoutRetryServiceBuilder94.setSSLTruststore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder97);
    }

    @Test
    public void test01533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01533");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test01534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01534");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
    }

    @Test
    public void test01535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01535");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields50, "hi!");
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder4.setSSLTruststore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
    }

    @Test
    public void test01536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01536");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder20.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc66 = null;
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc66, fields67, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder65.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer73 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer74 = null;
        java.util.regex.Pattern pattern75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer73, charSequenceSerializableDeserializer74, pattern75);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator77);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc79 = null;
        org.apache.storm.tuple.Fields fields80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc79, fields80, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig83 = kafkaSpoutRetryServiceBuilder78.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator84 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        org.apache.storm.tuple.Fields fields85 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator84, fields85, "hi!");
        org.apache.storm.tuple.Fields fields88 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator84, fields88);
        org.apache.storm.tuple.Fields fields90 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator84, fields90);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder91.setMaxUncommittedOffsets(52);
        java.util.Properties properties94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder91.setProp(properties94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
    }

    @Test
    public void test01537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01537");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceBuilderSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> strListBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("hi!", strListSerializableDeserializer1, kafkaSpoutRetryServiceBuilderSerializableDeserializer2, pattern3);
    }

    @Test
    public void test01538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01538");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, charSequenceSerializableDeserializer3, strArray10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test01539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01539");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder21.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, charSequenceSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc37 = null;
        org.apache.storm.tuple.Fields fields38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc37, fields38, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig41 = kafkaSpoutRetryServiceBuilder36.build();
        long long42 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy44 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription45 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer50 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getKeyDeserializer();
        java.lang.String str51 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService52 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder29.setRetry(kafkaSpoutRetryService52);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc61 = null;
        org.apache.storm.tuple.Fields fields62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc61, fields62, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig65 = kafkaSpoutRetryServiceBuilder60.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getTranslator();
        long long67 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getPollTimeoutMs();
        long long68 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getKafkaProps();
        boolean boolean70 = kafkaSpoutRetryServiceKafkaSpoutConfig65.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription71 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy72 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder53.setFirstPollOffsetStrategy(firstPollOffsetStrategy72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 200L + "'", long42 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy44 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy44.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 200L + "'", long67 == 200L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 200L + "'", long68 == 200L);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(subscription71);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy72 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy72.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
    }

    @Test
    public void test01540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01540");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc18, fields19, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getTranslator();
        long long24 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer26 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer27 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder10.setBootstrapServers("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 200L + "'", long24 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer26);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
    }

    @Test
    public void test01541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01541");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(subscription17);
    }

    @Test
    public void test01542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01542");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getOffsetsCommitPeriodMs();
        long long29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPartitionRefreshPeriodMs();
        java.lang.String str30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getConsumerGroupId();
        int int31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getMaxTupleRetries();
        long long32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 2000L + "'", long29 == 2000L);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 200L + "'", long32 == 200L);
    }

    @Test
    public void test01543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01543");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer18);
    }

    @Test
    public void test01544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01544");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
    }

    @Test
    public void test01545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01545");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((-1L));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
    }

    @Test
    public void test01546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01546");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, charSequenceSerializableDeserializer9, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.String[]> subscriptionBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.String[]>("hi!", subscriptionSerializableDeserializer2, strArraySerializableDeserializer3, strArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test01547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01547");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 30000L + "'", long20 == 30000L);
    }

    @Test
    public void test01548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01548");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder11.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder20.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy29);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRetry(kafkaSpoutRetryService31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder11.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer41 = null;
        java.util.regex.Pattern pattern42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer40, charSequenceSerializableDeserializer41, pattern42);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder43.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc50 = null;
        org.apache.storm.tuple.Fields fields51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc50, fields51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setPollTimeoutMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder56.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer65 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer66 = null;
        java.util.regex.Pattern pattern67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer65, charSequenceSerializableDeserializer66, pattern67);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator69);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc71 = null;
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc71, fields72, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig75 = kafkaSpoutRetryServiceBuilder70.build();
        long long76 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy78 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription79 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder63.setProp(strMap80);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder11.setProp(strMap80);
        java.util.Properties properties83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder11.setProp(properties83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 200L + "'", long76 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator77);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy78 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy78.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
    }

    @Test
    public void test01549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01549");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder6.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer12 = null;
        java.util.regex.Pattern pattern13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, charSequenceSerializableDeserializer12, pattern13);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator15);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc17 = null;
        org.apache.storm.tuple.Fields fields18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc17, fields18, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        long long23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer24 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer26 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getOffsetsCommitPeriodMs();
        int int28 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder9.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setOffsetCommitPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc43 = null;
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc43, fields44, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig47 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        long long49 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService50 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer51 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer52 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getKeyDeserializer();
        long long53 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder34.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig47);
        long long56 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 200L + "'", long23 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 30000L + "'", long25 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 30000L + "'", long27 == 30000L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2147483647 + "'", int28 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 200L + "'", long49 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService50);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer51);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 30000L + "'", long53 == 30000L);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 200L + "'", long56 == 200L);
    }

    @Test
    public void test01550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01550");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        boolean boolean34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder19.setProp(strMap35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder6.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setGroupId("hi!");
        java.util.Properties properties57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setProp(properties57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
    }

    @Test
    public void test01551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01551");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc43 = null;
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc43, fields44, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig47 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        long long49 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getPollTimeoutMs();
        boolean boolean50 = kafkaSpoutRetryServiceKafkaSpoutConfig47.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder35.setProp(strMap51);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc60 = null;
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc60, fields61, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder59.build();
        java.lang.String str65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator66, fields68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig70 = kafkaSpoutRetryServiceBuilder30.build();
        long long71 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getTranslator();
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator72, fields73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setMaxUncommittedOffsets((int) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 200L + "'", long49 == 200L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
    }

    @Test
    public void test01552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01552");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder7.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder7.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder7.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setFirstPollOffsetStrategy(firstPollOffsetStrategy16);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder19.build();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.toString();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getSubscription();
        int int23 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getMaxTupleRetries();
        org.apache.storm.kafka.spout.Subscription subscription24 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> annotatedElementBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>>("", annotatedElementSerializableDeserializer1, kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer2, subscription24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2147483647 + "'", int23 == 2147483647);
        org.junit.Assert.assertNotNull(subscription24);
    }

    @Test
    public void test01553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01553");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer13 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]> strListBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer12, strArraySerializableDeserializer13, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, charSequenceSerializableDeserializer9, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.Collection<java.lang.String>> kafkaSpoutRetryServiceRecordTranslatorBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.Collection<java.lang.String>>("hi!", kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer4, strCollectionSerializableDeserializer5, strArray17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test01554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01554");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder24.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder4.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder47.setSSLKeystore("hi!", "", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 200L + "'", long44 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
    }

    @Test
    public void test01555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01555");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getOffsetsCommitPeriodMs();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig31.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder17.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setPollTimeoutMs((-1L));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder47.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc61 = null;
        org.apache.storm.tuple.Fields fields62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc61, fields62, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig65 = kafkaSpoutRetryServiceBuilder60.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getTranslator();
        long long67 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getPollTimeoutMs();
        long long68 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder47.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder40.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder71.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setMaxPollRecords((int) 'a');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 200L + "'", long34 == 200L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 30000L + "'", long35 == 30000L);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 200L + "'", long67 == 200L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 200L + "'", long68 == 200L);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
    }

    @Test
    public void test01556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01556");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer6 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]> strListBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer5, strArraySerializableDeserializer6, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder22.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setFirstPollOffsetStrategy(firstPollOffsetStrategy31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder15.setFirstPollOffsetStrategy(firstPollOffsetStrategy31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setMaxUncommittedOffsets((int) ' ');
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
    }

    @Test
    public void test01557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01557");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer7 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.reflect.GenericDeclaration> genericDeclarationBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.reflect.GenericDeclaration>("hi!", genericDeclarationSerializableDeserializer6, genericDeclarationSerializableDeserializer7, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test01558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01558");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder32.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder20.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig45 = kafkaSpoutRetryServiceBuilder44.build();
        java.lang.String str46 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription47 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getSubscription();
        java.lang.String str48 = kafkaSpoutRetryServiceKafkaSpoutConfig45.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(subscription47);
    }

    @Test
    public void test01559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01559");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setMaxRetries((int) (short) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setProp("hi!", (java.lang.Object) strBuilder23);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder29.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder40.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc60 = null;
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc60, fields61, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder59.build();
        java.lang.String str65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator66, fields67, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator66, fields71, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder24.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setGroupId("hi!");
        java.util.Properties properties79 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setProp(properties79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
    }

    @Test
    public void test01560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01560");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable> objBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.io.Serializable>("", objSerializableDeserializer1, serializableSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01561");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder7.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder11.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder11.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder11.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder23.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig30 = kafkaSpoutRetryServiceBuilder29.build();
        long long31 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getOffsetsCommitPeriodMs();
        long long32 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getPartitionRefreshPeriodMs();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getOffsetsCommitPeriodMs();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getOffsetsCommitPeriodMs();
        int int35 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getMaxUncommittedOffsets();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig30.toString();
        org.apache.storm.kafka.spout.Subscription subscription37 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.io.Serializable> serializableBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.io.Serializable>("hi!", serializableSerializableDeserializer1, serializableSerializableDeserializer2, subscription37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 200L + "'", long31 == 200L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 2000L + "'", long32 == 2000L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 200L + "'", long34 == 200L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10000000 + "'", int35 == 10000000);
        org.junit.Assert.assertNotNull(subscription37);
    }

    @Test
    public void test01562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01562");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, charSequenceSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder35.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder35.setPollTimeoutMs((long) '4');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
    }

    @Test
    public void test01563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01563");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        boolean boolean34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder19.setProp(strMap35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder6.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder19);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder58.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder64.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder67.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder67.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder52.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder52.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder52.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder83.setPollTimeoutMs((long) (short) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
    }

    @Test
    public void test01564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01564");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test01565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01565");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder4.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
    }

    @Test
    public void test01566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01566");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceRecordTranslator19);
    }

    @Test
    public void test01567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01567");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder19.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator32);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc34 = null;
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc34, fields35, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getTranslator();
        long long40 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getPollTimeoutMs();
        boolean boolean41 = kafkaSpoutRetryServiceKafkaSpoutConfig38.isConsumerAutoCommitMode();
        java.lang.String str42 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getConsumerGroupId();
        int int43 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getMaxTupleRetries();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setFirstPollOffsetStrategy(firstPollOffsetStrategy45);
        java.util.Properties properties47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setProp(properties47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 200L + "'", long40 == 200L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2147483647 + "'", int43 == 2147483647);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 2000L + "'", long44 == 2000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
    }

    @Test
    public void test01568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01568");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getValueDeserializer();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>>("", strSerializableDeserializer1, strMapSerializableDeserializer2, subscription17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNull(charSequenceDeserializer14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertNotNull(subscription17);
    }

    @Test
    public void test01569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01569");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.reflect.AnnotatedElement> typeBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.reflect.AnnotatedElement>("hi!", typeSerializableDeserializer1, annotatedElementSerializableDeserializer2, pattern3);
    }

    @Test
    public void test01570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01570");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setMaxRetries((int) (short) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setProp("hi!", (java.lang.Object) strBuilder23);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder29.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder40.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc60 = null;
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc60, fields61, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder59.build();
        java.lang.String str65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator66, fields67, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator66, fields71, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder24.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig79 = kafkaSpoutRetryServiceBuilder78.build();
        org.apache.storm.kafka.spout.Subscription subscription80 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig79);
        org.junit.Assert.assertNotNull(subscription80);
    }

    @Test
    public void test01571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01571");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords((int) (short) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
    }

    @Test
    public void test01572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01572");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc42 = null;
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc42, fields43, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig46 = kafkaSpoutRetryServiceBuilder41.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields48, "hi!");
        org.apache.storm.tuple.Fields fields51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder10.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
    }

    @Test
    public void test01573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01573");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder8.setRetry(kafkaSpoutRetryService30);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getKafkaProps();
        java.lang.String str46 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getConsumerGroupId();
        int int47 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2147483647 + "'", int47 == 2147483647);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
    }

    @Test
    public void test01574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01574");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer7 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.reflect.Type> firstPollOffsetStrategyBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.reflect.Type>("hi!", firstPollOffsetStrategySerializableDeserializer6, typeSerializableDeserializer7, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer3, charSequenceSerializableDeserializer4, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test01575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01575");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder15.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder27);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder35.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        long long42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService43 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getRetryService();
        int int44 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer61 = null;
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]> strListBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer60, strArraySerializableDeserializer61, strArray65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, strArray65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.Collection<java.lang.String>> kafkaSpoutRetryServiceRecordTranslatorBuilder72 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.Collection<java.lang.String>>("hi!", kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer52, strCollectionSerializableDeserializer53, strArray65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.CharSequence> strCollectionBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.CharSequence>("hi!", strCollectionSerializableDeserializer49, charSequenceSerializableDeserializer50, strArray65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder27.setProp("", (java.lang.Object) charSequenceSerializableDeserializer50);
        java.util.Properties properties75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setProp(properties75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 200L + "'", long42 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2147483647 + "'", int44 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
    }

    @Test
    public void test01576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01576");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Cloneable> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Cloneable>("", kafkaSpoutRetryServiceSerializableDeserializer1, cloneableSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01577");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder15.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder15.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder37.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setPartitionRefreshPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, (java.util.Collection<java.lang.String>) strList56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig60 = kafkaSpoutRetryServiceBuilder59.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder46.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setPartitionRefreshPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer65 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer66 = null;
        java.util.regex.Pattern pattern67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer65, charSequenceSerializableDeserializer66, pattern67);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator69);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc71 = null;
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc71, fields72, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig75 = kafkaSpoutRetryServiceBuilder70.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator76 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getTranslator();
        long long77 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService78 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getRetryService();
        long long79 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator80 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getTranslator();
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator80, fields81);
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator80, fields83);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder32.setMaxUncommittedOffsets((-1));
        java.lang.Class<?> wildcardClass87 = kafkaSpoutRetryServiceBuilder86.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 200L + "'", long77 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 200L + "'", long79 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test01578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01578");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.reflect.Type> strMapBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.reflect.Type>("", strMapSerializableDeserializer1, typeSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01579");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.io.Serializable> kafkaSpoutRetryServiceRecordTranslatorBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.io.Serializable>("", kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer1, serializableSerializableDeserializer2, strArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test01580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01580");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(charSequenceDeserializer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
    }

    @Test
    public void test01581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01581");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder45.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
    }

    @Test
    public void test01582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01582");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.util.Collection<java.lang.String>> subscriptionBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.util.Collection<java.lang.String>>("", subscriptionSerializableDeserializer1, strCollectionSerializableDeserializer2, strArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test01583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01583");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("");
        java.util.Properties properties20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setProp(properties20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
    }

    @Test
    public void test01584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01584");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getRetryService();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertNotNull(subscription20);
    }

    @Test
    public void test01585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01585");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, strArray10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test01586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01586");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(charSequenceDeserializer17);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 30000L + "'", long19 == 30000L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2000L + "'", long21 == 2000L);
    }

    @Test
    public void test01587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01587");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder17.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setMaxPollRecords(1);
        java.lang.Class<?> wildcardClass23 = kafkaSpoutRetryServiceBuilder22.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test01588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01588");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder6.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setPartitionRefreshPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder16.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRetry(kafkaSpoutRetryService23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
    }

    @Test
    public void test01589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01589");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test01590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01590");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc18, fields19, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields37, "hi!");
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs((long) '#');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
    }

    @Test
    public void test01591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01591");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setProp("", (java.lang.Object) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder19.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setFetchMinBytes((int) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
    }

    @Test
    public void test01592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01592");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) (byte) 10);
        java.util.Properties properties13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setProp(properties13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
    }

    @Test
    public void test01593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01593");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.tuple.Fields fields29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator28, fields29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setMaxPollRecords((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc42 = null;
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc42, fields43, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig46 = kafkaSpoutRetryServiceBuilder41.build();
        long long47 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy48 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription49 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder32.setProp(strMap50);
        java.util.Properties properties52 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder32.setProp(properties52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 200L + "'", long47 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy48 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy48.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
    }

    @Test
    public void test01594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01594");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable> randomAccessBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable>("hi!", randomAccessSerializableDeserializer4, serializableSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator17);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc19 = null;
        org.apache.storm.tuple.Fields fields20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc19, fields20, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig23 = kafkaSpoutRetryServiceBuilder18.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getTranslator();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService26 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getRetryService();
        int int27 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService28 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder11.setRetry(kafkaSpoutRetryService28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder36.setPollTimeoutMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder36.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setPollTimeoutMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setPartitionRefreshPeriodMs((-1L));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, charSequenceSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator54);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc56 = null;
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc56, fields57, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig60 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.storm.kafka.spout.Subscription subscription61 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getSubscription();
        long long62 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer63 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getValueDeserializer();
        int int64 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer65 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator66, fields68);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 200L + "'", long25 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483647 + "'", int27 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig60);
        org.junit.Assert.assertNotNull(subscription61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 2000L + "'", long62 == 2000L);
        org.junit.Assert.assertNull(charSequenceDeserializer63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2147483647 + "'", int64 == 2147483647);
        org.junit.Assert.assertNull(charSequenceDeserializer65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
    }

    @Test
    public void test01595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01595");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder7.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder11.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder11.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder11.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder23.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder35.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder35.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder23.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder47.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(subscription50);
    }

    @Test
    public void test01596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01596");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder10.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder10.setPollTimeoutMs((long) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "", "hi!");
        java.lang.Class<?> wildcardClass22 = kafkaSpoutRetryServiceBuilder17.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test01597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01597");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer17 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer16, randomAccessSerializableDeserializer17, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer13, randomAccessSerializableDeserializer14, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService> typeBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", typeSerializableDeserializer8, kafkaSpoutRetryServiceSerializableDeserializer9, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration> objBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration>("hi!", objSerializableDeserializer5, genericDeclarationSerializableDeserializer6, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> strBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>>("hi!", strSerializableDeserializer2, kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer3, strArray19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test01598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01598");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder10.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        long long29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder15.setProp("", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setPollTimeoutMs((-1L));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, charSequenceSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator54);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc56 = null;
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc56, fields57, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig60 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getTranslator();
        long long62 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getPollTimeoutMs();
        boolean boolean63 = kafkaSpoutRetryServiceKafkaSpoutConfig60.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder48.setProp(strMap64);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, charSequenceSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator71);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc73 = null;
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc73, fields74, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig77 = kafkaSpoutRetryServiceBuilder72.build();
        java.lang.String str78 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator79, fields81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig83 = kafkaSpoutRetryServiceBuilder43.build();
        long long84 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getOffsetsCommitPeriodMs();
        long long85 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription86 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription87 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getSubscription();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator88 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 200L + "'", long29 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy30 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy30.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 200L + "'", long62 == 200L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 0L + "'", long84 == 0L);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 2000L + "'", long85 == 2000L);
        org.junit.Assert.assertNotNull(subscription86);
        org.junit.Assert.assertNotNull(subscription87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
    }

    @Test
    public void test01599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01599");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder22.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc45 = null;
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc45, fields46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder58.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder58.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy67 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setFirstPollOffsetStrategy(firstPollOffsetStrategy67);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService69 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setRetry(kafkaSpoutRetryService69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder49.setRetry(kafkaSpoutRetryService69);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer73 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer74 = null;
        java.util.regex.Pattern pattern75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer73, charSequenceSerializableDeserializer74, pattern75);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator77);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc79 = null;
        org.apache.storm.tuple.Fields fields80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc79, fields80, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig83 = kafkaSpoutRetryServiceBuilder78.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator84 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        long long85 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService86 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer87 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator88 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields89);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator88);
        org.apache.storm.tuple.Fields fields92 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields92);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder98 = kafkaSpoutRetryServiceBuilder96.setMaxUncommittedOffsets((int) (short) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy67 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy67.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 200L + "'", long85 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService86);
        org.junit.Assert.assertNull(charSequenceDeserializer87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder98);
    }

    @Test
    public void test01600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01600");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setOffsetCommitPeriodMs(0L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
    }

    @Test
    public void test01601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01601");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder17.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setFetchMinBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setPollTimeoutMs((long) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc32 = null;
        org.apache.storm.tuple.Fields fields33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc32, fields33, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder31.build();
        long long37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription40 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder20.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc53 = null;
        org.apache.storm.tuple.Fields fields54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc53, fields54, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder52.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder52.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder52.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder64.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig71 = kafkaSpoutRetryServiceBuilder70.build();
        long long72 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getOffsetsCommitPeriodMs();
        long long73 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder20.setProp(strMap74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder75.setMaxPartitionFectchBytes((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setPartitionRefreshPeriodMs((long) 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 200L + "'", long37 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 200L + "'", long72 == 200L);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 2000L + "'", long73 == 2000L);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
    }

    @Test
    public void test01602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01602");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, charSequenceSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder50.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder56.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder59.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer68 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer69 = null;
        java.util.regex.Pattern pattern70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer68, charSequenceSerializableDeserializer69, pattern70);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc74 = null;
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder73.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc74, fields75, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig78 = kafkaSpoutRetryServiceBuilder73.build();
        long long79 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy80 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription81 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy82 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder59.setFirstPollOffsetStrategy(firstPollOffsetStrategy82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder45.setFirstPollOffsetStrategy(firstPollOffsetStrategy82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 200L + "'", long79 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy80 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy80.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription81);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy82 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy82.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
    }

    @Test
    public void test01603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01603");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRetry(kafkaSpoutRetryService25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, charSequenceSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc37 = null;
        org.apache.storm.tuple.Fields fields38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc37, fields38, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig41 = kafkaSpoutRetryServiceBuilder36.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getTranslator();
        long long43 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getPollTimeoutMs();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer46 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getValueDeserializer();
        int int47 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setMaxPartitionFectchBytes((int) (short) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 200L + "'", long43 == 200L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 200L + "'", long44 == 200L);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(charSequenceDeserializer46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10000000 + "'", int47 == 10000000);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
    }

    @Test
    public void test01604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01604");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer37 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getValueDeserializer();
        boolean boolean38 = kafkaSpoutRetryServiceKafkaSpoutConfig35.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder23.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, charSequenceSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator51);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc53 = null;
        org.apache.storm.tuple.Fields fields54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc53, fields54, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig57 = kafkaSpoutRetryServiceBuilder52.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getTranslator();
        long long59 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService60 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription61 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getSubscription();
        java.lang.String str62 = kafkaSpoutRetryServiceKafkaSpoutConfig57.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer63 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder42.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig57);
        java.lang.Class<?> wildcardClass65 = kafkaSpoutRetryServiceBuilder64.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(charSequenceDeserializer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 200L + "'", long59 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService60);
        org.junit.Assert.assertNotNull(subscription61);
        org.junit.Assert.assertNull(charSequenceDeserializer63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test01605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01605");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields50, "hi!");
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, charSequenceSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator63);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc65 = null;
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc65, fields66, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig69 = kafkaSpoutRetryServiceBuilder64.build();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy71 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder57.setProp(strMap72);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer75 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer76 = null;
        java.util.regex.Pattern pattern77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer75, charSequenceSerializableDeserializer76, pattern77);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc81 = null;
        org.apache.storm.tuple.Fields fields82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder80.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc81, fields82, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig85 = kafkaSpoutRetryServiceBuilder80.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator86 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getTranslator();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService88 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getRetryService();
        int int89 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService90 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder57.setRetry(kafkaSpoutRetryService90);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder57.setMaxRetries(100);
        java.lang.Class<?> wildcardClass94 = kafkaSpoutRetryServiceBuilder93.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 200L + "'", long70 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy71 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy71.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 200L + "'", long87 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2147483647 + "'", int89 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test01606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01606");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setPollTimeoutMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder14.setSSLKeystore("", "hi!");
        java.util.Properties properties18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder14.setProp(properties18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
    }

    @Test
    public void test01607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01607");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000000 + "'", int18 == 10000000);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 30000L + "'", long21 == 30000L);
    }

    @Test
    public void test01608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01608");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
    }

    @Test
    public void test01609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01609");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPollTimeoutMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getValueDeserializer();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        java.util.Properties properties37 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder19.setProp(properties37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService32);
        org.junit.Assert.assertNull(charSequenceDeserializer33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 30000L + "'", long34 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
    }

    @Test
    public void test01610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01610");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        java.lang.Class<?> wildcardClass30 = kafkaSpoutRetryServiceBuilder10.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test01611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01611");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
        org.junit.Assert.assertNull(charSequenceDeserializer17);
    }

    @Test
    public void test01612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01612");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
    }

    @Test
    public void test01613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01613");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.Class<?> wildcardClass18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertNull(charSequenceDeserializer17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test01614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01614");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer13);
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
    }

    @Test
    public void test01615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01615");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc34 = null;
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc34, fields35, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder46.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields53, "hi!");
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields56, "");
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setFetchMinBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig65 = kafkaSpoutRetryServiceBuilder60.build();
        java.lang.String str66 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig65);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test01616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01616");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.String str22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(charSequenceDeserializer17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(charSequenceDeserializer19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(charSequenceDeserializer21);
    }

    @Test
    public void test01617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01617");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig49 = kafkaSpoutRetryServiceBuilder44.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService50 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder28.setRetry(kafkaSpoutRetryService50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder18.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder18.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder18.setOffsetCommitPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder18.setMaxUncommittedOffsets(2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
    }

    @Test
    public void test01618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01618");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder15.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder30.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc41 = null;
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc41, fields42, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig45 = kafkaSpoutRetryServiceBuilder40.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getTranslator();
        int int48 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getMaxUncommittedOffsets();
        long long49 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getOffsetsCommitPeriodMs();
        long long50 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getOffsetsCommitPeriodMs();
        java.lang.String str51 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer52 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder33.setFirstPollOffsetStrategy(firstPollOffsetStrategy53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder33.setOffsetCommitPeriodMs((long) (byte) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10000000 + "'", int48 == 10000000);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 30000L + "'", long49 == 30000L);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 30000L + "'", long50 == 30000L);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
    }

    @Test
    public void test01619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01619");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setMaxPollRecords((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setOffsetCommitPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder32.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder48.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder57.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer63 = null;
        java.util.regex.Pattern pattern64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer62, charSequenceSerializableDeserializer63, pattern64);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc68 = null;
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc68, fields69, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder67.build();
        java.lang.String str73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields75, "hi!");
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields78, "hi!");
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields81);
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields83, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig86 = kafkaSpoutRetryServiceBuilder85.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder85.setPartitionRefreshPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder85.setMaxRetries((int) (short) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
    }

    @Test
    public void test01620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01620");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator32);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc34 = null;
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc34, fields35, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getTranslator();
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator39, fields40);
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator39, fields42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder43.build();
        long long45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getPollTimeoutMs();
        long long46 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getPollTimeoutMs();
        long long47 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getPartitionRefreshPeriodMs();
        int int48 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 200L + "'", long45 == 200L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 200L + "'", long46 == 200L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 2000L + "'", long47 == 2000L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10000000 + "'", int48 == 10000000);
    }

    @Test
    public void test01621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01621");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.String> typeBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.String>("hi!", typeSerializableDeserializer1, strSerializableDeserializer2, pattern3);
    }

    @Test
    public void test01622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01622");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder22.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder42.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder42.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder33.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator72, fields73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder75.setPollTimeoutMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder77.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder81.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService70);
        org.junit.Assert.assertNull(charSequenceDeserializer71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
    }

    @Test
    public void test01623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01623");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig24 = kafkaSpoutRetryServiceBuilder19.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getTranslator();
        org.apache.storm.tuple.Fields fields27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator26, fields27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setMaxPartitionFectchBytes((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc51 = null;
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc51, fields52, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig55 = kafkaSpoutRetryServiceBuilder50.build();
        java.lang.String str56 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getTranslator();
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator57, fields58, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder39.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer64 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer65 = null;
        java.util.regex.Pattern pattern66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer64, charSequenceSerializableDeserializer65, pattern66);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator68);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc70 = null;
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc70, fields71, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig74 = kafkaSpoutRetryServiceBuilder69.build();
        long long75 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy76 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription77 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getSubscription();
        long long78 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription79 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getSubscription();
        long long80 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator82 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getTranslator();
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator82, fields83);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder85.setBootstrapServers("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 200L + "'", long75 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy76 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy76.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 2000L + "'", long78 == 2000L);
        org.junit.Assert.assertNotNull(subscription79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 2000L + "'", long80 == 2000L);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
    }

    @Test
    public void test01624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01624");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig24 = kafkaSpoutRetryServiceBuilder19.build();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription28 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder12.setProp(strMap29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder34.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder40.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder51.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder63);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer66 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer67 = null;
        java.util.regex.Pattern pattern68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer66, charSequenceSerializableDeserializer67, pattern68);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator70);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc72 = null;
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc72, fields73, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig76 = kafkaSpoutRetryServiceBuilder71.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getTranslator();
        long long78 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService79 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getRetryService();
        int int80 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator81 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator81);
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator81, fields83, "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 200L + "'", long25 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 200L + "'", long78 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2147483647 + "'", int80 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
    }

    @Test
    public void test01625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01625");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2000L + "'", long13 == 2000L);
    }

    @Test
    public void test01626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01626");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder9.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc32 = null;
        org.apache.storm.tuple.Fields fields33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc32, fields33, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder31.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getPollTimeoutMs();
        boolean boolean39 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        java.lang.String str40 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder4.setRetry(kafkaSpoutRetryService41);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc51 = null;
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc51, fields52, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig55 = kafkaSpoutRetryServiceBuilder50.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getTranslator();
        long long57 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService58 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer59 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer60 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder4.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        long long67 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 200L + "'", long38 == 200L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 200L + "'", long57 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService58);
        org.junit.Assert.assertNull(charSequenceDeserializer59);
        org.junit.Assert.assertNull(charSequenceDeserializer60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 30000L + "'", long67 == 30000L);
    }

    @Test
    public void test01627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01627");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setFirstPollOffsetStrategy(firstPollOffsetStrategy52);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder58.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder58.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder66.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer71 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer72 = null;
        java.util.regex.Pattern pattern73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer71, charSequenceSerializableDeserializer72, pattern73);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator75);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc77 = null;
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc77, fields78, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig81 = kafkaSpoutRetryServiceBuilder76.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator82 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getTranslator();
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator82, fields83);
        org.apache.storm.tuple.Fields fields85 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator82, fields85);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder51.setFetchMinBytes((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder41.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder88);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder89.setSSLKeystore("hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
    }

    @Test
    public void test01628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01628");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
    }

    @Test
    public void test01629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01629");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder55.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder55.setMaxRetries((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, charSequenceSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService73 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder72.setRetry(kafkaSpoutRetryService73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setFetchMinBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setMaxRetries(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder76.setMaxPartitionFectchBytes((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder60.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder76);
        java.util.Properties properties82 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder76.setProp(properties82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
    }

    @Test
    public void test01630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01630");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        long long30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder15.setProp(strMap32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setGroupId("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 200L + "'", long30 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
    }

    @Test
    public void test01631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01631");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        int int22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10000000 + "'", int22 == 10000000);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 30000L + "'", long23 == 30000L);
    }

    @Test
    public void test01632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01632");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer14 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]> strListBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer13, strArraySerializableDeserializer14, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer9, charSequenceSerializableDeserializer10, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, charSequenceSerializableDeserializer3, strArray18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test01633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01633");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder10.setGroupId("hi!");
        java.util.Properties properties15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder10.setProp(properties15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
    }

    @Test
    public void test01634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01634");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
    }

    @Test
    public void test01635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01635");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder20.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, (java.util.Collection<java.lang.String>) strList54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder57.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder57.setRetry(kafkaSpoutRetryService62);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer65 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer66 = null;
        java.util.regex.Pattern pattern67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer65, charSequenceSerializableDeserializer66, pattern67);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator69);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc71 = null;
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc71, fields72, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig75 = kafkaSpoutRetryServiceBuilder70.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator76 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getTranslator();
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator77, fields78, "hi!");
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator77, fields81, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder83.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder83.setMaxUncommittedOffsets(10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
    }

    @Test
    public void test01636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01636");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10000000 + "'", int21 == 10000000);
    }

    @Test
    public void test01637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01637");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.tuple.Fields fields29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator28, fields29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setMaxPollRecords((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setMaxRetries(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder32.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer41 = null;
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer40, charSequenceSerializableDeserializer41, (java.util.Collection<java.lang.String>) strList45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder48.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc62 = null;
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc62, fields63, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder61.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields69, "hi!");
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields72, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder32.setFetchMinBytes((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder76.setSSLTruststore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
    }

    @Test
    public void test01638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01638");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, charSequenceSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc30 = null;
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder29.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder29.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer43 = null;
        java.util.regex.Pattern pattern44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer42, charSequenceSerializableDeserializer43, pattern44);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator46);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc48 = null;
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc48, fields49, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig52 = kafkaSpoutRetryServiceBuilder47.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getTranslator();
        long long54 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getPollTimeoutMs();
        long long55 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getPollTimeoutMs();
        long long56 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getOffsetsCommitPeriodMs();
        java.lang.String str57 = kafkaSpoutRetryServiceKafkaSpoutConfig52.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder38.setProp(strMap58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setPollTimeoutMs((-1L));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer65 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer66 = null;
        java.util.regex.Pattern pattern67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer65, charSequenceSerializableDeserializer66, pattern67);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder68.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder68.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer76 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer77 = null;
        java.util.regex.Pattern pattern78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer76, charSequenceSerializableDeserializer77, pattern78);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder79.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator80);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc82 = null;
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder81.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc82, fields83, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig86 = kafkaSpoutRetryServiceBuilder81.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator87 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getTranslator();
        long long88 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getPollTimeoutMs();
        long long89 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder68.setProp(strMap90);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder61.setProp(strMap90);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder92.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder17.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder92);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder97 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder99 = kafkaSpoutRetryServiceBuilder97.setMaxPartitionFectchBytes(0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 200L + "'", long54 == 200L);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 200L + "'", long55 == 200L);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 30000L + "'", long56 == 30000L);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 200L + "'", long88 == 200L);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 200L + "'", long89 == 200L);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder99);
    }

    @Test
    public void test01639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01639");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder21.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, charSequenceSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer47 = null;
        java.util.regex.Pattern pattern48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer46, charSequenceSerializableDeserializer47, pattern48);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc52 = null;
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc52, fields53, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder51.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator57, fields58, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder65.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder68.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder68.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder75.setMaxPartitionFectchBytes((int) '4');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
    }

    @Test
    public void test01640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01640");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, charSequenceSerializableDeserializer3, strArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test01641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01641");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setSecurityProtocol("hi!");
        java.util.Properties properties21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder16.setProp(properties21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
    }

    @Test
    public void test01642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01642");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc13 = null;
        org.apache.storm.tuple.Fields fields14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc13, fields14, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getTranslator();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription23 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, subscription23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig30 = kafkaSpoutRetryServiceBuilder29.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(charSequenceDeserializer22);
        org.junit.Assert.assertNotNull(subscription23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig30);
    }

    @Test
    public void test01643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01643");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer18 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable> randomAccessBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable>("hi!", randomAccessSerializableDeserializer17, serializableSerializableDeserializer18, (java.util.Collection<java.lang.String>) strList21);
        java.lang.Class<?> wildcardClass24 = strList21.getClass();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder6.setProp("", (java.lang.Object) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setMaxPartitionFectchBytes(0);
        java.util.Properties properties28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setProp(properties28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
    }

    @Test
    public void test01644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01644");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc18, fields19, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields37, "hi!");
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder45.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, charSequenceSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder57.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder57.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder57.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder67.setProp("", (java.lang.Object) 10.0d);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig71 = kafkaSpoutRetryServiceBuilder70.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer72 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy73 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder50.setFirstPollOffsetStrategy(firstPollOffsetStrategy73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig71);
        org.junit.Assert.assertNull(charSequenceDeserializer72);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy73 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy73.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
    }

    @Test
    public void test01645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01645");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder14.build();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKafkaProps();
        boolean boolean21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.isConsumerAutoCommitMode();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceRecordTranslator23);
    }

    @Test
    public void test01646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01646");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setMaxPollRecords((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, charSequenceSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder25.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer41 = null;
        java.util.regex.Pattern pattern42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer40, charSequenceSerializableDeserializer41, pattern42);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc46 = null;
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc46, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig50 = kafkaSpoutRetryServiceBuilder45.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getTranslator();
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator51, fields52, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc64 = null;
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc64, fields65, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig68 = kafkaSpoutRetryServiceBuilder63.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getTranslator();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService71 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getRetryService();
        int int72 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getMaxUncommittedOffsets();
        long long73 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService74 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder54.setRetry(kafkaSpoutRetryService74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder18.setRetry(kafkaSpoutRetryService74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 200L + "'", long70 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10000000 + "'", int72 == 10000000);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 30000L + "'", long73 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
    }

    @Test
    public void test01647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01647");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer11 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]> strListBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer10, strArraySerializableDeserializer11, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer3, charSequenceSerializableDeserializer4, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test01648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01648");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test01649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01649");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder14.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, charSequenceSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder25.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder39.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder39.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy48 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setFirstPollOffsetStrategy(firstPollOffsetStrategy48);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setRetry(kafkaSpoutRetryService50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder34.setRetry(kafkaSpoutRetryService50);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc60 = null;
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc60, fields61, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder59.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder70.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder70.setMaxRetries((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder19.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder76);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder76.setMaxRetries((int) (byte) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy48 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy48.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
    }

    @Test
    public void test01650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01650");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
    }

    @Test
    public void test01651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01651");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test01652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01652");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        java.lang.String str29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder38.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder46.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder56.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getTranslator();
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator62, fields63);
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator62, fields65);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer68 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer69 = null;
        java.util.regex.Pattern pattern70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer68, charSequenceSerializableDeserializer69, pattern70);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc74 = null;
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder73.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc74, fields75, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig78 = kafkaSpoutRetryServiceBuilder73.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getTranslator();
        long long80 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService81 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder84.setMaxUncommittedOffsets((int) 'a');
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator87 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder84.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 200L + "'", long80 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
    }

    @Test
    public void test01653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01653");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        long long31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService32 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer33 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, strArray42);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder50.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder60.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder66.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder69.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer75 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer76 = null;
        java.util.regex.Pattern pattern77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer75, charSequenceSerializableDeserializer76, pattern77);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc81 = null;
        org.apache.storm.tuple.Fields fields82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder80.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc81, fields82, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig85 = kafkaSpoutRetryServiceBuilder80.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator86 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getTranslator();
        org.apache.storm.tuple.Fields fields87 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator86, fields87, "");
        org.apache.storm.tuple.Fields fields90 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator86, fields90, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator86);
        org.apache.storm.tuple.Fields fields94 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator86, fields94);
        java.util.Properties properties96 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder97 = kafkaSpoutRetryServiceBuilder95.setProp(properties96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 200L + "'", long31 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService32);
        org.junit.Assert.assertNull(charSequenceDeserializer33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
    }

    @Test
    public void test01654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01654");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPollTimeoutMs(0L);
        java.util.Properties properties11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setProp(properties11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
    }

    @Test
    public void test01655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01655");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        java.util.Properties properties18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder16.setProp(properties18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
    }

    @Test
    public void test01656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01656");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.lang.Class<?> wildcardClass23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000000 + "'", int18 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 200L + "'", long22 == 200L);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test01657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01657");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setFetchMinBytes((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder48.build();
        java.lang.String str54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getTranslator();
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields56, "");
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder23.setSSLTruststore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
    }

    @Test
    public void test01658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01658");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setMaxUncommittedOffsets((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder14.setPollTimeoutMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder14.setPollTimeoutMs((long) (short) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
    }

    @Test
    public void test01659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01659");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig10 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getRetryService();
        int int13 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getMaxUncommittedOffsets();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getMaxTupleRetries();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig10.toString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig10);
        org.junit.Assert.assertNull(charSequenceDeserializer11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10000000 + "'", int13 == 10000000);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
    }

    @Test
    public void test01660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01660");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2000L + "'", long21 == 2000L);
    }

    @Test
    public void test01661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01661");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.reflect.GenericDeclaration> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.reflect.GenericDeclaration>("hi!", strSerializableDeserializer1, genericDeclarationSerializableDeserializer2, pattern3);
    }

    @Test
    public void test01662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01662");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], org.apache.storm.kafka.spout.Subscription> strArrayBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], org.apache.storm.kafka.spout.Subscription>("", strArraySerializableDeserializer1, subscriptionSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01663");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer7 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer6, randomAccessSerializableDeserializer7, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, charSequenceSerializableDeserializer3, strArray9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test01664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01664");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder35.build();
        long long41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription43 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getSubscription();
        int int44 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) firstPollOffsetStrategy46);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, charSequenceSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator54);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc56 = null;
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc56, fields57, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig60 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getTranslator();
        long long62 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getPollTimeoutMs();
        long long63 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getPollTimeoutMs();
        int int64 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getKafkaProps();
        int int66 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getTranslator();
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields68, "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 200L + "'", long41 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2147483647 + "'", int44 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 200L + "'", long62 == 200L);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 200L + "'", long63 == 200L);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2147483647 + "'", int64 == 2147483647);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10000000 + "'", int66 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
    }

    @Test
    public void test01665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01665");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
    }

    @Test
    public void test01666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01666");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, charSequenceSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxRetries(100);
        java.lang.Class<?> wildcardClass38 = kafkaSpoutRetryServiceBuilder37.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test01667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01667");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder24.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder8.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setBootstrapServers("hi!");
        java.lang.Class<?> wildcardClass41 = kafkaSpoutRetryServiceBuilder40.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test01668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01668");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder23.setMaxPartitionFectchBytes(52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
    }

    @Test
    public void test01669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01669");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.Class<?> wildcardClass16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 30000L + "'", long13 == 30000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test01670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01670");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder11.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setPollTimeoutMs(1L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
    }

    @Test
    public void test01671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01671");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable> randomAccessBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable>("hi!", randomAccessSerializableDeserializer7, serializableSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
    }

    @Test
    public void test01672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01672");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setMaxPollRecords((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc26 = null;
        org.apache.storm.tuple.Fields fields27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc26, fields27, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig30 = kafkaSpoutRetryServiceBuilder25.build();
        long long31 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription34 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getSubscription();
        int int35 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getFirstPollOffsetStrategy();
        java.lang.Class<?> wildcardClass37 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getClass();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder12.setProp("", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 200L + "'", long31 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10000000 + "'", int35 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
    }

    @Test
    public void test01673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01673");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 200L + "'", long21 == 200L);
    }

    @Test
    public void test01674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01674");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) (byte) 10);
        java.util.Properties properties15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setProp(properties15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
    }

    @Test
    public void test01675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01675");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, charSequenceSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder25.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder25.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setFirstPollOffsetStrategy(firstPollOffsetStrategy34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder35.build();
        java.lang.String str39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) strMap41);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc53 = null;
        org.apache.storm.tuple.Fields fields54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc53, fields54, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder52.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder52.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, charSequenceSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator71);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc73 = null;
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc73, fields74, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig77 = kafkaSpoutRetryServiceBuilder72.build();
        java.lang.String str78 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getConsumerGroupId();
        long long79 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getPollTimeoutMs();
        boolean boolean80 = kafkaSpoutRetryServiceKafkaSpoutConfig77.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService81 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder61.setRetry(kafkaSpoutRetryService81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder61.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder84.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig88 = kafkaSpoutRetryServiceBuilder84.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder84.setMaxPollRecords(10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy34 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy34.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 200L + "'", long79 == 200L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
    }

    @Test
    public void test01676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01676");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKafkaProps();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.toString();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.toString();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.Cloneable> typeBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.Cloneable>("", typeSerializableDeserializer1, cloneableSerializableDeserializer2, subscription20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(subscription20);
    }

    @Test
    public void test01677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01677");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc13 = null;
        org.apache.storm.tuple.Fields fields14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc13, fields14, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder12.build();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, subscription22);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer19);
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription22);
    }

    @Test
    public void test01678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01678");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy15);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        long long30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getRetryService();
        int int32 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder14.setProp(strMap34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder42.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder53.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder37.setProp(strMap57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 200L + "'", long30 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483647 + "'", int32 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
    }

    @Test
    public void test01679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01679");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        boolean boolean34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder19.setProp(strMap35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder6.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setMaxRetries((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setPollTimeoutMs((long) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setBootstrapServers("");
        java.lang.Class<?> wildcardClass63 = kafkaSpoutRetryServiceBuilder62.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test01680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01680");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPollTimeoutMs((long) '4');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
    }

    @Test
    public void test01681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01681");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder6.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
    }

    @Test
    public void test01682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01682");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, strArray13);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder31.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder37.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer47 = null;
        java.util.regex.Pattern pattern48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer46, charSequenceSerializableDeserializer47, pattern48);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc52 = null;
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc52, fields53, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder51.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator57, fields58, "");
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator57, fields61, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder14.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer66 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer67 = null;
        java.util.regex.Pattern pattern68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer66, charSequenceSerializableDeserializer67, pattern68);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator70);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc72 = null;
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc72, fields73, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig76 = kafkaSpoutRetryServiceBuilder71.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator78 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getTranslator();
        long long79 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getPollTimeoutMs();
        java.lang.String str80 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator81 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder14.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator81);
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator81, fields83);
        java.util.Properties properties85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder84.setProp(properties85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 200L + "'", long79 == 200L);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
    }

    @Test
    public void test01683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01683");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        java.lang.String str23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 30000L + "'", long20 == 30000L);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test01684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01684");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc13 = null;
        org.apache.storm.tuple.Fields fields14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc13, fields14, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder12.build();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription24 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, subscription24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder26.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder36.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer54 = null;
        java.util.regex.Pattern pattern55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer53, charSequenceSerializableDeserializer54, pattern55);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc61 = null;
        org.apache.storm.tuple.Fields fields62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc61, fields62, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder60.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer68 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer69 = null;
        java.util.regex.Pattern pattern70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer68, charSequenceSerializableDeserializer69, pattern70);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc74 = null;
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder73.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc74, fields75, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig78 = kafkaSpoutRetryServiceBuilder73.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getTranslator();
        org.apache.storm.tuple.Fields fields80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator79, fields80, "hi!");
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator79, fields83);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.tuple.Fields fields86 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator79, fields86, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder88.setMaxUncommittedOffsets(2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy23 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy23.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
    }

    @Test
    public void test01685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01685");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder14.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setOffsetCommitPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "hi!");
        java.lang.Class<?> wildcardClass28 = kafkaSpoutRetryServiceBuilder23.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test01686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01686");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder10.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder10.setMaxPartitionFectchBytes((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer19);
    }

    @Test
    public void test01687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01687");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000000 + "'", int15 == 10000000);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
    }

    @Test
    public void test01688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01688");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer9, charSequenceSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.String> strListBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.String>("hi!", strListSerializableDeserializer3, strSerializableDeserializer4, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test01689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01689");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRetry(kafkaSpoutRetryService11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFetchMinBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc22 = null;
        org.apache.storm.tuple.Fields fields23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc22, fields23, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig26 = kafkaSpoutRetryServiceBuilder21.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getTranslator();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getRetryService();
        int int30 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder14.setRetry(kafkaSpoutRetryService31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder32.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc43 = null;
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc43, fields44, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig47 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        long long49 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getPollTimeoutMs();
        long long50 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getPollTimeoutMs();
        long long51 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getOffsetsCommitPeriodMs();
        java.lang.String str52 = kafkaSpoutRetryServiceKafkaSpoutConfig47.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getKafkaProps();
        int int54 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getMaxUncommittedOffsets();
        java.lang.String str55 = kafkaSpoutRetryServiceKafkaSpoutConfig47.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer56 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getValueDeserializer();
        int int57 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder61.setSSLTruststore("", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2147483647 + "'", int30 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 200L + "'", long49 == 200L);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 200L + "'", long50 == 200L);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 30000L + "'", long51 == 30000L);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10000000 + "'", int54 == 10000000);
        org.junit.Assert.assertNull(charSequenceDeserializer56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10000000 + "'", int57 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
    }

    @Test
    public void test01690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01690");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig10 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getValueDeserializer();
        boolean boolean12 = kafkaSpoutRetryServiceKafkaSpoutConfig10.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription13 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getSubscription();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig10);
        org.junit.Assert.assertNull(charSequenceDeserializer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(subscription13);
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
    }

    @Test
    public void test01691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01691");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer18);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2000L + "'", long20 == 2000L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2000L + "'", long21 == 2000L);
    }

    @Test
    public void test01692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01692");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig49 = kafkaSpoutRetryServiceBuilder44.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService50 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder28.setRetry(kafkaSpoutRetryService50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder18.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder18.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder54.setSSLTruststore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
    }

    @Test
    public void test01693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01693");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder22.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder22.setFirstPollOffsetStrategy(firstPollOffsetStrategy30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder35.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder35.setPollTimeoutMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder35.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer49 = null;
        java.util.regex.Pattern pattern50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, charSequenceSerializableDeserializer49, pattern50);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator52);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc54 = null;
        org.apache.storm.tuple.Fields fields55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc54, fields55, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig58 = kafkaSpoutRetryServiceBuilder53.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getTranslator();
        int int61 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getMaxUncommittedOffsets();
        long long62 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getOffsetsCommitPeriodMs();
        java.lang.String str63 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService64 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder46.setRetry(kafkaSpoutRetryService64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setMaxRetries((int) '#');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10000000 + "'", int61 == 10000000);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 30000L + "'", long62 == 30000L);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
    }

    @Test
    public void test01694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01694");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc18, fields19, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getTranslator();
        long long24 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getPollTimeoutMs();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setProp(strMap26);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder33.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder33.setFirstPollOffsetStrategy(firstPollOffsetStrategy41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setPartitionRefreshPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder27.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setMaxPartitionFectchBytes((int) (short) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 200L + "'", long24 == 200L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 200L + "'", long25 == 200L);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
    }

    @Test
    public void test01695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01695");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder21.setMaxPollRecords((-1));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
    }

    @Test
    public void test01696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01696");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setMaxUncommittedOffsets((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, (java.util.Collection<java.lang.String>) strList34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc53 = null;
        org.apache.storm.tuple.Fields fields54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc53, fields54, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder52.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder52.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, charSequenceSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator71);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc73 = null;
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc73, fields74, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig77 = kafkaSpoutRetryServiceBuilder72.build();
        long long78 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy80 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription81 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy83 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator84 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator85 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator85);
        org.apache.storm.tuple.Fields fields87 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator85, fields87);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator85);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder89.setSSLKeystore("", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 200L + "'", long78 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator79);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy80 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy80.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy83 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy83.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
    }

    @Test
    public void test01697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01697");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder16.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc43 = null;
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc43, fields44, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig47 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        long long49 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getPollTimeoutMs();
        boolean boolean50 = kafkaSpoutRetryServiceKafkaSpoutConfig47.isConsumerAutoCommitMode();
        java.lang.String str51 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder35.setProp(strMap53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder6.setProp(strMap53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setOffsetCommitPeriodMs((long) (byte) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 200L + "'", long49 == 200L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
    }

    @Test
    public void test01698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01698");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2000L + "'", long20 == 2000L);
    }

    @Test
    public void test01699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01699");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, charSequenceSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.util.ArrayList<java.lang.String>> genericDeclarationBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.util.ArrayList<java.lang.String>>("", genericDeclarationSerializableDeserializer1, strListSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test01700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01700");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> objBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", objSerializableDeserializer7, firstPollOffsetStrategyEnumSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>, java.lang.reflect.Type> kafkaSpoutRetryServiceConsumerRecordFuncBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>, java.lang.reflect.Type>("hi!", kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer4, typeSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.String> kafkaSpoutRetryServiceKafkaSpoutConfigBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.String>("", kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test01701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01701");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
    }

    @Test
    public void test01702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01702");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
    }

    @Test
    public void test01703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01703");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder41.setBootstrapServers("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
    }

    @Test
    public void test01704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01704");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc30 = null;
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder29.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        long long36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer37 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer39 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        int int40 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator41, fields42, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder13.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder13.setPollTimeoutMs(30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 200L + "'", long36 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 30000L + "'", long38 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2147483647 + "'", int40 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
    }

    @Test
    public void test01705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01705");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "", "", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test01706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01706");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc51 = null;
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc51, fields52, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig55 = kafkaSpoutRetryServiceBuilder50.build();
        long long56 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService59 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder41.setRetry(kafkaSpoutRetryService59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder27.setRetry(kafkaSpoutRetryService59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer66 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer67 = null;
        java.util.regex.Pattern pattern68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer66, charSequenceSerializableDeserializer67, pattern68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder69.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder63.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder63.setGroupId("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 200L + "'", long56 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator57);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
    }

    @Test
    public void test01707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01707");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder34.build();
        java.lang.String str40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator41, fields42, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder18.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer54 = null;
        java.util.regex.Pattern pattern55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer53, charSequenceSerializableDeserializer54, pattern55);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder56.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder56.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setFirstPollOffsetStrategy(firstPollOffsetStrategy65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer70 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer71 = null;
        java.util.regex.Pattern pattern72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer70, charSequenceSerializableDeserializer71, pattern72);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator74);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc76 = null;
        org.apache.storm.tuple.Fields fields77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder75.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc76, fields77, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig80 = kafkaSpoutRetryServiceBuilder75.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator81 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator82 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getTranslator();
        int int83 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getMaxUncommittedOffsets();
        long long84 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getOffsetsCommitPeriodMs();
        java.lang.String str85 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer86 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder64.setProp(strMap87);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder51.setProp(strMap87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy65 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy65.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10000000 + "'", int83 == 10000000);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 30000L + "'", long84 == 30000L);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(charSequenceDeserializer86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
    }

    @Test
    public void test01708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01708");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer18 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable> randomAccessBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable>("hi!", randomAccessSerializableDeserializer17, serializableSerializableDeserializer18, (java.util.Collection<java.lang.String>) strList21);
        java.lang.Class<?> wildcardClass24 = strList21.getClass();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder6.setProp("", (java.lang.Object) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder39.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder42.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder27.setProp("hi!", (java.lang.Object) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder27.setSSLKeystore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
    }

    @Test
    public void test01709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01709");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        boolean boolean17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(subscription19);
    }

    @Test
    public void test01710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01710");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder21.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator32);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc34 = null;
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc34, fields35, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getTranslator();
        long long40 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer42 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields45, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("");
        java.util.Properties properties52 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder4.setProp(properties52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 200L + "'", long40 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService41);
        org.junit.Assert.assertNull(charSequenceDeserializer42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
    }

    @Test
    public void test01711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01711");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig24 = kafkaSpoutRetryServiceBuilder19.build();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription28 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder12.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder39.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder39.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setOffsetCommitPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer65 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer66 = null;
        java.util.regex.Pattern pattern67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer65, charSequenceSerializableDeserializer66, pattern67);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator69);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc71 = null;
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc71, fields72, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig75 = kafkaSpoutRetryServiceBuilder70.build();
        java.lang.String str76 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getTranslator();
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator77, fields78, "hi!");
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator77, fields81);
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator77, fields83);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder84.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder86.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder86.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder94.setRetry(kafkaSpoutRetryService95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 200L + "'", long25 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
    }

    @Test
    public void test01712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01712");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test01713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01713");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc18, fields19, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder17.build();
        long long23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy25 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription26 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getSubscription();
        java.lang.String str27 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getTranslator();
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 200L + "'", long23 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator24);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy25 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy25.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
    }

    @Test
    public void test01714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01714");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setMaxRetries(10);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
    }

    @Test
    public void test01715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01715");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc13 = null;
        org.apache.storm.tuple.Fields fields14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc13, fields14, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getRetryService();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.toString();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getConsumerGroupId();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPartitionRefreshPeriodMs();
        java.lang.String str22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer23 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription24 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, subscription24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setSSLKeystore("hi!", "", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2000L + "'", long21 == 2000L);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer23);
        org.junit.Assert.assertNotNull(subscription24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
    }

    @Test
    public void test01716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01716");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable> randomAccessBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable>("hi!", randomAccessSerializableDeserializer5, serializableSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test01717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01717");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000000 + "'", int18 == 10000000);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
    }

    @Test
    public void test01718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01718");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.isConsumerAutoCommitMode();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.isConsumerAutoCommitMode();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKeyDeserializer();
        java.lang.Class<?> wildcardClass22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test01719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01719");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator17);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc19 = null;
        org.apache.storm.tuple.Fields fields20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc19, fields20, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig23 = kafkaSpoutRetryServiceBuilder18.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder18.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder10.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder32.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder32.setMaxRetries((int) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
    }

    @Test
    public void test01720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01720");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setMaxUncommittedOffsets((-1));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
    }

    @Test
    public void test01721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01721");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer19);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer20);
    }

    @Test
    public void test01722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01722");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc34 = null;
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc34, fields35, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder46.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields53, "hi!");
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields56, "");
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setFetchMinBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer66 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer67 = null;
        java.util.regex.Pattern pattern68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer66, charSequenceSerializableDeserializer67, pattern68);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator70);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc72 = null;
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc72, fields73, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig76 = kafkaSpoutRetryServiceBuilder71.build();
        org.apache.storm.kafka.spout.Subscription subscription77 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getSubscription();
        java.lang.String str78 = kafkaSpoutRetryServiceKafkaSpoutConfig76.toString();
        long long79 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription80 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = kafkaSpoutRetryServiceKafkaSpoutConfig76.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder64.setProp(strMap81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig76);
        org.junit.Assert.assertNotNull(subscription77);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 200L + "'", long79 == 200L);
        org.junit.Assert.assertNotNull(subscription80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
    }

    @Test
    public void test01723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01723");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
    }

    @Test
    public void test01724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01724");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer61 = null;
        java.util.regex.Pattern pattern62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer60, charSequenceSerializableDeserializer61, pattern62);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder63.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder63.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy72 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setFirstPollOffsetStrategy(firstPollOffsetStrategy72);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService74 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder71.setRetry(kafkaSpoutRetryService74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder57.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder71.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder71.setOffsetCommitPeriodMs((long) ' ');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy72 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy72.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
    }

    @Test
    public void test01725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01725");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder10.setMaxRetries((-1));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
    }

    @Test
    public void test01726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01726");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder28.build();
        java.lang.String str34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setPartitionRefreshPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder47.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder53.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder56.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer68 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer69 = null;
        java.util.regex.Pattern pattern70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer68, charSequenceSerializableDeserializer69, pattern70);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc74 = null;
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder73.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc74, fields75, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig78 = kafkaSpoutRetryServiceBuilder73.build();
        java.lang.String str79 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer80 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getValueDeserializer();
        boolean boolean81 = kafkaSpoutRetryServiceKafkaSpoutConfig78.isConsumerAutoCommitMode();
        java.lang.String str82 = kafkaSpoutRetryServiceKafkaSpoutConfig78.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder66.setProp(strMap83);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder42.setProp(strMap83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(charSequenceDeserializer80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
    }

    @Test
    public void test01727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01727");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder52.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer61 = null;
        java.util.regex.Pattern pattern62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer60, charSequenceSerializableDeserializer61, pattern62);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc66 = null;
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc66, fields67, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig70 = kafkaSpoutRetryServiceBuilder65.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getTranslator();
        long long72 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getPollTimeoutMs();
        long long73 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder52.setProp(strMap74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder47.setProp(strMap74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder47.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder47.setMaxUncommittedOffsets(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder47.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder47.setGroupId("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 200L + "'", long72 == 200L);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 200L + "'", long73 == 200L);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
    }

    @Test
    public void test01728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01728");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setMaxRetries((int) (short) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
    }

    @Test
    public void test01729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01729");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder32.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder20.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder43.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder43.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder48.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer54 = null;
        java.util.regex.Pattern pattern55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer53, charSequenceSerializableDeserializer54, pattern55);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc59 = null;
        org.apache.storm.tuple.Fields fields60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc59, fields60, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig63 = kafkaSpoutRetryServiceBuilder58.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getTranslator();
        long long65 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getPollTimeoutMs();
        boolean boolean66 = kafkaSpoutRetryServiceKafkaSpoutConfig63.isConsumerAutoCommitMode();
        java.lang.String str67 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy68 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService69 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder48.setRetry(kafkaSpoutRetryService69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 200L + "'", long65 == 200L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy68 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy68.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
    }

    @Test
    public void test01730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01730");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder10.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setOffsetCommitPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder30.setSSLKeystore("", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
    }

    @Test
    public void test01731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01731");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder28.build();
        java.lang.String str34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setPartitionRefreshPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.lang.String[] strArray59 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, (java.util.Collection<java.lang.String>) strList60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.List<java.lang.String>> annotatedElementBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.List<java.lang.String>>("hi!", annotatedElementSerializableDeserializer50, strListSerializableDeserializer51, (java.util.Collection<java.lang.String>) strList60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, charSequenceSerializableDeserializer48, (java.util.Collection<java.lang.String>) strList60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder44.setProp("", (java.lang.Object) "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder44.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder44.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
    }

    @Test
    public void test01732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01732");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig10 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer11 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getRetryService();
        int int13 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getMaxUncommittedOffsets();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getValueDeserializer();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getOffsetsCommitPeriodMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig10.isConsumerAutoCommitMode();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig10);
        org.junit.Assert.assertNull(charSequenceDeserializer11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10000000 + "'", int13 == 10000000);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(charSequenceDeserializer17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2000L + "'", long20 == 2000L);
    }

    @Test
    public void test01733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01733");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
    }

    @Test
    public void test01734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01734");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        long long30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator31, fields32);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder46.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        long long53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getPollTimeoutMs();
        boolean boolean54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder39.setProp(strMap55);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc64 = null;
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc64, fields65, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig68 = kafkaSpoutRetryServiceBuilder63.build();
        java.lang.String str69 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator70 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder13.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder71.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer78 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer79 = null;
        java.util.regex.Pattern pattern80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer78, charSequenceSerializableDeserializer79, pattern80);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder81.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator82);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc84 = null;
        org.apache.storm.tuple.Fields fields85 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder83.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc84, fields85, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder87.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder89.setOffsetCommitPeriodMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig92 = kafkaSpoutRetryServiceBuilder91.build();
        boolean boolean93 = kafkaSpoutRetryServiceKafkaSpoutConfig92.isConsumerAutoCommitMode();
        long long94 = kafkaSpoutRetryServiceKafkaSpoutConfig92.getPollTimeoutMs();
        int int95 = kafkaSpoutRetryServiceKafkaSpoutConfig92.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator96 = kafkaSpoutRetryServiceKafkaSpoutConfig92.getTranslator();
        org.apache.storm.tuple.Fields fields97 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder99 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator96, fields97, "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 200L + "'", long30 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 200L + "'", long53 == 200L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 200L + "'", long94 == 200L);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 2147483647 + "'", int95 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder99);
    }

    @Test
    public void test01735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01735");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder12.setGroupId("hi!");
        java.lang.Class<?> wildcardClass24 = kafkaSpoutRetryServiceBuilder12.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test01736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01736");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        java.util.Collection<java.lang.String> strCollection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutRetryService> strListBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("", strListSerializableDeserializer1, kafkaSpoutRetryServiceSerializableDeserializer2, strCollection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01737");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder13.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder38.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder48.build();
        java.lang.String str54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getTranslator();
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields56, "hi!");
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields59, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder8.setPollTimeoutMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setBootstrapServers("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
    }

    @Test
    public void test01738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01738");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder36.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder36.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setFirstPollOffsetStrategy(firstPollOffsetStrategy45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder16.setFirstPollOffsetStrategy(firstPollOffsetStrategy45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder16.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder16.setPollTimeoutMs((long) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
    }

    @Test
    public void test01739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01739");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test01740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01740");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        java.lang.String str29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder38.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder46.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder56.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getTranslator();
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator62, fields63);
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator62, fields65);
        java.lang.Class<?> wildcardClass67 = kafkaSpoutRetryServiceBuilder13.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test01741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01741");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc18, fields19, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields37, "hi!");
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setFetchMinBytes(10000000);
        java.lang.Class<?> wildcardClass48 = kafkaSpoutRetryServiceBuilder47.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test01742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01742");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc45 = null;
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig49 = kafkaSpoutRetryServiceBuilder44.build();
        long long50 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription52 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc64 = null;
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc64, fields65, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig68 = kafkaSpoutRetryServiceBuilder63.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getTranslator();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer71 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getKeyDeserializer();
        long long72 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer73 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getKeyDeserializer();
        int int74 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getTranslator();
        org.apache.storm.tuple.Fields fields76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator75, fields76);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService78 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setRetry(kafkaSpoutRetryService78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 200L + "'", long50 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 200L + "'", long70 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 30000L + "'", long72 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2147483647 + "'", int74 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
    }

    @Test
    public void test01743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01743");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder22.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc45 = null;
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc45, fields46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder58.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder58.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy67 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setFirstPollOffsetStrategy(firstPollOffsetStrategy67);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService69 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setRetry(kafkaSpoutRetryService69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder49.setRetry(kafkaSpoutRetryService69);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer73 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer74 = null;
        java.util.regex.Pattern pattern75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer73, charSequenceSerializableDeserializer74, pattern75);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator77);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc79 = null;
        org.apache.storm.tuple.Fields fields80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc79, fields80, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig83 = kafkaSpoutRetryServiceBuilder78.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator84 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        long long85 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService86 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer87 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator88 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields89);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator88);
        org.apache.storm.tuple.Fields fields92 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields92);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder15.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy67 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy67.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 200L + "'", long85 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService86);
        org.junit.Assert.assertNull(charSequenceDeserializer87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
    }

    @Test
    public void test01744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01744");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields50, "hi!");
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, charSequenceSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator63);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc65 = null;
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc65, fields66, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig69 = kafkaSpoutRetryServiceBuilder64.build();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy71 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder57.setProp(strMap72);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer75 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer76 = null;
        java.util.regex.Pattern pattern77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer75, charSequenceSerializableDeserializer76, pattern77);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc81 = null;
        org.apache.storm.tuple.Fields fields82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder80.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc81, fields82, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig85 = kafkaSpoutRetryServiceBuilder80.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator86 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getTranslator();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService88 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getRetryService();
        int int89 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService90 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder57.setRetry(kafkaSpoutRetryService90);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder91.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig94 = kafkaSpoutRetryServiceBuilder91.build();
        int int95 = kafkaSpoutRetryServiceKafkaSpoutConfig94.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 200L + "'", long70 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy71 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy71.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 200L + "'", long87 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2147483647 + "'", int89 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 10000000 + "'", int95 == 10000000);
    }

    @Test
    public void test01745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01745");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig24 = kafkaSpoutRetryServiceBuilder19.build();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription27 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getSubscription();
        int int28 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription31 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getSubscription();
        long long32 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getPartitionRefreshPeriodMs();
        int int33 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getTranslator();
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator34, fields35);
        java.util.Properties properties37 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder12.setProp(properties37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 200L + "'", long25 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2147483647 + "'", int28 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy30 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy30.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 2000L + "'", long32 == 2000L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2147483647 + "'", int33 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
    }

    @Test
    public void test01746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01746");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
    }

    @Test
    public void test01747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01747");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000000 + "'", int15 == 10000000);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
    }

    @Test
    public void test01748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01748");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceBuilderSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> strListBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", strListSerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> strCollectionBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("", strCollectionSerializableDeserializer1, kafkaSpoutRetryServiceBuilderSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test01749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01749");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder4.setSSLTruststore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
    }

    @Test
    public void test01750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01750");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        java.lang.String str29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder38.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder46.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder56.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getTranslator();
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator62, fields63);
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator62, fields65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setMaxUncommittedOffsets(10);
        java.util.Properties properties69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setProp(properties69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
    }

    @Test
    public void test01751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01751");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder19.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder39.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getTranslator();
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder13.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder48.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder48.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder48.setPartitionRefreshPeriodMs((long) (-1));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
    }

    @Test
    public void test01752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01752");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
    }

    @Test
    public void test01753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01753");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.Object> strCollectionBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.Object>("hi!", strCollectionSerializableDeserializer1, objSerializableDeserializer2, pattern3);
    }

    @Test
    public void test01754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01754");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer3 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Iterable<java.lang.String>> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Iterable<java.lang.String>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, strIterableSerializableDeserializer3, strArray10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test01755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01755");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setSSLKeystore("", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder16.setOffsetCommitPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder16.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
    }

    @Test
    public void test01756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01756");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setFirstPollOffsetStrategy(firstPollOffsetStrategy17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder16.setSSLKeystore("", "hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc30 = null;
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder29.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        long long36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService37 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getRetryService();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 200L + "'", long36 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 200L + "'", long38 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
    }

    @Test
    public void test01757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01757");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer20 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer19, randomAccessSerializableDeserializer20, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer16, randomAccessSerializableDeserializer17, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService> typeBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", typeSerializableDeserializer11, kafkaSpoutRetryServiceSerializableDeserializer12, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration> objBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration>("hi!", objSerializableDeserializer8, genericDeclarationSerializableDeserializer9, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray22);
        java.util.Properties properties32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setProp(properties32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test01758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01758");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder29.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder29.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder37.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc50 = null;
        org.apache.storm.tuple.Fields fields51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc50, fields51, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig54 = kafkaSpoutRetryServiceBuilder49.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getTranslator();
        long long56 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService57 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer58 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator59, fields61, "hi!");
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator59, fields64, "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 200L + "'", long56 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService57);
        org.junit.Assert.assertNull(charSequenceDeserializer58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
    }

    @Test
    public void test01759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01759");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer18 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]> strListBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer17, strArraySerializableDeserializer18, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray22);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.util.RandomAccess> serializableBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.util.RandomAccess>("", serializableSerializableDeserializer1, randomAccessSerializableDeserializer2, strArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test01760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01760");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer8 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.Collection<java.lang.String>> objBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.Collection<java.lang.String>>("hi!", objSerializableDeserializer7, strCollectionSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test01761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01761");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        long long29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription32 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy34 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator35, fields36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder16.setMaxRetries((int) (short) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 200L + "'", long29 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy34 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy34.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
    }

    @Test
    public void test01762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01762");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setProp("", (java.lang.Object) 2147483647);
        java.lang.Class<?> wildcardClass23 = kafkaSpoutRetryServiceBuilder22.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test01763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01763");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        java.lang.String str29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "hi!");
        java.util.Properties properties34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder13.setProp(properties34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
    }

    @Test
    public void test01764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01764");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder57.setPartitionRefreshPeriodMs((long) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
    }

    @Test
    public void test01765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01765");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractCollection<java.lang.String>> strCollectionBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractCollection<java.lang.String>>("", strCollectionSerializableDeserializer1, strCollectionSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test01766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01766");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder22.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder22.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder48.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc62 = null;
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc62, fields63, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder61.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields68, "hi!");
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields74, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder80.setPartitionRefreshPeriodMs((long) (short) 1);
        java.util.Properties properties83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder80.setProp(properties83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
    }

    @Test
    public void test01767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01767");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder28.build();
        java.lang.String str34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setMaxPartitionFectchBytes((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setOffsetCommitPeriodMs((long) (short) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
    }

    @Test
    public void test01768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01768");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder29.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder39.build();
        java.lang.String str45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getTranslator();
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator46, fields47, "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder54.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder54.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder62.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, charSequenceSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator71);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc73 = null;
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc73, fields74, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig77 = kafkaSpoutRetryServiceBuilder72.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator78 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getTranslator();
        org.apache.storm.tuple.Fields fields79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator78, fields79);
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator78, fields81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig84 = kafkaSpoutRetryServiceBuilder83.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy85 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getFirstPollOffsetStrategy();
        boolean boolean86 = kafkaSpoutRetryServiceKafkaSpoutConfig84.isConsumerAutoCommitMode();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getPollTimeoutMs();
        java.lang.Class<?> wildcardClass88 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig84);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy85 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy85.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 200L + "'", long87 == 200L);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test01769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01769");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy15);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        long long30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getRetryService();
        int int32 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder14.setProp(strMap34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setMaxRetries((int) '4');
        java.util.Properties properties40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setProp(properties40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 200L + "'", long30 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483647 + "'", int32 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
    }

    @Test
    public void test01770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01770");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.util.List<java.lang.String>> cloneableBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.util.List<java.lang.String>>("", cloneableSerializableDeserializer1, strListSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test01771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01771");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(charSequenceDeserializer17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(charSequenceDeserializer19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
    }

    @Test
    public void test01772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01772");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder34.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder37.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer43 = null;
        java.util.regex.Pattern pattern44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer42, charSequenceSerializableDeserializer43, pattern44);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder45.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer54 = null;
        java.util.regex.Pattern pattern55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer53, charSequenceSerializableDeserializer54, pattern55);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder56.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder56.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setFirstPollOffsetStrategy(firstPollOffsetStrategy65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder51.setFirstPollOffsetStrategy(firstPollOffsetStrategy65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy68 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setFirstPollOffsetStrategy(firstPollOffsetStrategy68);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer71 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer72 = null;
        java.util.regex.Pattern pattern73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer71, charSequenceSerializableDeserializer72, pattern73);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator75);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc77 = null;
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc77, fields78, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig81 = kafkaSpoutRetryServiceBuilder76.build();
        java.lang.String str82 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer83 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getValueDeserializer();
        boolean boolean84 = kafkaSpoutRetryServiceKafkaSpoutConfig81.isConsumerAutoCommitMode();
        java.lang.String str85 = kafkaSpoutRetryServiceKafkaSpoutConfig81.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator86 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator86);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator86);
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator86, fields89);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder90.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy65 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy65.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy68 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy68.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(charSequenceDeserializer83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
    }

    @Test
    public void test01773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01773");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getOffsetsCommitPeriodMs();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig31.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder17.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setPollTimeoutMs((-1L));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder47.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc61 = null;
        org.apache.storm.tuple.Fields fields62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc61, fields62, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig65 = kafkaSpoutRetryServiceBuilder60.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getTranslator();
        long long67 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getPollTimeoutMs();
        long long68 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder47.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder40.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder40.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer75 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer76 = null;
        java.util.regex.Pattern pattern77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer75, charSequenceSerializableDeserializer76, pattern77);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc81 = null;
        org.apache.storm.tuple.Fields fields82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder80.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc81, fields82, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig85 = kafkaSpoutRetryServiceBuilder80.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator86 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getTranslator();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService88 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getRetryService();
        long long89 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator90 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getTranslator();
        int int91 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getMaxTupleRetries();
        int int92 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getMaxTupleRetries();
        int int93 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder40.setProp("", (java.lang.Object) int93);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder94.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder98 = kafkaSpoutRetryServiceBuilder96.setMaxUncommittedOffsets((int) ' ');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 200L + "'", long34 == 200L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 30000L + "'", long35 == 30000L);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 200L + "'", long67 == 200L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 200L + "'", long68 == 200L);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 200L + "'", long87 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 200L + "'", long89 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 2147483647 + "'", int91 == 2147483647);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 2147483647 + "'", int92 == 2147483647);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 10000000 + "'", int93 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder98);
    }

    @Test
    public void test01774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01774");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        java.lang.String str31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer28);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
    }

    @Test
    public void test01775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01775");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        long long30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator31, fields32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder35.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 200L + "'", long30 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
    }

    @Test
    public void test01776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01776");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test01777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01777");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setMaxUncommittedOffsets((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, charSequenceSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getPollTimeoutMs();
        boolean boolean45 = kafkaSpoutRetryServiceKafkaSpoutConfig42.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder30.setProp(strMap46);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc55 = null;
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc55, fields56, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig59 = kafkaSpoutRetryServiceBuilder54.build();
        java.lang.String str60 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator61, fields63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig65 = kafkaSpoutRetryServiceBuilder25.build();
        long long66 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getOffsetsCommitPeriodMs();
        java.lang.String str67 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy68 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 200L + "'", long44 == 200L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy68 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy68.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
    }

    @Test
    public void test01778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01778");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder14.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder14.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setFetchMinBytes((int) (byte) -1);
        java.util.Properties properties24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setProp(properties24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
    }

    @Test
    public void test01779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01779");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strCollectionBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strCollectionSerializableDeserializer7, firstPollOffsetStrategySerializableDeserializer8, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.Cloneable> subscriptionBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.Cloneable>("hi!", subscriptionSerializableDeserializer3, cloneableSerializableDeserializer4, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test01780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01780");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRetry(kafkaSpoutRetryService11);
        java.lang.Object obj14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder10.setProp("", obj14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder20.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder46.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc60 = null;
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc60, fields61, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder59.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator65, fields66, "hi!");
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator65, fields69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator65);
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator65, fields72);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer75 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer76 = null;
        java.util.regex.Pattern pattern77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer75, charSequenceSerializableDeserializer76, pattern77);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc81 = null;
        org.apache.storm.tuple.Fields fields82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder80.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc81, fields82, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig85 = kafkaSpoutRetryServiceBuilder80.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator86 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator87 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getTranslator();
        int int88 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getMaxUncommittedOffsets();
        long long89 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getOffsetsCommitPeriodMs();
        java.lang.String str90 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer91 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer92 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService93 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder73.setRetry(kafkaSpoutRetryService93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 10000000 + "'", int88 == 10000000);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 30000L + "'", long89 == 30000L);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNull(charSequenceDeserializer91);
        org.junit.Assert.assertNull(charSequenceDeserializer92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
    }

    @Test
    public void test01781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01781");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNull(charSequenceDeserializer14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
    }

    @Test
    public void test01782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01782");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getPollTimeoutMs();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields46);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc55 = null;
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc55, fields56, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setOffsetCommitPeriodMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig63 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService64 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder47.setRetry(kafkaSpoutRetryService64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder65.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer70 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer71 = null;
        java.util.regex.Pattern pattern72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer70, charSequenceSerializableDeserializer71, pattern72);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator74);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc76 = null;
        org.apache.storm.tuple.Fields fields77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder75.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc76, fields77, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig80 = kafkaSpoutRetryServiceBuilder75.build();
        long long81 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator82 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy83 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService84 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder68.setRetry(kafkaSpoutRetryService84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder68.setPartitionRefreshPeriodMs((long) (byte) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 200L + "'", long81 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator82);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy83 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy83.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
    }

    @Test
    public void test01783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01783");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFetchMinBytes((int) (short) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
    }

    @Test
    public void test01784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01784");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.reflect.AnnotatedElement> strListBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.reflect.AnnotatedElement>("hi!", strListSerializableDeserializer3, annotatedElementSerializableDeserializer4, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test01785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01785");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRetry(kafkaSpoutRetryService11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFetchMinBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc22 = null;
        org.apache.storm.tuple.Fields fields23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc22, fields23, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig26 = kafkaSpoutRetryServiceBuilder21.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getTranslator();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getRetryService();
        int int30 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder14.setRetry(kafkaSpoutRetryService31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder14.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setSecurityProtocol("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2147483647 + "'", int30 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
    }

    @Test
    public void test01786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01786");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceBuilderSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc13 = null;
        org.apache.storm.tuple.Fields fields14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc13, fields14, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getRetryService();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.toString();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getConsumerGroupId();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPartitionRefreshPeriodMs();
        java.lang.String str22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer23 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription24 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.Subscription> strComparableBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.Subscription>("hi!", strComparableSerializableDeserializer4, subscriptionSerializableDeserializer5, subscription24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> kafkaSpoutRetryServiceBuilderBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", kafkaSpoutRetryServiceBuilderSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, subscription24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2000L + "'", long21 == 2000L);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer23);
        org.junit.Assert.assertNotNull(subscription24);
    }

    @Test
    public void test01787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01787");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        java.lang.String str29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        java.util.Properties properties38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder13.setProp(properties38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
    }

    @Test
    public void test01788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01788");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        boolean boolean34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder19.setProp(strMap35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder6.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getPartitionRefreshPeriodMs();
        boolean boolean71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder54.setProp("", (java.lang.Object) boolean71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder72.setBootstrapServers("");
        java.lang.Class<?> wildcardClass75 = kafkaSpoutRetryServiceBuilder74.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 2000L + "'", long70 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test01789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01789");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> genericDeclarationBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("hi!", genericDeclarationSerializableDeserializer2, kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test01790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01790");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, charSequenceSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.String> strListBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.String>("hi!", strListSerializableDeserializer2, strSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test01791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01791");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
    }

    @Test
    public void test01792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01792");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig15 = kafkaSpoutRetryServiceBuilder14.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig15.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
    }

    @Test
    public void test01793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01793");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        long long30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator31, fields32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder13.setMaxUncommittedOffsets((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer43 = null;
        java.util.regex.Pattern pattern44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer42, charSequenceSerializableDeserializer43, pattern44);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator46);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc48 = null;
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc48, fields49, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig52 = kafkaSpoutRetryServiceBuilder47.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getTranslator();
        long long54 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getPollTimeoutMs();
        boolean boolean55 = kafkaSpoutRetryServiceKafkaSpoutConfig52.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder40.setProp(strMap56);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, charSequenceSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator63);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc65 = null;
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc65, fields66, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig69 = kafkaSpoutRetryServiceBuilder64.build();
        java.lang.String str70 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder72.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder72.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer78 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer79 = null;
        java.util.regex.Pattern pattern80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer78, charSequenceSerializableDeserializer79, pattern80);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder81.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator82);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc84 = null;
        org.apache.storm.tuple.Fields fields85 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder83.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc84, fields85, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig88 = kafkaSpoutRetryServiceBuilder83.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator89 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator90 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getTranslator();
        int int91 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getMaxUncommittedOffsets();
        long long92 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getOffsetsCommitPeriodMs();
        java.lang.String str93 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer94 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getValueDeserializer();
        java.lang.String str95 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getConsumerGroupId();
        int int96 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService97 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder98 = kafkaSpoutRetryServiceBuilder76.setRetry(kafkaSpoutRetryService97);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder99 = kafkaSpoutRetryServiceBuilder35.setRetry(kafkaSpoutRetryService97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 200L + "'", long30 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 200L + "'", long54 == 200L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 10000000 + "'", int91 == 10000000);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 30000L + "'", long92 == 30000L);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNull(charSequenceDeserializer94);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 10000000 + "'", int96 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder98);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder99);
    }

    @Test
    public void test01794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01794");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.String> strListBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.String>("hi!", strListSerializableDeserializer9, strSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test01795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01795");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes((int) (byte) -1);
        java.util.Properties properties19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setProp(properties19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
    }

    @Test
    public void test01796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01796");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer61 = null;
        java.util.regex.Pattern pattern62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer60, charSequenceSerializableDeserializer61, pattern62);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder63.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder63.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy72 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setFirstPollOffsetStrategy(firstPollOffsetStrategy72);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService74 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder71.setRetry(kafkaSpoutRetryService74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder57.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder71.setMaxPartitionFectchBytes(0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy72 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy72.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
    }

    @Test
    public void test01797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01797");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc30 = null;
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder29.build();
        java.lang.String str35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getValueDeserializer();
        java.lang.String str37 = kafkaSpoutRetryServiceKafkaSpoutConfig34.toString();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) long38);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder46.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        long long53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getPollTimeoutMs();
        long long54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getPollTimeoutMs();
        long long55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getOffsetsCommitPeriodMs();
        java.lang.String str56 = kafkaSpoutRetryServiceKafkaSpoutConfig51.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getKafkaProps();
        int int58 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getMaxUncommittedOffsets();
        int int59 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy60 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder39.setFirstPollOffsetStrategy(firstPollOffsetStrategy60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(charSequenceDeserializer36);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 30000L + "'", long38 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 200L + "'", long53 == 200L);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 200L + "'", long54 == 200L);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 30000L + "'", long55 == 30000L);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10000000 + "'", int58 == 10000000);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2147483647 + "'", int59 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy60 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy60.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
    }

    @Test
    public void test01798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01798");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test01799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01799");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, charSequenceSerializableDeserializer12, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strCollectionBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strCollectionSerializableDeserializer8, firstPollOffsetStrategySerializableDeserializer9, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.Cloneable> subscriptionBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.Cloneable>("hi!", subscriptionSerializableDeserializer4, cloneableSerializableDeserializer5, strArray14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test01800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01800");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer15 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]> strListBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer14, strArraySerializableDeserializer15, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer3, charSequenceSerializableDeserializer4, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test01801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01801");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        int int38 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getMaxUncommittedOffsets();
        long long39 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getOffsetsCommitPeriodMs();
        java.lang.String str40 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer41 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer42 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService43 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder21.setRetry(kafkaSpoutRetryService43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder21.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs((long) (byte) 1);
        java.lang.Class<?> wildcardClass49 = kafkaSpoutRetryServiceBuilder48.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10000000 + "'", int38 == 10000000);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 30000L + "'", long39 == 30000L);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(charSequenceDeserializer41);
        org.junit.Assert.assertNull(charSequenceDeserializer42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test01802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01802");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.util.RandomAccess> subscriptionBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.util.RandomAccess>("hi!", subscriptionSerializableDeserializer2, randomAccessSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test01803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01803");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer7 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.Collection<java.lang.String>> objBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.Collection<java.lang.String>>("hi!", objSerializableDeserializer6, strCollectionSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer3, charSequenceSerializableDeserializer4, (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test01804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01804");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder52.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer61 = null;
        java.util.regex.Pattern pattern62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer60, charSequenceSerializableDeserializer61, pattern62);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc66 = null;
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc66, fields67, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig70 = kafkaSpoutRetryServiceBuilder65.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getTranslator();
        long long72 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getPollTimeoutMs();
        long long73 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder52.setProp(strMap74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder47.setProp(strMap74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setOffsetCommitPeriodMs((long) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder76.setSSLKeystore("hi!", "", "");
        java.util.Properties properties83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder82.setProp(properties83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 200L + "'", long72 == 200L);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 200L + "'", long73 == 200L);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
    }

    @Test
    public void test01805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01805");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder13.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder26);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, charSequenceSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder53.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder53.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder53.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setFirstPollOffsetStrategy(firstPollOffsetStrategy62);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService64 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRetry(kafkaSpoutRetryService64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder44.setRetry(kafkaSpoutRetryService64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy67 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setFirstPollOffsetStrategy(firstPollOffsetStrategy67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder28.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer74 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer75 = null;
        java.util.regex.Pattern pattern76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer74, charSequenceSerializableDeserializer75, pattern76);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator78);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc80 = null;
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder79.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc80, fields81, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig84 = kafkaSpoutRetryServiceBuilder79.build();
        long long85 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator86 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy87 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription88 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy90 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator91 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator92 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder71.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig84);
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer94 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy62 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy62.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy67 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy67.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 200L + "'", long85 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator86);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy87 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy87.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy90 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy90.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer94);
    }

    @Test
    public void test01806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01806");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.tuple.Fields fields29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator28, fields29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setMaxPollRecords((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setMaxRetries(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder32.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer41 = null;
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer40, charSequenceSerializableDeserializer41, (java.util.Collection<java.lang.String>) strList45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder48.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc62 = null;
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc62, fields63, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder61.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields69, "hi!");
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields72, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder32.setFetchMinBytes((int) (short) 0);
        java.lang.Class<?> wildcardClass77 = kafkaSpoutRetryServiceBuilder32.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test01807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01807");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer13);
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
    }

    @Test
    public void test01808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01808");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
    }

    @Test
    public void test01809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01809");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc42 = null;
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc42, fields43, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig46 = kafkaSpoutRetryServiceBuilder41.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields48, "hi!");
        org.apache.storm.tuple.Fields fields51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder10.setMaxPollRecords((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
    }

    @Test
    public void test01810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01810");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig24 = kafkaSpoutRetryServiceBuilder19.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getTranslator();
        org.apache.storm.tuple.Fields fields27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator26, fields27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder39.build();
        long long45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription47 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getSubscription();
        long long48 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription49 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getSubscription();
        long long50 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder32.setProp(strMap51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setGroupId("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 200L + "'", long45 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 2000L + "'", long48 == 2000L);
        org.junit.Assert.assertNotNull(subscription49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 2000L + "'", long50 == 2000L);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
    }

    @Test
    public void test01811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01811");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2000L + "'", long20 == 2000L);
    }

    @Test
    public void test01812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01812");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer3 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.RandomAccess> strBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.RandomAccess>("hi!", strSerializableDeserializer2, randomAccessSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test01813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01813");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getOffsetsCommitPeriodMs();
        long long29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPartitionRefreshPeriodMs();
        long long30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer33 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 2000L + "'", long29 == 2000L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 200L + "'", long30 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(charSequenceDeserializer33);
    }

    @Test
    public void test01814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01814");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc13 = null;
        org.apache.storm.tuple.Fields fields14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc13, fields14, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> strArrayBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", strArraySerializableDeserializer4, firstPollOffsetStrategyEnumSerializableDeserializer5, subscription18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.io.Serializable> subscriptionBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.io.Serializable>("", subscriptionSerializableDeserializer1, serializableSerializableDeserializer2, subscription18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(subscription18);
    }

    @Test
    public void test01815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01815");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
    }

    @Test
    public void test01816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01816");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
    }

    @Test
    public void test01817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01817");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((int) (short) 10);
        java.util.Properties properties22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setProp(properties22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
    }

    @Test
    public void test01818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01818");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>, java.lang.Iterable<java.lang.String>> kafkaSpoutRetryServiceConsumerRecordFuncBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>, java.lang.Iterable<java.lang.String>>("hi!", kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer1, strIterableSerializableDeserializer2, pattern3);
    }

    @Test
    public void test01819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01819");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        java.lang.Class<?> wildcardClass9 = kafkaSpoutRetryServiceBuilder8.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test01820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01820");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator32);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc34 = null;
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc34, fields35, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getTranslator();
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator39, fields40);
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator39, fields42);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc60 = null;
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc60, fields61, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder59.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        long long66 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer67 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getKeyDeserializer();
        long long68 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer69 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getKeyDeserializer();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getOffsetsCommitPeriodMs();
        int int71 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService72 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder48.setRetry(kafkaSpoutRetryService72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder43.setRetry(kafkaSpoutRetryService72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 200L + "'", long66 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 30000L + "'", long68 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 30000L + "'", long70 == 30000L);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2147483647 + "'", int71 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
    }

    @Test
    public void test01821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01821");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc13 = null;
        org.apache.storm.tuple.Fields fields14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc13, fields14, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder12.build();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getFirstPollOffsetStrategy();
        java.lang.String str24 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getConsumerGroupId();
        int int25 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getMaxUncommittedOffsets();
        long long26 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription27 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.Comparable<java.lang.String>> strArrayBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.Comparable<java.lang.String>>("hi!", strArraySerializableDeserializer4, strComparableSerializableDeserializer5, subscription27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy23 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy23.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10000000 + "'", int25 == 10000000);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 30000L + "'", long26 == 30000L);
        org.junit.Assert.assertNotNull(subscription27);
    }

    @Test
    public void test01822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01822");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setMaxPollRecords((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder19.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setPartitionRefreshPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, (java.util.Collection<java.lang.String>) strList38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder41.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder28.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder41);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder48.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc55 = null;
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc55, fields56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer65 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer66 = null;
        java.util.regex.Pattern pattern67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer65, charSequenceSerializableDeserializer66, pattern67);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder68.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder68.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder68.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy77 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setFirstPollOffsetStrategy(firstPollOffsetStrategy77);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService79 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder76.setRetry(kafkaSpoutRetryService79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder59.setRetry(kafkaSpoutRetryService79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy82 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder81.setFirstPollOffsetStrategy(firstPollOffsetStrategy82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder43.setFirstPollOffsetStrategy(firstPollOffsetStrategy82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder14.setSSLKeystore("", "", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy77 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy77.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy82 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy82.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
    }

    @Test
    public void test01823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01823");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        java.lang.Class<?> wildcardClass20 = kafkaSpoutRetryServiceBuilder15.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test01824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01824");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test01825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01825");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        java.lang.Class<?> wildcardClass19 = kafkaSpoutRetryServiceBuilder18.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test01826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01826");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.Type> objBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.Type>("hi!", objSerializableDeserializer1, typeSerializableDeserializer2, subscription18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription18);
    }

    @Test
    public void test01827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01827");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc22 = null;
        org.apache.storm.tuple.Fields fields23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc22, fields23, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig26 = kafkaSpoutRetryServiceBuilder21.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getTranslator();
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator27, fields28, "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder30.setProp("", (java.lang.Object) kafkaSpoutRetryServiceRecordTranslator45);
        java.util.Properties properties47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder30.setProp(properties47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 200L + "'", long44 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
    }

    @Test
    public void test01828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01828");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder16.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc43 = null;
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc43, fields44, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig47 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        long long49 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getPollTimeoutMs();
        boolean boolean50 = kafkaSpoutRetryServiceKafkaSpoutConfig47.isConsumerAutoCommitMode();
        java.lang.String str51 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder35.setProp(strMap53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder6.setProp(strMap53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder6.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 200L + "'", long49 == 200L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
    }

    @Test
    public void test01829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01829");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
    }

    @Test
    public void test01830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01830");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder33.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder42.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, charSequenceSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator51);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc53 = null;
        org.apache.storm.tuple.Fields fields54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc53, fields54, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig57 = kafkaSpoutRetryServiceBuilder52.build();
        java.lang.String str58 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getTranslator();
        org.apache.storm.tuple.Fields fields60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator59, fields60, "hi!");
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator59, fields63, "hi!");
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator59, fields66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setPollTimeoutMs((long) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder67.setPartitionRefreshPeriodMs(10L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
    }

    @Test
    public void test01831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01831");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((long) (short) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
    }

    @Test
    public void test01832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01832");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertNull(charSequenceDeserializer19);
    }

    @Test
    public void test01833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01833");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder15.build();
        int int54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getTranslator();
        long long56 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10000000 + "'", int54 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 200L + "'", long56 == 200L);
    }

    @Test
    public void test01834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01834");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = kafkaSpoutRetryServiceDeserializer19.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer19);
    }

    @Test
    public void test01835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01835");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer17 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer16, randomAccessSerializableDeserializer17, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer13, randomAccessSerializableDeserializer14, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable> randomAccessBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable>("hi!", randomAccessSerializableDeserializer8, serializableSerializableDeserializer9, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test01836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01836");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray4);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder5.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder22.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder22.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        long long45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer46 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getKeyDeserializer();
        long long47 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer48 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getKeyDeserializer();
        int int49 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.tuple.Fields fields51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator50, fields51, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        java.util.Properties properties55 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder8.setProp(properties55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 200L + "'", long45 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 30000L + "'", long47 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2147483647 + "'", int49 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
    }

    @Test
    public void test01837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01837");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder15.build();
        boolean boolean21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.isConsumerAutoCommitMode();
        java.lang.String str22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getConsumerGroupId();
        boolean boolean23 = kafkaSpoutRetryServiceKafkaSpoutConfig20.isConsumerAutoCommitMode();
        long long24 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getOffsetsCommitPeriodMs();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 30000L + "'", long24 == 30000L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 200L + "'", long25 == 200L);
    }

    @Test
    public void test01838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01838");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPollTimeoutMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig24 = kafkaSpoutRetryServiceBuilder21.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig24);
    }

    @Test
    public void test01839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01839");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertNotNull(subscription20);
    }

    @Test
    public void test01840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01840");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder49.setMaxRetries((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder49.setFetchMinBytes(2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
    }

    @Test
    public void test01841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01841");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder34.build();
        java.lang.String str40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator41, fields42, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
    }

    @Test
    public void test01842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01842");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getOffsetsCommitPeriodMs();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig31.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder17.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder17.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder17.setPollTimeoutMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc50 = null;
        org.apache.storm.tuple.Fields fields51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc50, fields51, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig54 = kafkaSpoutRetryServiceBuilder49.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getTranslator();
        long long56 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService57 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getRetryService();
        int int58 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getMaxUncommittedOffsets();
        long long59 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService60 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder42.setRetry(kafkaSpoutRetryService60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig62 = kafkaSpoutRetryServiceBuilder61.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy63 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService64 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 200L + "'", long34 == 200L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 30000L + "'", long35 == 30000L);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 200L + "'", long56 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10000000 + "'", int58 == 10000000);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 30000L + "'", long59 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig62);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy63 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy63.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService64);
    }

    @Test
    public void test01843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01843");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.isConsumerAutoCommitMode();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPartitionRefreshPeriodMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPartitionRefreshPeriodMs();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
    }

    @Test
    public void test01844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01844");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer25 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer24, randomAccessSerializableDeserializer25, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer21, randomAccessSerializableDeserializer22, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService> typeBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", typeSerializableDeserializer16, kafkaSpoutRetryServiceSerializableDeserializer17, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration> objBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration>("hi!", objSerializableDeserializer13, genericDeclarationSerializableDeserializer14, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.String> strCollectionBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.String>("hi!", strCollectionSerializableDeserializer7, strSerializableDeserializer8, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strMapBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strMapSerializableDeserializer4, firstPollOffsetStrategySerializableDeserializer5, strArray27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutRetryService> strIterableBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("", strIterableSerializableDeserializer1, kafkaSpoutRetryServiceSerializableDeserializer2, strArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test01845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01845");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer20 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer19, randomAccessSerializableDeserializer20, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer16, randomAccessSerializableDeserializer17, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService> typeBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", typeSerializableDeserializer11, kafkaSpoutRetryServiceSerializableDeserializer12, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration> objBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration>("hi!", objSerializableDeserializer8, genericDeclarationSerializableDeserializer9, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.Object> subscriptionBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.Object>("hi!", subscriptionSerializableDeserializer2, objSerializableDeserializer3, strArray22);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test01846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01846");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer10 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer9, charSequenceSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Iterable<java.lang.String>> strIterableBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Iterable<java.lang.String>>("", strIterableSerializableDeserializer1, strIterableSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test01847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01847");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(charSequenceDeserializer12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator14);
        org.junit.Assert.assertNotNull(subscription15);
    }

    @Test
    public void test01848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01848");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc26 = null;
        org.apache.storm.tuple.Fields fields27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc26, fields27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
    }

    @Test
    public void test01849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01849");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder11.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder19.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder19.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder35.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder35.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer49 = null;
        java.util.regex.Pattern pattern50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, charSequenceSerializableDeserializer49, pattern50);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc56 = null;
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc56, fields57, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder55.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, charSequenceSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc69 = null;
        org.apache.storm.tuple.Fields fields70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc69, fields70, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder68.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getTranslator();
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields75, "hi!");
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields78, "");
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields81, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder83.setMaxRetries(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder85.setMaxRetries((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService88 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder87.setRetry(kafkaSpoutRetryService88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
    }

    @Test
    public void test01850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01850");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer27 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer26, randomAccessSerializableDeserializer27, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer23, randomAccessSerializableDeserializer24, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService> typeBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", typeSerializableDeserializer18, kafkaSpoutRetryServiceSerializableDeserializer19, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration> objBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration>("hi!", objSerializableDeserializer15, genericDeclarationSerializableDeserializer16, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.String> strCollectionBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.String>("hi!", strCollectionSerializableDeserializer9, strSerializableDeserializer10, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strMapBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strMapSerializableDeserializer6, firstPollOffsetStrategySerializableDeserializer7, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer3, charSequenceSerializableDeserializer4, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test01851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01851");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000000 + "'", int18 == 10000000);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
    }

    @Test
    public void test01852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01852");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
    }

    @Test
    public void test01853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01853");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setPollTimeoutMs((long) (-1));
        java.lang.Class<?> wildcardClass31 = kafkaSpoutRetryServiceBuilder26.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test01854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01854");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxUncommittedOffsets();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getOffsetsCommitPeriodMs();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setMaxUncommittedOffsets((int) (short) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
    }

    @Test
    public void test01855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01855");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc13 = null;
        org.apache.storm.tuple.Fields fields14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc13, fields14, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getTranslator();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription23 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, subscription23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setGroupId("");
        java.util.Properties properties30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setProp(properties30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(charSequenceDeserializer22);
        org.junit.Assert.assertNotNull(subscription23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
    }

    @Test
    public void test01856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01856");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer5 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.reflect.Type> randomAccessBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.reflect.Type>("hi!", randomAccessSerializableDeserializer4, typeSerializableDeserializer5, strArray14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test01857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01857");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable> randomAccessBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable>("hi!", randomAccessSerializableDeserializer11, serializableSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, charSequenceSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, charSequenceSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test01858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01858");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder10.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc41 = null;
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc41, fields42, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig45 = kafkaSpoutRetryServiceBuilder40.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getTranslator();
        long long47 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getPollTimeoutMs();
        boolean boolean48 = kafkaSpoutRetryServiceKafkaSpoutConfig45.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder33.setProp(strMap49);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, charSequenceSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator56);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc58 = null;
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig62 = kafkaSpoutRetryServiceBuilder57.build();
        java.lang.String str63 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setPartitionRefreshPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy68 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder65.setFirstPollOffsetStrategy(firstPollOffsetStrategy68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setMaxRetries(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder70.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder70.setSSLKeystore("hi!", "", "hi!");
        java.lang.Class<?> wildcardClass79 = kafkaSpoutRetryServiceBuilder78.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 200L + "'", long47 == 200L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy68 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy68.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test01859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01859");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder21.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc28 = null;
        org.apache.storm.tuple.Fields fields29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc28, fields29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig37 = kafkaSpoutRetryServiceBuilder32.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService38 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder16.setRetry(kafkaSpoutRetryService38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setMaxPollRecords((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
    }

    @Test
    public void test01860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01860");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder13.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder38.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder48.build();
        java.lang.String str54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getTranslator();
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields56, "hi!");
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields59, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder8.setPollTimeoutMs((long) 2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, charSequenceSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator71);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc73 = null;
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc73, fields74, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig77 = kafkaSpoutRetryServiceBuilder72.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator78 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getTranslator();
        long long79 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService80 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getRetryService();
        int int81 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy82 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder8.setProp("", (java.lang.Object) firstPollOffsetStrategy82);
        java.lang.Object obj85 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder83.setProp("hi!", obj85);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder83.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder88.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder91.setSecurityProtocol("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 200L + "'", long79 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10000000 + "'", int81 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy82 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy82.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
    }

    @Test
    public void test01861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01861");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder38.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRetry(kafkaSpoutRetryService49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder29.setRetry(kafkaSpoutRetryService49);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer54 = null;
        java.util.regex.Pattern pattern55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer53, charSequenceSerializableDeserializer54, pattern55);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc59 = null;
        org.apache.storm.tuple.Fields fields60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc59, fields60, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig63 = kafkaSpoutRetryServiceBuilder58.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getTranslator();
        long long65 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService66 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer67 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getTranslator();
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields69);
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields71, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setMaxPartitionFectchBytes((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder75.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer80 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer81 = null;
        java.util.regex.Pattern pattern82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer80, charSequenceSerializableDeserializer81, pattern82);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator84 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder83.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator84);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc86 = null;
        org.apache.storm.tuple.Fields fields87 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder85.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc86, fields87, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig90 = kafkaSpoutRetryServiceBuilder85.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator91 = kafkaSpoutRetryServiceKafkaSpoutConfig90.getTranslator();
        long long92 = kafkaSpoutRetryServiceKafkaSpoutConfig90.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService93 = kafkaSpoutRetryServiceKafkaSpoutConfig90.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer94 = kafkaSpoutRetryServiceKafkaSpoutConfig90.getKeyDeserializer();
        long long95 = kafkaSpoutRetryServiceKafkaSpoutConfig90.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator96 = kafkaSpoutRetryServiceKafkaSpoutConfig90.getTranslator();
        org.apache.storm.tuple.Fields fields97 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder98 = kafkaSpoutRetryServiceBuilder75.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator96, fields97);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig99 = kafkaSpoutRetryServiceBuilder98.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 200L + "'", long65 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService66);
        org.junit.Assert.assertNull(charSequenceDeserializer67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator91);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 200L + "'", long92 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService93);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer94);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 30000L + "'", long95 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder98);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig99);
    }

    @Test
    public void test01862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01862");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getOffsetsCommitPeriodMs();
        int int29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(charSequenceDeserializer30);
        org.junit.Assert.assertNull(charSequenceDeserializer31);
    }

    @Test
    public void test01863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01863");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000000 + "'", int20 == 10000000);
    }

    @Test
    public void test01864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01864");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer37 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getValueDeserializer();
        boolean boolean38 = kafkaSpoutRetryServiceKafkaSpoutConfig35.isConsumerAutoCommitMode();
        java.lang.String str39 = kafkaSpoutRetryServiceKafkaSpoutConfig35.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder23.setProp(strMap40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setBootstrapServers("");
        java.lang.Class<?> wildcardClass48 = kafkaSpoutRetryServiceBuilder47.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(charSequenceDeserializer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test01865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01865");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, charSequenceSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder35.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setOffsetCommitPeriodMs(100L);
        java.lang.Class<?> wildcardClass44 = kafkaSpoutRetryServiceBuilder41.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test01866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01866");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        long long45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService46 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getRetryService();
        int int47 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService48 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setOffsetCommitPeriodMs((long) 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 200L + "'", long45 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2147483647 + "'", int47 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
    }

    @Test
    public void test01867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01867");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test01868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01868");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        long long29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getSubscription();
        int int32 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy34 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder16.setFirstPollOffsetStrategy(firstPollOffsetStrategy34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder44.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder50.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc64 = null;
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc64, fields65, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig68 = kafkaSpoutRetryServiceBuilder63.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getTranslator();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService71 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer72 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer73 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy74 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder50.setFirstPollOffsetStrategy(firstPollOffsetStrategy74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig77 = kafkaSpoutRetryServiceBuilder35.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 200L + "'", long29 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy30 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy30.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483647 + "'", int32 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy34 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy34.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 200L + "'", long70 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService71);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer72);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer73);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy74 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy74.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig77);
    }

    @Test
    public void test01869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01869");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder26.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder26.setPollTimeoutMs((long) (byte) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
    }

    @Test
    public void test01870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01870");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setFetchMinBytes((int) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
    }

    @Test
    public void test01871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01871");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder33.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, charSequenceSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator54);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc56 = null;
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc56, fields57, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig60 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getTranslator();
        long long62 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getPollTimeoutMs();
        boolean boolean63 = kafkaSpoutRetryServiceKafkaSpoutConfig60.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder46.setProp(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder8.setProp(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setOffsetCommitPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer72 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer73 = null;
        java.util.regex.Pattern pattern74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer72, charSequenceSerializableDeserializer73, pattern74);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder75.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator76);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc78 = null;
        org.apache.storm.tuple.Fields fields79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder77.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc78, fields79, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig82 = kafkaSpoutRetryServiceBuilder77.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator83 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator84 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getTranslator();
        int int85 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService86 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder70.setRetry(kafkaSpoutRetryService86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 200L + "'", long62 == 200L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10000000 + "'", int85 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
    }

    @Test
    public void test01872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01872");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
    }

    @Test
    public void test01873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01873");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        boolean boolean17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer18);
    }

    @Test
    public void test01874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01874");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getPollTimeoutMs();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder47.setPartitionRefreshPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder47.setSSLKeystore("", "", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
    }

    @Test
    public void test01875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01875");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder55.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer61 = null;
        java.util.regex.Pattern pattern62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer60, charSequenceSerializableDeserializer61, pattern62);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc66 = null;
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc66, fields67, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig70 = kafkaSpoutRetryServiceBuilder65.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getTranslator();
        long long72 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer73 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getKeyDeserializer();
        long long74 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer75 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getKeyDeserializer();
        long long76 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getOffsetsCommitPeriodMs();
        int int77 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService78 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder58.setRetry(kafkaSpoutRetryService78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder58.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder58.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder83.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder83.setSSLKeystore("hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 200L + "'", long72 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 30000L + "'", long74 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 30000L + "'", long76 == 30000L);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2147483647 + "'", int77 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
    }

    @Test
    public void test01876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01876");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder6.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder16.setProp("", (java.lang.Object) 10.0d);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder19.build();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 200L + "'", long21 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService22);
    }

    @Test
    public void test01877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01877");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder6.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder16.setProp("", (java.lang.Object) 10.0d);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder19.build();
        java.lang.String str23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
    }

    @Test
    public void test01878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01878");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder6.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder9.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFetchMinBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.Subscription subscription30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, subscription30);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        long long46 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getPartitionRefreshPeriodMs();
        boolean boolean47 = kafkaSpoutRetryServiceKafkaSpoutConfig43.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder52.setSSLKeystore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(subscription30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 200L + "'", long44 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 2000L + "'", long46 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
    }

    @Test
    public void test01879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01879");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder22.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder22.setFirstPollOffsetStrategy(firstPollOffsetStrategy30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder22.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder38.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder47.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, charSequenceSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator56);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc58 = null;
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig62 = kafkaSpoutRetryServiceBuilder57.build();
        java.lang.String str63 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getTranslator();
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator64, fields65, "hi!");
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator64, fields68, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer74 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer75 = null;
        java.util.regex.Pattern pattern76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer74, charSequenceSerializableDeserializer75, pattern76);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder79.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder81.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig86 = kafkaSpoutRetryServiceBuilder81.build();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator88 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getTranslator();
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields89, "");
        java.util.Properties properties92 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder91.setProp(properties92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 30000L + "'", long87 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
    }

    @Test
    public void test01880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01880");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder33.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, charSequenceSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator54);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc56 = null;
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc56, fields57, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig60 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getTranslator();
        long long62 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getPollTimeoutMs();
        boolean boolean63 = kafkaSpoutRetryServiceKafkaSpoutConfig60.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder46.setProp(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder8.setProp(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setOffsetCommitPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer70 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer71 = null;
        java.util.regex.Pattern pattern72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer70, charSequenceSerializableDeserializer71, pattern72);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator74);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc76 = null;
        org.apache.storm.tuple.Fields fields77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder75.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc76, fields77, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig80 = kafkaSpoutRetryServiceBuilder75.build();
        long long81 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy82 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription84 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy85 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder66.setFirstPollOffsetStrategy(firstPollOffsetStrategy85);
        java.util.Properties properties87 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder66.setProp(properties87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 200L + "'", long62 == 200L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 200L + "'", long81 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy82 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy82.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(subscription84);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy85 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy85.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
    }

    @Test
    public void test01881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01881");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
    }

    @Test
    public void test01882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01882");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder15.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder30.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder33.build();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 200L + "'", long35 == 200L);
    }

    @Test
    public void test01883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01883");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder17.setPollTimeoutMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder17.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder35.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        int int43 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getMaxUncommittedOffsets();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getOffsetsCommitPeriodMs();
        java.lang.String str45 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService46 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder28.setRetry(kafkaSpoutRetryService46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setOffsetCommitPeriodMs(2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10000000 + "'", int43 == 10000000);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 30000L + "'", long44 == 30000L);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
    }

    @Test
    public void test01884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01884");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setPollTimeoutMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((long) (short) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
    }

    @Test
    public void test01885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01885");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields50, "hi!");
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, charSequenceSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder62.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder69.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder75.setPollTimeoutMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer79 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer80 = null;
        java.util.regex.Pattern pattern81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer79, charSequenceSerializableDeserializer80, pattern81);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder82.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator83);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc85 = null;
        org.apache.storm.tuple.Fields fields86 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder84.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc85, fields86, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig89 = kafkaSpoutRetryServiceBuilder84.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService90 = kafkaSpoutRetryServiceKafkaSpoutConfig89.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer91 = kafkaSpoutRetryServiceKafkaSpoutConfig89.getValueDeserializer();
        long long92 = kafkaSpoutRetryServiceKafkaSpoutConfig89.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator93 = kafkaSpoutRetryServiceKafkaSpoutConfig89.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder77.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator93);
        org.apache.storm.tuple.Fields fields95 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder97 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator93, fields95, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder99 = kafkaSpoutRetryServiceBuilder57.setMaxPollRecords(10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService90);
        org.junit.Assert.assertNull(charSequenceDeserializer91);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 30000L + "'", long92 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder99);
    }

    @Test
    public void test01886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01886");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder17.setPollTimeoutMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder25.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
    }

    @Test
    public void test01887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01887");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        long long31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService32 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer33 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder40.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRetry(kafkaSpoutRetryService61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder40.setRetry(kafkaSpoutRetryService61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService61);
        java.util.Properties properties65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder15.setProp(properties65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 200L + "'", long31 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService32);
        org.junit.Assert.assertNull(charSequenceDeserializer33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
    }

    @Test
    public void test01888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01888");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        boolean boolean34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder19.setProp(strMap35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder6.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig55 = kafkaSpoutRetryServiceBuilder54.build();
        long long56 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 200L + "'", long56 == 200L);
    }

    @Test
    public void test01889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01889");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
    }

    @Test
    public void test01890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01890");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getOffsetsCommitPeriodMs();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig31.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder17.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder17.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder17.setPollTimeoutMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setMaxPollRecords((int) (byte) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 200L + "'", long34 == 200L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 30000L + "'", long35 == 30000L);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
    }

    @Test
    public void test01891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01891");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder15.build();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
    }

    @Test
    public void test01892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01892");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
    }

    @Test
    public void test01893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01893");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setOffsetCommitPeriodMs((long) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder48.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getTranslator();
        long long55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService56 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer57 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy60 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getFirstPollOffsetStrategy();
        long long61 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder63.setSSLKeystore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 200L + "'", long55 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService56);
        org.junit.Assert.assertNull(charSequenceDeserializer57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator59);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy60 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy60.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 200L + "'", long61 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
    }

    @Test
    public void test01894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01894");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
    }

    @Test
    public void test01895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01895");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        boolean boolean21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test01896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01896");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2000L + "'", long20 == 2000L);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test01897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01897");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, charSequenceSerializableDeserializer12, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strCollectionBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strCollectionSerializableDeserializer8, firstPollOffsetStrategySerializableDeserializer9, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.RandomAccess> strListBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.RandomAccess>("hi!", strListSerializableDeserializer5, randomAccessSerializableDeserializer6, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test01898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01898");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder21.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, charSequenceSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer47 = null;
        java.util.regex.Pattern pattern48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer46, charSequenceSerializableDeserializer47, pattern48);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc52 = null;
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc52, fields53, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder51.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator57, fields58, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder65.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setMaxUncommittedOffsets((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder68.setOffsetCommitPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder72.setMaxUncommittedOffsets((int) (byte) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
    }

    @Test
    public void test01899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01899");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder38.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder31.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder31.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setPollTimeoutMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder55.setSSLKeystore("", "hi!", "");
        java.util.Properties properties62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder55.setProp(properties62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
    }

    @Test
    public void test01900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01900");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> firstPollOffsetStrategyBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("hi!", firstPollOffsetStrategySerializableDeserializer1, kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer2, pattern3);
    }

    @Test
    public void test01901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01901");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder28.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        int int36 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy37);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer41 = null;
        java.util.regex.Pattern pattern42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer40, charSequenceSerializableDeserializer41, pattern42);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc48 = null;
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc48, fields49, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder47.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder47.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer63 = null;
        java.util.regex.Pattern pattern64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer62, charSequenceSerializableDeserializer63, pattern64);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc68 = null;
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc68, fields69, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder67.build();
        java.lang.String str73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getConsumerGroupId();
        long long74 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getPollTimeoutMs();
        boolean boolean75 = kafkaSpoutRetryServiceKafkaSpoutConfig72.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService76 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder56.setRetry(kafkaSpoutRetryService76);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder21.setRetry(kafkaSpoutRetryService76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10000000 + "'", int36 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 200L + "'", long74 == 200L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
    }

    @Test
    public void test01902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01902");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder8.build();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getRetryService();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPollTimeoutMs();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 30000L + "'", long14 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test01903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01903");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test01904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01904");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceBuilderSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> strComparableBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("hi!", strComparableSerializableDeserializer4, kafkaSpoutRetryServiceBuilderSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.reflect.Type> firstPollOffsetStrategyEnumBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.reflect.Type>("", firstPollOffsetStrategyEnumSerializableDeserializer1, typeSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test01905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01905");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setMaxUncommittedOffsets((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder34.build();
        org.apache.storm.kafka.spout.Subscription subscription40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService42 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService43 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getRetryService();
        boolean boolean44 = kafkaSpoutRetryServiceKafkaSpoutConfig39.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService45 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder27.setFirstPollOffsetStrategy(firstPollOffsetStrategy46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder27.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder56.build();
        long long62 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy63 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription64 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getSubscription();
        long long65 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription66 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription67 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy68 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder49.setFirstPollOffsetStrategy(firstPollOffsetStrategy68);
        java.util.Properties properties70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder49.setProp(properties70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNotNull(subscription40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService45);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 200L + "'", long62 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy63 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy63.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 2000L + "'", long65 == 2000L);
        org.junit.Assert.assertNotNull(subscription66);
        org.junit.Assert.assertNotNull(subscription67);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy68 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy68.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
    }

    @Test
    public void test01906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01906");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer6 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> objBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", objSerializableDeserializer5, firstPollOffsetStrategyEnumSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.List<java.lang.String>> strListBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.List<java.lang.String>>("", strListSerializableDeserializer1, strListSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test01907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01907");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder42.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder42.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder37.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder23.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder4.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, charSequenceSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder64.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder72.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc76 = null;
        org.apache.storm.tuple.Fields fields77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc76, fields77, "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer81 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer82 = null;
        java.util.regex.Pattern pattern83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer81, charSequenceSerializableDeserializer82, pattern83);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator85 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder84.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator85);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc87 = null;
        org.apache.storm.tuple.Fields fields88 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder86.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc87, fields88, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig91 = kafkaSpoutRetryServiceBuilder86.build();
        java.lang.String str92 = kafkaSpoutRetryServiceKafkaSpoutConfig91.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator93 = kafkaSpoutRetryServiceKafkaSpoutConfig91.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder79.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator93);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator93);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder97 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((long) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig91);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder97);
    }

    @Test
    public void test01908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01908");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer19);
    }

    @Test
    public void test01909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01909");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.reflect.Type> strListBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.reflect.Type>("", strListSerializableDeserializer1, typeSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01910");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.Class<?> wildcardClass20 = firstPollOffsetStrategy19.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test01911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01911");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer9 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.reflect.GenericDeclaration> genericDeclarationBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.reflect.GenericDeclaration>("hi!", genericDeclarationSerializableDeserializer8, genericDeclarationSerializableDeserializer9, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray15);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test01912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01912");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder27.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder46.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        int int54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getMaxUncommittedOffsets();
        long long55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getOffsetsCommitPeriodMs();
        java.lang.String str56 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer57 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder35.setProp(strMap58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder12.setProp(strMap58);
        java.lang.Class<?> wildcardClass61 = kafkaSpoutRetryServiceBuilder60.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10000000 + "'", int54 == 10000000);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 30000L + "'", long55 == 30000L);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(charSequenceDeserializer57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test01913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01913");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator32);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc34 = null;
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc34, fields35, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getTranslator();
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator39, fields40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder26.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc51 = null;
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc51, fields52, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig55 = kafkaSpoutRetryServiceBuilder50.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getTranslator();
        long long57 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService58 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer59 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getTranslator();
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator60, fields61);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer64 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer65 = null;
        java.util.regex.Pattern pattern66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer64, charSequenceSerializableDeserializer65, pattern66);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator68);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc70 = null;
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc70, fields71, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig74 = kafkaSpoutRetryServiceBuilder69.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getTranslator();
        long long76 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getPollTimeoutMs();
        long long77 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getPollTimeoutMs();
        long long78 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getOffsetsCommitPeriodMs();
        java.lang.String str79 = kafkaSpoutRetryServiceKafkaSpoutConfig74.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getKafkaProps();
        int int81 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getMaxUncommittedOffsets();
        java.lang.String str82 = kafkaSpoutRetryServiceKafkaSpoutConfig74.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator83 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getTranslator();
        org.apache.storm.tuple.Fields fields84 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator83, fields84);
        org.apache.storm.tuple.Fields fields86 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator83, fields86, "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 200L + "'", long57 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService58);
        org.junit.Assert.assertNull(charSequenceDeserializer59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 200L + "'", long76 == 200L);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 200L + "'", long77 == 200L);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 30000L + "'", long78 == 30000L);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10000000 + "'", int81 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
    }

    @Test
    public void test01914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01914");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(charSequenceDeserializer12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test01915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01915");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setMaxRetries((int) (short) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setProp("hi!", (java.lang.Object) strBuilder23);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder29.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder40.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc60 = null;
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc60, fields61, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder59.build();
        java.lang.String str65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator66, fields67, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator66, fields71, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder24.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setGroupId("hi!");
        java.util.Properties properties79 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder76.setProp(properties79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
    }

    @Test
    public void test01916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01916");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("");
        java.lang.Class<?> wildcardClass22 = kafkaSpoutRetryServiceBuilder19.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test01917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01917");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.String> strMapBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.String>("", strMapSerializableDeserializer1, strSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01918");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder28.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder28.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder39.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder19.setProp(strMap41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setSSLKeystore("", "", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
    }

    @Test
    public void test01919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01919");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        int int38 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getMaxUncommittedOffsets();
        long long39 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getOffsetsCommitPeriodMs();
        java.lang.String str40 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer41 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer42 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService43 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder21.setRetry(kafkaSpoutRetryService43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setPartitionRefreshPeriodMs(0L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10000000 + "'", int38 == 10000000);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 30000L + "'", long39 == 30000L);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(charSequenceDeserializer41);
        org.junit.Assert.assertNull(charSequenceDeserializer42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
    }

    @Test
    public void test01920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01920");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder4.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setOffsetCommitPeriodMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder4.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setOffsetCommitPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc50 = null;
        org.apache.storm.tuple.Fields fields51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc50, fields51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
    }

    @Test
    public void test01921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01921");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(charSequenceDeserializer12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertNull(charSequenceDeserializer14);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
    }

    @Test
    public void test01922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01922");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long24 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000000 + "'", int20 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 30000L + "'", long22 == 30000L);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 30000L + "'", long24 == 30000L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2000L + "'", long25 == 2000L);
    }

    @Test
    public void test01923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01923");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig24 = kafkaSpoutRetryServiceBuilder19.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getTranslator();
        long long26 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getPollTimeoutMs();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getPollTimeoutMs();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getOffsetsCommitPeriodMs();
        java.lang.String str29 = kafkaSpoutRetryServiceKafkaSpoutConfig24.toString();
        java.lang.String str30 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getConsumerGroupId();
        boolean boolean31 = kafkaSpoutRetryServiceKafkaSpoutConfig24.isConsumerAutoCommitMode();
        java.lang.String str32 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer33 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder12.setProp(strMap34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder12.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 200L + "'", long26 == 200L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 30000L + "'", long28 == 30000L);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(charSequenceDeserializer33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
    }

    @Test
    public void test01924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01924");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder9.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc32 = null;
        org.apache.storm.tuple.Fields fields33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc32, fields33, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder31.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getPollTimeoutMs();
        boolean boolean39 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        java.lang.String str40 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder4.setRetry(kafkaSpoutRetryService41);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc51 = null;
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc51, fields52, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig55 = kafkaSpoutRetryServiceBuilder50.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getTranslator();
        long long57 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService58 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer59 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer60 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder4.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getKafkaProps();
        java.lang.String str66 = kafkaSpoutRetryServiceKafkaSpoutConfig64.toString();
        long long67 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getPollTimeoutMs();
        java.lang.String str68 = kafkaSpoutRetryServiceKafkaSpoutConfig64.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 200L + "'", long38 == 200L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 200L + "'", long57 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService58);
        org.junit.Assert.assertNull(charSequenceDeserializer59);
        org.junit.Assert.assertNull(charSequenceDeserializer60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 200L + "'", long67 == 200L);
    }

    @Test
    public void test01925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01925");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc42 = null;
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc42, fields43, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig46 = kafkaSpoutRetryServiceBuilder41.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields48, "hi!");
        org.apache.storm.tuple.Fields fields51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder10.setPartitionRefreshPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder10.setMaxRetries(1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
    }

    @Test
    public void test01926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01926");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.Collection<java.lang.String> strCollection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strCollection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01927");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc30 = null;
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder29.build();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        long long37 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getPartitionRefreshPeriodMs();
        boolean boolean38 = kafkaSpoutRetryServiceKafkaSpoutConfig34.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator40, fields42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder43.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder46.setSSLTruststore("", "");
        java.lang.Class<?> wildcardClass52 = kafkaSpoutRetryServiceBuilder51.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 200L + "'", long35 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 2000L + "'", long37 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test01928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01928");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder21.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder24.build();
        java.lang.String str26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
    }

    @Test
    public void test01929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01929");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder33.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, charSequenceSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator54);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc56 = null;
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc56, fields57, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig60 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getTranslator();
        long long62 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getPollTimeoutMs();
        boolean boolean63 = kafkaSpoutRetryServiceKafkaSpoutConfig60.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder46.setProp(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder8.setProp(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setOffsetCommitPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setPartitionRefreshPeriodMs((long) (short) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 200L + "'", long62 == 200L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
    }

    @Test
    public void test01930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01930");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc45 = null;
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig49 = kafkaSpoutRetryServiceBuilder44.build();
        long long50 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription52 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setOffsetCommitPeriodMs((long) (short) 100);
        java.util.Properties properties59 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder54.setProp(properties59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 200L + "'", long50 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
    }

    @Test
    public void test01931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01931");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer12 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, charSequenceSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList17);
        java.lang.Class<?> wildcardClass27 = strList17.getClass();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test01932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01932");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setGroupId("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
    }

    @Test
    public void test01933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01933");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder14.build();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.toString();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.isConsumerAutoCommitMode();
        boolean boolean20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.isConsumerAutoCommitMode();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10000000 + "'", int21 == 10000000);
    }

    @Test
    public void test01934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01934");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
    }

    @Test
    public void test01935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01935");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs(100L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc18, fields19, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getTranslator();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getPollTimeoutMs();
        java.lang.String str26 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getTranslator();
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator27, fields28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder10.setMaxPartitionFectchBytes((int) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 200L + "'", long25 == 200L);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
    }

    @Test
    public void test01936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01936");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> strListBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>>("", strListSerializableDeserializer1, kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01937");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder15.setPollTimeoutMs(30000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
    }

    @Test
    public void test01938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01938");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder4.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder34.build();
        long long40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription42 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getSubscription();
        int int43 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy44 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getFirstPollOffsetStrategy();
        java.lang.String str46 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getConsumerGroupId();
        boolean boolean47 = kafkaSpoutRetryServiceKafkaSpoutConfig39.isConsumerAutoCommitMode();
        int int48 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getMaxTupleRetries();
        long long49 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.tuple.Fields fields51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator50, fields51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setMaxPollRecords(0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 200L + "'", long40 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy41 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy41.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2147483647 + "'", int43 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy44 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy44.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2147483647 + "'", int48 == 2147483647);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 2000L + "'", long49 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
    }

    @Test
    public void test01939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01939");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer10 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer9, charSequenceSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.lang.Object> cloneableBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.lang.Object>("", cloneableSerializableDeserializer1, objSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test01940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01940");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc42 = null;
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc42, fields43, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig46 = kafkaSpoutRetryServiceBuilder41.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator48, fields49, "hi!");
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator48, fields52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setMaxPartitionFectchBytes(52);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getPollTimeoutMs();
        boolean boolean70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.isConsumerAutoCommitMode();
        java.lang.String str71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy72 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService74 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder55.setRetry(kafkaSpoutRetryService74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy72 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy72.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
    }

    @Test
    public void test01941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01941");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setMaxRetries((int) (short) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder12.setProp("hi!", (java.lang.Object) strBuilder23);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder29.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder40.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc60 = null;
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc60, fields61, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder59.build();
        java.lang.String str65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator66, fields67, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator66, fields71, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setFetchMinBytes(52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
    }

    @Test
    public void test01942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01942");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        boolean boolean23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        int int24 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(charSequenceDeserializer20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483647 + "'", int24 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 30000L + "'", long27 == 30000L);
    }

    @Test
    public void test01943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01943");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc34 = null;
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc34, fields35, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder46.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields53, "hi!");
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields56, "");
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields59);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer63 = null;
        java.util.regex.Pattern pattern64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer62, charSequenceSerializableDeserializer63, pattern64);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc68 = null;
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc68, fields69, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder67.build();
        long long73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy74 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription75 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getSubscription();
        int int76 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy77 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder60.setProp(strMap78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder79.setMaxPollRecords((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder81.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer86 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer87 = null;
        java.util.regex.Pattern pattern88 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer86, charSequenceSerializableDeserializer87, pattern88);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder89.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder91.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder91.setMaxPollRecords((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder81.setProp("hi!", (java.lang.Object) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder99 = kafkaSpoutRetryServiceBuilder81.setSSLKeystore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 200L + "'", long73 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy74 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy74.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483647 + "'", int76 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy77 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy77.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder99);
    }

    @Test
    public void test01944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01944");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.Class<?> wildcardClass20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test01945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01945");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder35.build();
        java.lang.String str41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getValueDeserializer();
        boolean boolean43 = kafkaSpoutRetryServiceKafkaSpoutConfig40.isConsumerAutoCommitMode();
        java.lang.String str44 = kafkaSpoutRetryServiceKafkaSpoutConfig40.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        java.lang.Class<?> wildcardClass47 = kafkaSpoutRetryServiceBuilder28.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(charSequenceDeserializer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test01946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01946");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder13.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setPollTimeoutMs((long) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setMaxRetries((int) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
    }

    @Test
    public void test01947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01947");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc18, fields19, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields37, "hi!");
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder45.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder45.setFetchMinBytes((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setMaxUncommittedOffsets(1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
    }

    @Test
    public void test01948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01948");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc30 = null;
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder29.build();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription37 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getSubscription();
        int int38 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getFirstPollOffsetStrategy();
        java.lang.String str41 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setPollTimeoutMs((long) 10000000);
        java.lang.Class<?> wildcardClass46 = kafkaSpoutRetryServiceBuilder45.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 200L + "'", long35 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2147483647 + "'", int38 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy40 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy40.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test01949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01949");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test01950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01950");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder11.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder19.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder19.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder33.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder28.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder14.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc55 = null;
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc55, fields56, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig59 = kafkaSpoutRetryServiceBuilder54.build();
        long long60 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy61 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription62 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getSubscription();
        long long63 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription64 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getSubscription();
        long long65 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getPartitionRefreshPeriodMs();
        java.lang.String str66 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService67 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder14.setRetry(kafkaSpoutRetryService67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 200L + "'", long60 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy61 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy61.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 2000L + "'", long63 == 2000L);
        org.junit.Assert.assertNotNull(subscription64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 2000L + "'", long65 == 2000L);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
    }

    @Test
    public void test01951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01951");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
    }

    @Test
    public void test01952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01952");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, (java.util.Collection<java.lang.String>) strList38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder41.setRetry(kafkaSpoutRetryService46);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc55 = null;
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc55, fields56, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig59 = kafkaSpoutRetryServiceBuilder54.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getTranslator();
        org.apache.storm.tuple.Fields fields62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator61, fields62, "hi!");
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator61, fields65);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer69 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer70 = null;
        java.util.regex.Pattern pattern71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer69, charSequenceSerializableDeserializer70, pattern71);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator73);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc75 = null;
        org.apache.storm.tuple.Fields fields76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder74.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc75, fields76, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig79 = kafkaSpoutRetryServiceBuilder74.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator80 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getTranslator();
        long long81 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getPollTimeoutMs();
        long long82 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getPollTimeoutMs();
        long long83 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getOffsetsCommitPeriodMs();
        java.lang.String str84 = kafkaSpoutRetryServiceKafkaSpoutConfig79.toString();
        java.lang.String str85 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getConsumerGroupId();
        boolean boolean86 = kafkaSpoutRetryServiceKafkaSpoutConfig79.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder66.setProp("", (java.lang.Object) boolean86);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy88 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder87.setFirstPollOffsetStrategy(firstPollOffsetStrategy88);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder87.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder92.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder94.setMaxPartitionFectchBytes((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder97 = kafkaSpoutRetryServiceBuilder4.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 200L + "'", long81 == 200L);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 200L + "'", long82 == 200L);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 30000L + "'", long83 == 30000L);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy88 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy88.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder97);
    }

    @Test
    public void test01953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01953");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder9.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder9.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setProp("", (java.lang.Object) 10.0d);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig23 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer24 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription25 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>>("", strCollectionSerializableDeserializer1, strCollectionSerializableDeserializer2, subscription25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig23);
        org.junit.Assert.assertNull(charSequenceDeserializer24);
        org.junit.Assert.assertNotNull(subscription25);
    }

    @Test
    public void test01954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01954");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        java.lang.String str44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getConsumerGroupId();
        long long45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getPollTimeoutMs();
        java.lang.String str46 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService47 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder10.setProp(strMap48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder49.setSSLTruststore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 200L + "'", long45 == 200L);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
    }

    @Test
    public void test01955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01955");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getRetryService();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        boolean boolean21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription23 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder24.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc41 = null;
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc41, fields42, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig45 = kafkaSpoutRetryServiceBuilder40.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService46 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getRetryService();
        java.lang.String str47 = kafkaSpoutRetryServiceKafkaSpoutConfig45.toString();
        java.lang.String str48 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getConsumerGroupId();
        long long49 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getPartitionRefreshPeriodMs();
        java.lang.String str50 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getConsumerGroupId();
        java.lang.String str51 = kafkaSpoutRetryServiceKafkaSpoutConfig45.toString();
        long long52 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription53 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, subscription53);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc62 = null;
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc62, fields63, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder61.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        long long68 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getPollTimeoutMs();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getPollTimeoutMs();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getOffsetsCommitPeriodMs();
        java.lang.String str71 = kafkaSpoutRetryServiceKafkaSpoutConfig66.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getKafkaProps();
        int int73 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getMaxUncommittedOffsets();
        java.lang.String str74 = kafkaSpoutRetryServiceKafkaSpoutConfig66.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService75 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder54.setRetry(kafkaSpoutRetryService75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder30.setRetry(kafkaSpoutRetryService75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(subscription23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 2000L + "'", long49 == 2000L);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 2000L + "'", long52 == 2000L);
        org.junit.Assert.assertNotNull(subscription53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 200L + "'", long68 == 200L);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 30000L + "'", long70 == 30000L);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10000000 + "'", int73 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
    }

    @Test
    public void test01956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01956");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.lang.Iterable<java.lang.String>> strCollectionBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.lang.Iterable<java.lang.String>>("", strCollectionSerializableDeserializer1, strIterableSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test01957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01957");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder15.setFirstPollOffsetStrategy(firstPollOffsetStrategy31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder39.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder45.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setOffsetCommitPeriodMs((long) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc64 = null;
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc64, fields65, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig68 = kafkaSpoutRetryServiceBuilder63.build();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy70 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription71 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getSubscription();
        int int72 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy73 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder56.setProp(strMap74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder32.setProp(strMap74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setMaxPollRecords(1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy70 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy70.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2147483647 + "'", int72 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy73 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy73.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
    }

    @Test
    public void test01958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01958");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig24 = kafkaSpoutRetryServiceBuilder19.build();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription28 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder12.setProp(strMap29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder34.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc43 = null;
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc43, fields44, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig47 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        int int50 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getMaxUncommittedOffsets();
        long long51 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getOffsetsCommitPeriodMs();
        java.lang.String str52 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer53 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer54 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService55 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder34.setRetry(kafkaSpoutRetryService55);
        java.lang.Class<?> wildcardClass57 = kafkaSpoutRetryServiceBuilder34.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 200L + "'", long25 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10000000 + "'", int50 == 10000000);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 30000L + "'", long51 == 30000L);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(charSequenceDeserializer53);
        org.junit.Assert.assertNull(charSequenceDeserializer54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test01959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01959");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder8.setFetchMinBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setFetchMinBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder22.setMaxRetries(0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
    }

    @Test
    public void test01960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01960");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getOffsetsCommitPeriodMs();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig31.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder17.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setPartitionRefreshPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer43 = null;
        java.util.regex.Pattern pattern44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer42, charSequenceSerializableDeserializer43, pattern44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setFirstPollOffsetStrategy(firstPollOffsetStrategy50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder38.setFirstPollOffsetStrategy(firstPollOffsetStrategy50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setOffsetCommitPeriodMs((long) '4');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 200L + "'", long34 == 200L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 30000L + "'", long35 == 30000L);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy50 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy50.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
    }

    @Test
    public void test01961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01961");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        boolean boolean34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder19.setProp(strMap35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder6.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getPartitionRefreshPeriodMs();
        boolean boolean71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder54.setProp("", (java.lang.Object) boolean71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder72.setBootstrapServers("");
        java.lang.Class<?> wildcardClass75 = kafkaSpoutRetryServiceBuilder72.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 2000L + "'", long70 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test01962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01962");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 30000L + "'", long14 == 30000L);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
    }

    @Test
    public void test01963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01963");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, charSequenceSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", firstPollOffsetStrategyEnumSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test01964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01964");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
    }

    @Test
    public void test01965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01965");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
    }

    @Test
    public void test01966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01966");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, charSequenceSerializableDeserializer12, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strCollectionBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strCollectionSerializableDeserializer8, firstPollOffsetStrategySerializableDeserializer9, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.Iterable<java.lang.String>> firstPollOffsetStrategyBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.Iterable<java.lang.String>>("hi!", firstPollOffsetStrategySerializableDeserializer4, strIterableSerializableDeserializer5, strArray14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test01967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01967");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        boolean boolean17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.lang.Class<?> wildcardClass19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test01968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01968");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setSecurityProtocol("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
    }

    @Test
    public void test01969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01969");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer26 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer25, randomAccessSerializableDeserializer26, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer22, randomAccessSerializableDeserializer23, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService> typeBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", typeSerializableDeserializer17, kafkaSpoutRetryServiceSerializableDeserializer18, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.Subscription> strIterableBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.Subscription>("hi!", strIterableSerializableDeserializer14, subscriptionSerializableDeserializer15, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.reflect.Type> strMapBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.reflect.Type>("hi!", strMapSerializableDeserializer11, typeSerializableDeserializer12, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, charSequenceSerializableDeserializer9, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.reflect.AnnotatedElement> strBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.reflect.AnnotatedElement>("hi!", strSerializableDeserializer1, annotatedElementSerializableDeserializer2, strArray28);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test01970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01970");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        boolean boolean17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNull(charSequenceDeserializer20);
    }

    @Test
    public void test01971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01971");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxPollRecords((int) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
    }

    @Test
    public void test01972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01972");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test01973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01973");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        boolean boolean17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test01974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01974");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder34.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder37.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer43 = null;
        java.util.regex.Pattern pattern44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer42, charSequenceSerializableDeserializer43, pattern44);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder45.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer54 = null;
        java.util.regex.Pattern pattern55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer53, charSequenceSerializableDeserializer54, pattern55);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder56.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder56.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setFirstPollOffsetStrategy(firstPollOffsetStrategy65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder51.setFirstPollOffsetStrategy(firstPollOffsetStrategy65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy68 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setFirstPollOffsetStrategy(firstPollOffsetStrategy68);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer71 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer72 = null;
        java.util.regex.Pattern pattern73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer71, charSequenceSerializableDeserializer72, pattern73);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator75);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc77 = null;
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc77, fields78, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig81 = kafkaSpoutRetryServiceBuilder76.build();
        java.lang.String str82 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer83 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getValueDeserializer();
        boolean boolean84 = kafkaSpoutRetryServiceKafkaSpoutConfig81.isConsumerAutoCommitMode();
        java.lang.String str85 = kafkaSpoutRetryServiceKafkaSpoutConfig81.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator86 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator86);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator86);
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator86, fields89);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder21.setPollTimeoutMs((long) (short) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy65 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy65.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy68 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy68.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(charSequenceDeserializer83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
    }

    @Test
    public void test01975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01975");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder42.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder42.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder37.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder23.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder4.setRetry(kafkaSpoutRetryService53);
        java.lang.Class<?> wildcardClass58 = kafkaSpoutRetryServiceBuilder57.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test01976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01976");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc18, fields19, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getTranslator();
        long long24 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getPollTimeoutMs();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setProp(strMap26);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder41.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder41.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder41.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder57.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc62 = null;
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc62, fields63, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder61.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer69 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer70 = null;
        java.util.regex.Pattern pattern71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer69, charSequenceSerializableDeserializer70, pattern71);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator73);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc75 = null;
        org.apache.storm.tuple.Fields fields76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder74.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc75, fields76, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig79 = kafkaSpoutRetryServiceBuilder74.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator80 = kafkaSpoutRetryServiceKafkaSpoutConfig79.getTranslator();
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator80, fields81, "hi!");
        org.apache.storm.tuple.Fields fields84 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator80, fields84, "");
        org.apache.storm.tuple.Fields fields87 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator80, fields87);
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator80, fields89, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder27.setSSLTruststore("hi!", "hi!");
        java.lang.Class<?> wildcardClass95 = kafkaSpoutRetryServiceBuilder94.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 200L + "'", long24 == 200L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 200L + "'", long25 == 200L);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test01977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01977");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, charSequenceSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc64 = null;
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc64, fields65, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder63.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer71 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer72 = null;
        java.util.regex.Pattern pattern73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer71, charSequenceSerializableDeserializer72, pattern73);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator75);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc77 = null;
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc77, fields78, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig81 = kafkaSpoutRetryServiceBuilder76.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator82 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getTranslator();
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator82, fields83, "hi!");
        org.apache.storm.tuple.Fields fields86 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator82, fields86);
        org.apache.storm.tuple.Fields fields88 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator82, fields88);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder91.setSSLKeystore("", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
    }

    @Test
    public void test01978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01978");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getOffsetsCommitPeriodMs();
        int int29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getValueDeserializer();
        java.lang.String str31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(charSequenceDeserializer30);
    }

    @Test
    public void test01979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01979");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.String[]> subscriptionBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.String[]>("hi!", subscriptionSerializableDeserializer4, strArraySerializableDeserializer5, strArray13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test01980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01980");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder10.setMaxRetries((int) (short) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
    }

    @Test
    public void test01981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01981");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000000 + "'", int15 == 10000000);
    }

    @Test
    public void test01982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01982");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
    }

    @Test
    public void test01983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01983");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer8 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> genericDeclarationBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", genericDeclarationSerializableDeserializer7, firstPollOffsetStrategySerializableDeserializer8, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.Iterable<java.lang.String>> strListBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.Iterable<java.lang.String>>("hi!", strListSerializableDeserializer1, strIterableSerializableDeserializer2, strArray16);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test01984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01984");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder32.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder20.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder43.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder43.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setFetchMinBytes((int) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
    }

    @Test
    public void test01985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01985");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc42 = null;
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc42, fields43, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig46 = kafkaSpoutRetryServiceBuilder41.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator48, fields49, "hi!");
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator48, fields52);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc62 = null;
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc62, fields63, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder61.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        long long68 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getPollTimeoutMs();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getPollTimeoutMs();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getOffsetsCommitPeriodMs();
        java.lang.String str71 = kafkaSpoutRetryServiceKafkaSpoutConfig66.toString();
        java.lang.String str72 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getConsumerGroupId();
        boolean boolean73 = kafkaSpoutRetryServiceKafkaSpoutConfig66.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder53.setProp("", (java.lang.Object) boolean73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy75 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setFirstPollOffsetStrategy(firstPollOffsetStrategy75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder76.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder76.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder76.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder76.setBootstrapServers("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 200L + "'", long68 == 200L);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 30000L + "'", long70 == 30000L);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy75 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy75.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
    }

    @Test
    public void test01986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01986");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 30000L + "'", long13 == 30000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test01987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01987");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getPollTimeoutMs();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder8.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setFetchMinBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, strArray57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder58.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, charSequenceSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc69 = null;
        org.apache.storm.tuple.Fields fields70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc69, fields70, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder68.build();
        long long74 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator75);
        org.apache.storm.tuple.Fields fields77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator75, fields77, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder50.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder81.setFetchMinBytes((int) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 200L + "'", long74 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
    }

    @Test
    public void test01988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01988");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer10 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer9, charSequenceSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, charSequenceSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test01989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01989");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder10.setMaxRetries((int) (byte) -1);
        java.util.Properties properties16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder10.setProp(properties16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
    }

    @Test
    public void test01990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01990");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray4);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder22.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc43 = null;
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc43, fields44, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig47 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator48, fields49, "");
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator48, fields52, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder5.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getPollTimeoutMs();
        java.lang.String str71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder5.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer78 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer79 = null;
        java.util.regex.Pattern pattern80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer78, charSequenceSerializableDeserializer79, pattern80);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder81.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder81.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder81.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc88 = null;
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder87.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc88, fields89);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder90.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder92.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder94.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder98 = kafkaSpoutRetryServiceBuilder96.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder99 = kafkaSpoutRetryServiceBuilder73.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder98);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 200L + "'", long70 == 200L);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder98);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder99);
    }

    @Test
    public void test01991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01991");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder33.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder42.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, charSequenceSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator51);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc53 = null;
        org.apache.storm.tuple.Fields fields54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc53, fields54, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig57 = kafkaSpoutRetryServiceBuilder52.build();
        java.lang.String str58 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getTranslator();
        org.apache.storm.tuple.Fields fields60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator59, fields60, "hi!");
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator59, fields63, "hi!");
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator59, fields66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder69.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
    }

    @Test
    public void test01992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01992");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer11 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]> strListBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer10, strArraySerializableDeserializer11, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.Collection<java.lang.String>> kafkaSpoutRetryServiceRecordTranslatorBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.Collection<java.lang.String>>("hi!", kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer2, strCollectionSerializableDeserializer3, strArray15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test01993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01993");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test01994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01994");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.Class<?> wildcardClass20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test01995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01995");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder17.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxUncommittedOffsets((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setPartitionRefreshPeriodMs(30000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setMaxPartitionFectchBytes(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
    }

    @Test
    public void test01996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01996");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription15);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        long long29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        long long31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPartitionRefreshPeriodMs();
        boolean boolean32 = kafkaSpoutRetryServiceKafkaSpoutConfig28.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator34, fields35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setGroupId("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 200L + "'", long29 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 2000L + "'", long31 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
    }

    @Test
    public void test01997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01997");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test01998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01998");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
    }

    @Test
    public void test01999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01999");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setMaxPollRecords((int) (short) 1);
        java.lang.Class<?> wildcardClass16 = kafkaSpoutRetryServiceBuilder15.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test02000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test02000");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
    }
}

